com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.Object a -> a
    com.google.ads.AdActivity b -> b
    com.google.ads.d c -> c
    com.google.ads.AdActivity d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.h f -> f
    boolean g -> g
    long h -> h
    android.widget.RelativeLayout i -> i
    com.google.ads.AdActivity j -> j
    boolean k -> k
    com.google.ads.g l -> l
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.g getAdVideoView() -> a
    com.google.ads.h getOpeningAdWebView() -> b
    boolean isShowing() -> c
    void launchAdActivity(com.google.ads.d,com.google.ads.e) -> a
    void a(com.google.ads.d) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.h,boolean,int) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void a() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.google.ads.AdListener -> com.google.ads.b:
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> a
    void onDismissScreen(com.google.ads.Ad) -> b
    void onLeaveApplication(com.google.ads.Ad) -> c
com.google.ads.AdRequest -> com.google.ads.c:
    com.google.ads.AdRequest$Gender a -> b
    java.lang.String b -> c
    java.util.Set c -> d
    boolean d -> e
    java.util.Map e -> f
    android.location.Location f -> g
    boolean g -> h
    boolean h -> i
    java.lang.String TEST_EMULATOR -> a
    java.util.Set i -> j
    void addKeyword(java.lang.String) -> a
    void addExtra(java.lang.String,java.lang.Object) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    void addTestDevice(java.lang.String) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.d:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.e:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.f:
    com.google.ads.AdSize BANNER -> a
    com.google.ads.AdSize IAB_MRECT -> b
    com.google.ads.AdSize IAB_BANNER -> c
    com.google.ads.AdSize IAB_LEADERBOARD -> d
    int a -> e
    int b -> f
    java.lang.String c -> g
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.d a -> a
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> a
com.google.ads.InterstitialAd -> com.google.ads.g:
com.google.ads.a -> com.google.ads.h:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(com.google.ads.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
com.google.ads.aa -> com.google.ads.i:
    boolean a(android.content.Context) -> a
    boolean a(android.content.Intent,android.content.Context) -> a
com.google.ads.ab -> com.google.ads.j:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab$a -> com.google.ads.k:
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.ab$b -> com.google.ads.l:
    com.google.ads.ab$b a -> a
    com.google.ads.ab$b b -> b
    java.lang.String c -> c
    com.google.ads.ab$b[] d -> d
    com.google.ads.ab$b[] values() -> values
    com.google.ads.ab$b valueOf(java.lang.String) -> valueOf
com.google.ads.ab$c -> com.google.ads.m:
    com.google.ads.d a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.b -> com.google.ads.n:
    com.google.ads.c a -> a
    com.google.ads.d b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.c -> com.google.ads.o:
    java.lang.String a -> a
    java.lang.String b -> b
    com.google.ads.b c -> c
    com.google.ads.d d -> d
    com.google.ads.AdRequest e -> e
    android.webkit.WebView f -> f
    java.lang.String g -> g
    java.util.LinkedList h -> h
    boolean i -> i
    com.google.ads.AdRequest$ErrorCode j -> j
    boolean k -> k
    int l -> l
    java.lang.Thread m -> m
    boolean n -> n
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    java.lang.String a(com.google.ads.AdRequest,android.app.Activity) -> a
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void b() -> a
    void a(int) -> a
    void a(boolean) -> a
com.google.ads.c$a -> com.google.ads.p:
    com.google.ads.d b -> b
    android.webkit.WebView c -> c
    com.google.ads.b d -> d
    com.google.ads.AdRequest$ErrorCode e -> e
    boolean f -> f
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$b -> com.google.ads.q:
    com.google.ads.c a -> a
com.google.ads.c$c -> com.google.ads.r:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$d -> com.google.ads.s:
    com.google.ads.c a -> a
com.google.ads.c$e -> com.google.ads.t:
    com.google.ads.d b -> b
    java.util.LinkedList c -> c
    int d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.d -> com.google.ads.u:
    java.lang.Object a -> a
    java.lang.ref.WeakReference b -> b
    com.google.ads.Ad c -> c
    com.google.ads.AdListener d -> d
    com.google.ads.c e -> e
    com.google.ads.AdRequest f -> f
    com.google.ads.AdSize g -> g
    com.google.ads.f h -> h
    java.lang.String i -> i
    com.google.ads.h j -> j
    com.google.ads.i k -> k
    android.os.Handler l -> l
    long m -> m
    boolean n -> n
    boolean o -> o
    android.content.SharedPreferences p -> p
    long q -> q
    com.google.ads.x r -> r
    boolean s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    void a(java.lang.String) -> a
    void a(java.util.LinkedList) -> a
    void a() -> a
    void c() -> b
    void d() -> c
    android.app.Activity e() -> d
    com.google.ads.Ad f() -> e
    com.google.ads.c g() -> f
    java.lang.String h() -> g
    com.google.ads.h i() -> h
    com.google.ads.i j() -> i
    com.google.ads.AdSize k() -> j
    com.google.ads.f l() -> k
    void a(int) -> a
    int m() -> l
    long n() -> m
    boolean A() -> v
    boolean p() -> n
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void q() -> o
    void r() -> p
    void s() -> q
    void t() -> r
    void u() -> s
    void v() -> w
    boolean w() -> t
    void B() -> x
    void a(java.lang.Runnable) -> a
    void x() -> u
    void a(com.google.ads.AdListener) -> a
    void a(long) -> a
    void a(float) -> a
    void b(long) -> b
com.google.ads.e -> com.google.ads.v:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.f -> com.google.ads.w:
    java.util.LinkedList b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String a -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    long h() -> h
    long i() -> i
    java.lang.String j() -> j
    void a(java.lang.String) -> a
    boolean k() -> k
    void l() -> l
    boolean m() -> m
    void n() -> n
    void o() -> o
    java.lang.String p() -> p
    void b(java.lang.String) -> b
com.google.ads.g -> com.google.ads.x:
    java.lang.ref.WeakReference b -> b
    com.google.ads.h c -> c
    android.widget.MediaController a -> a
    long d -> d
    android.widget.VideoView e -> e
    java.lang.String f -> f
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void b() -> b
    void c() -> c
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void d() -> d
    void e() -> e
com.google.ads.g$a -> com.google.ads.y:
    java.lang.ref.WeakReference a -> a
    android.os.Handler b -> b
    void run() -> run
    void a() -> a
com.google.ads.h -> com.google.ads.z:
    java.lang.ref.WeakReference a -> a
    com.google.ads.AdSize b -> b
    void a() -> a
    com.google.ads.AdActivity b() -> b
    void a(com.google.ads.AdActivity) -> a
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void onMeasure(int,int) -> onMeasure
com.google.ads.i -> com.google.ads.aa:
    com.google.ads.d a -> a
    java.util.Map b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a() -> a
    void b() -> b
    void c() -> c
com.google.ads.j -> com.google.ads.ab:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.k -> com.google.ads.ac:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.l -> com.google.ads.ad:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.m -> com.google.ads.ae:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.n -> com.google.ads.af:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.o -> com.google.ads.ag:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.ah:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.ai:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.aj:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.a.a:
    java.lang.String a -> b
    int b -> c
    android.util.Pair c -> d
    int d -> e
    int e -> f
    int f -> g
    java.lang.String g -> h
    int h -> i
    int i -> j
    com.google.ads.searchads.SearchAdRequest$BorderType j -> k
    int k -> l
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.a.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.ak:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.al:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.a -> com.google.ads.util.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b -> com.google.ads.util.c:
    boolean a -> a
    java.lang.String a(byte[]) -> a
com.google.ads.util.b$a -> com.google.ads.util.d:
    byte[] a -> a
    int b -> b
com.google.ads.util.b$b -> com.google.ads.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int) -> a
com.google.ads.util.c -> com.google.ads.util.f:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
com.google.ads.v -> com.google.ads.am:
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.an:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.google.ads.x -> com.google.ads.ao:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.y -> com.google.ads.ap:
    android.net.Uri a -> a
    android.net.Uri b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.google.ads.z -> com.google.ads.aq:
    void a(android.webkit.WebView,boolean) -> a
com.google.ads.z$a -> com.google.ads.ar:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.z$b -> com.google.ads.as:
    java.lang.ref.WeakReference a -> a
    android.webkit.WebView b -> b
    java.lang.String c -> c
    void run() -> run
com.google.ads.z$c -> com.google.ads.at:
    boolean a -> a
    android.webkit.WebView b -> b
    void run() -> run
com.google.android.apps.analytics.AdHitIdGenerator -> com.google.android.apps.analytics.a:
    boolean adMobSdkInstalled -> a
    int getAdHitId() -> a
com.google.android.apps.analytics.AdMobInfo -> com.google.android.apps.analytics.b:
    com.google.android.apps.analytics.AdMobInfo INSTANCE -> a
    int adHitId -> b
    java.util.Random random -> c
    com.google.android.apps.analytics.AdMobInfo getInstance() -> a
    int generateAdHitId() -> b
com.google.android.apps.analytics.AnalyticsParameterEncoder -> com.google.android.apps.analytics.c:
    java.lang.String encode(java.lang.String,java.lang.String) -> a
com.google.android.apps.analytics.AnalyticsReceiver -> com.google.android.apps.analytics.AnalyticsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.apps.analytics.CustomVariable -> com.google.android.apps.analytics.d:
    int scope -> a
    java.lang.String name -> b
    java.lang.String value -> c
    int index -> d
    int getScope() -> a
    java.lang.String getName() -> b
    java.lang.String getValue() -> c
    int getIndex() -> d
com.google.android.apps.analytics.CustomVariableBuffer -> com.google.android.apps.analytics.e:
    com.google.android.apps.analytics.CustomVariable[] customVariables -> a
    boolean isIndexAvailable(int) -> a
    void setCustomVariable(com.google.android.apps.analytics.CustomVariable) -> a
    com.google.android.apps.analytics.CustomVariable getCustomVariableAt(int) -> b
    com.google.android.apps.analytics.CustomVariable[] getCustomVariableArray() -> a
    void throwOnInvalidIndex(int) -> d
    boolean hasCustomVariables() -> b
    void clearCustomVariableAt(int) -> c
com.google.android.apps.analytics.Dispatcher -> com.google.android.apps.analytics.f:
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void setDryRun(boolean) -> a
com.google.android.apps.analytics.Dispatcher$Callbacks -> com.google.android.apps.analytics.g:
    void hitDispatched(long) -> a
    void dispatchFinished() -> a
com.google.android.apps.analytics.Event -> com.google.android.apps.analytics.h:
    long eventId -> a
    java.lang.String accountId -> b
    int randomVal -> j
    int adHitId -> k
    int timestampFirst -> l
    int timestampPrevious -> m
    int timestampCurrent -> n
    int visits -> o
    int userId -> p
    boolean anonymizeIp -> q
    boolean useServerTime -> r
    java.lang.String category -> c
    java.lang.String action -> d
    java.lang.String label -> e
    int value -> f
    int screenWidth -> g
    int screenHeight -> h
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> i
    com.google.android.apps.analytics.Transaction transaction -> s
    com.google.android.apps.analytics.Item item -> t
    void setRandomVal(int) -> a
    int getRandomVal() -> a
    void setAdHitId(int) -> b
    int getAdHitId() -> b
    void setTimestampFirst(int) -> c
    int getTimestampFirst() -> c
    void setTimestampPrevious(int) -> d
    int getTimestampPrevious() -> d
    void setTimestampCurrent(int) -> e
    int getTimestampCurrent() -> e
    void setVisits(int) -> f
    int getVisits() -> f
    void setUserId(int) -> g
    int getUserId() -> g
    void setAnonymizeIp(boolean) -> a
    boolean getAnonymizeIp() -> h
    void setUseServerTime(boolean) -> b
    boolean getUseServerTime() -> i
    java.lang.String toString() -> toString
    com.google.android.apps.analytics.Transaction getTransaction() -> j
    void setTransaction(com.google.android.apps.analytics.Transaction) -> a
    com.google.android.apps.analytics.Item getItem() -> k
    void setItem(com.google.android.apps.analytics.Item) -> a
    boolean isSessionInitialized() -> l
com.google.android.apps.analytics.GoogleAnalyticsTracker -> com.google.android.apps.analytics.i:
    com.google.android.apps.analytics.GoogleAnalyticsTracker instance -> a
    boolean debug -> b
    boolean dryRun -> c
    boolean anonymizeIp -> d
    boolean useServerTime -> e
    int sampleRate -> f
    java.lang.String accountId -> g
    android.content.Context parent -> h
    android.net.ConnectivityManager connectivityManager -> i
    java.lang.String userAgentProduct -> j
    java.lang.String userAgentVersion -> k
    int dispatchPeriod -> l
    com.google.android.apps.analytics.HitStore hitStore -> m
    com.google.android.apps.analytics.Dispatcher dispatcher -> n
    boolean powerSaveMode -> o
    boolean dispatcherIsBusy -> p
    com.google.android.apps.analytics.AdHitIdGenerator adHitIdGenerator -> q
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> r
    java.util.Map transactionMap -> s
    java.util.Map itemMap -> t
    android.os.Handler handler -> u
    java.lang.Runnable dispatchRunner -> v
    com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance() -> a
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void createEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void maybeScheduleNextDispatch() -> e
    void cancelPendingDispatches() -> f
    boolean dispatch() -> b
    void dispatchFinished() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    boolean getDebug() -> d
    void setDryRun(boolean) -> c
    android.os.Handler access$000(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> a
    com.google.android.apps.analytics.HitStore access$100(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> b
com.google.android.apps.analytics.GoogleAnalyticsTracker$1 -> com.google.android.apps.analytics.j:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks -> com.google.android.apps.analytics.k:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void dispatchFinished() -> a
    void hitDispatched(long) -> a
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1 -> com.google.android.apps.analytics.l:
    com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks this$1 -> a
    void run() -> run
com.google.android.apps.analytics.Hit -> com.google.android.apps.analytics.m:
    java.lang.String hitString -> a
    long hitId -> b
com.google.android.apps.analytics.HitBuilder -> com.google.android.apps.analytics.n:
    void appendStringValue(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendCurrencyValue(java.lang.StringBuilder,java.lang.String,double) -> a
    java.lang.String constructHitRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> a
    java.lang.String getCustomVariableParams(com.google.android.apps.analytics.Event) -> a
    void createX10Project(com.google.android.apps.analytics.CustomVariable[],java.lang.StringBuilder,int) -> a
    java.lang.String x10Escape(java.lang.String) -> a
    java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> b
com.google.android.apps.analytics.HitStore -> com.google.android.apps.analytics.o:
    void putEvent(com.google.android.apps.analytics.Event) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    void deleteHit(long) -> a
    int getNumStoredHits() -> b
    boolean setReferrer(java.lang.String) -> a
    void startNewVisit() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
com.google.android.apps.analytics.Item -> com.google.android.apps.analytics.p:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    java.lang.String itemName -> c
    java.lang.String itemCategory -> d
    double itemPrice -> e
    long itemCount -> f
    java.lang.String getOrderId() -> a
    java.lang.String getItemSKU() -> b
    java.lang.String getItemName() -> c
    java.lang.String getItemCategory() -> d
    double getItemPrice() -> e
    long getItemCount() -> f
com.google.android.apps.analytics.Item$Builder -> com.google.android.apps.analytics.q:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    double itemPrice -> c
    long itemCount -> d
    java.lang.String itemName -> e
    java.lang.String itemCategory -> f
    com.google.android.apps.analytics.Item$Builder setItemName(java.lang.String) -> a
    com.google.android.apps.analytics.Item$Builder setItemCategory(java.lang.String) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Item$Builder) -> a
    java.lang.String access$100(com.google.android.apps.analytics.Item$Builder) -> b
    double access$200(com.google.android.apps.analytics.Item$Builder) -> c
    long access$300(com.google.android.apps.analytics.Item$Builder) -> d
    java.lang.String access$400(com.google.android.apps.analytics.Item$Builder) -> e
    java.lang.String access$500(com.google.android.apps.analytics.Item$Builder) -> f
com.google.android.apps.analytics.NetworkDispatcher -> com.google.android.apps.analytics.r:
    java.lang.String userAgent -> a
    org.apache.http.HttpHost googleAnalyticsHost -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread dispatcherThread -> c
    boolean dryRun -> d
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void setDryRun(boolean) -> a
    boolean isDryRun() -> a
    org.apache.http.HttpHost access$200(com.google.android.apps.analytics.NetworkDispatcher) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread -> com.google.android.apps.analytics.s:
    android.os.Handler handlerExecuteOnDispatcherThread -> a
    com.google.android.apps.analytics.PipelinedRequester pipelinedRequester -> b
    java.lang.String userAgent -> c
    int lastStatusCode -> d
    int maxEventsPerRequest -> e
    long retryInterval -> f
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask currentTask -> g
    com.google.android.apps.analytics.Dispatcher$Callbacks callbacks -> h
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks requesterCallBacks -> i
    com.google.android.apps.analytics.NetworkDispatcher parent -> j
    void onLooperPrepared() -> onLooperPrepared
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask) -> a
    int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> a
    long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> b
    long access$630$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> c
    long access$602$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> d
    com.google.android.apps.analytics.NetworkDispatcher access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> e
    com.google.android.apps.analytics.PipelinedRequester access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> f
    com.google.android.apps.analytics.Dispatcher$Callbacks access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> g
    int access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> h
    java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> i
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks access$1200(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> j
    int access$1002$78cf9110(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> k
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> l
    int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask -> com.google.android.apps.analytics.t:
    java.util.LinkedList hits -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void run() -> run
    com.google.android.apps.analytics.Hit removeNextHit() -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks -> com.google.android.apps.analytics.u:
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void pipelineModeChanged$1385ff() -> a
    void requestSent() -> b
    void serverError(int) -> a
com.google.android.apps.analytics.PersistentHitStore -> com.google.android.apps.analytics.v:
    com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper databaseHelper -> a
    int storeId -> b
    long timestampFirst -> c
    long timestampPrevious -> d
    long timestampCurrent -> e
    int visits -> f
    int numStoredHits -> g
    boolean sessionStarted -> h
    boolean useStoredVisitorVars -> i
    boolean anonymizeIp -> j
    int sampleRate -> k
    java.util.Random random -> l
    com.google.android.apps.analytics.CustomVariableBuffer visitorCVCache -> m
    java.lang.String CREATE_EVENTS_TABLE -> n
    java.lang.String CREATE_SESSION_TABLE -> o
    java.lang.String CREATE_CUSTOM_VARIABLES_TABLE -> p
    java.lang.String CREATE_CUSTOM_VAR_CACHE_TABLE -> q
    java.lang.String CREATE_TRANSACTION_EVENTS_TABLE -> r
    java.lang.String CREATE_ITEM_EVENTS_TABLE -> s
    java.lang.String CREATE_HITS_TABLE -> t
    void deleteHit(long) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    com.google.android.apps.analytics.Hit[] peekHits$7612f821() -> k
    com.google.android.apps.analytics.Event[] peekEvents$3798dea(android.database.sqlite.SQLiteDatabase,int) -> a
    com.google.android.apps.analytics.Transaction getTransaction(long,android.database.sqlite.SQLiteDatabase) -> a
    com.google.android.apps.analytics.Item getItem(long,android.database.sqlite.SQLiteDatabase) -> b
    com.google.android.apps.analytics.CustomVariableBuffer getCustomVariables(long,android.database.sqlite.SQLiteDatabase) -> c
    void putEvent(com.google.android.apps.analytics.Event) -> a
    boolean endTransaction(android.database.sqlite.SQLiteDatabase) -> d
    void putEvent(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase,boolean) -> a
    void writeEventToDatabase(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer,android.database.sqlite.SQLiteDatabase,boolean) -> a
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer() -> l
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer(android.database.sqlite.SQLiteDatabase) -> a
    int getNumStoredHits() -> b
    int getNumStoredHitsFromDb() -> m
    void loadExistingSession(android.database.sqlite.SQLiteDatabase) -> b
    void startNewVisit() -> c
    java.lang.String formatReferrer(java.lang.String) -> b
    com.google.android.apps.analytics.Referrer readCurrentReferrer(android.database.sqlite.SQLiteDatabase) -> e
    boolean setReferrerDatabase(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> a
    boolean setReferrer(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    java.lang.String access$000() -> d
    java.lang.String access$100() -> e
    java.lang.String access$200() -> f
    java.lang.String access$300() -> g
    java.lang.String access$400() -> h
    java.lang.String access$500() -> i
    java.lang.String access$600() -> j
    com.google.android.apps.analytics.CustomVariableBuffer access$702(com.google.android.apps.analytics.PersistentHitStore,com.google.android.apps.analytics.CustomVariableBuffer) -> a
    void access$800$6548677(com.google.android.apps.analytics.PersistentHitStore,com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase) -> a
    boolean access$900(android.database.sqlite.SQLiteDatabase) -> c
com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper -> com.google.android.apps.analytics.w:
    int databaseVersion -> a
    com.google.android.apps.analytics.PersistentHitStore store -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void createCustomVariableTables(android.database.sqlite.SQLiteDatabase) -> a
    void createECommerceTables(android.database.sqlite.SQLiteDatabase) -> b
    void createHitTable(android.database.sqlite.SQLiteDatabase) -> c
    void createReferrerTable(android.database.sqlite.SQLiteDatabase) -> d
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.google.android.apps.analytics.PipelinedRequester -> com.google.android.apps.analytics.x:
    org.apache.http.impl.DefaultHttpClientConnection connection -> a
    com.google.android.apps.analytics.PipelinedRequester$Callbacks callbacks -> b
    int lastStatusCode -> c
    boolean canPipeline -> d
    org.apache.http.HttpHost host -> e
    org.apache.http.conn.scheme.SocketFactory socketFactory -> f
    void sendRequests() -> a
    void finishedCurrentRequests() -> b
    void closeConnection() -> c
com.google.android.apps.analytics.PipelinedRequester$Callbacks -> com.google.android.apps.analytics.y:
    void pipelineModeChanged$1385ff() -> a
    void serverError(int) -> a
    void requestSent() -> b
com.google.android.apps.analytics.Referrer -> com.google.android.apps.analytics.z:
    java.lang.String referrer -> a
    long timeStamp -> b
    int visit -> c
    int index -> d
    java.lang.String getReferrerString() -> a
    long getTimeStamp() -> b
    int getVisit() -> c
    int getIndex() -> d
com.google.android.apps.analytics.Transaction -> com.google.android.apps.analytics.aa:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    java.lang.String getOrderId() -> a
    java.lang.String getStoreName() -> b
    double getTotalCost() -> c
    double getTotalTax() -> d
    double getShippingCost() -> e
com.google.android.apps.analytics.Transaction$Builder -> com.google.android.apps.analytics.ab:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    com.google.android.apps.analytics.Transaction$Builder setStoreName(java.lang.String) -> a
    com.google.android.apps.analytics.Transaction$Builder setTotalTax(double) -> a
    com.google.android.apps.analytics.Transaction$Builder setShippingCost(double) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Transaction$Builder) -> a
    double access$100(com.google.android.apps.analytics.Transaction$Builder) -> b
    java.lang.String access$200(com.google.android.apps.analytics.Transaction$Builder) -> c
    double access$300(com.google.android.apps.analytics.Transaction$Builder) -> d
    double access$400(com.google.android.apps.analytics.Transaction$Builder) -> e
com.google.android.apps.analytics.Utils -> com.google.android.apps.analytics.ac:
    java.lang.String addQueueTimeParameter(java.lang.String,long) -> a
com.google.android.apps.analytics.easytracking.EasyTracker -> com.google.android.apps.analytics.easytracking.a:
    com.google.android.apps.analytics.easytracking.EasyTracker instance -> a
    boolean gaEnabled -> b
    java.lang.String gaAccountId -> c
    int gaDispatchPeriod -> d
    boolean gaDebug -> e
    boolean gaDryRun -> f
    int gaSampleRate -> g
    boolean gaAnonymizeIp -> h
    boolean autoActivityTracking -> i
    int activitiesActive -> j
    boolean sessionNeeded -> k
    android.content.Context gaContext -> l
    java.util.Map activityNameMap -> m
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate tracker -> n
    com.google.android.apps.analytics.easytracking.ParameterLoader parameterFetcher -> o
    java.util.concurrent.LinkedBlockingQueue trackerQueue -> p
    com.google.android.apps.analytics.easytracking.EasyTracker$TrackerThread trackerThread -> q
    java.lang.Object lock -> r
    com.google.android.apps.analytics.easytracking.EasyTracker getTracker() -> a
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate getGoogleAnalyticsTracker() -> d
    void setContext(android.content.Context) -> a
    void trackActivityStart(android.app.Activity) -> a
    void trackActivityRetainNonConfigurationInstance() -> b
    void trackActivityStop$63a22f9() -> c
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void queueToTrackerThreadIfEnabled(java.lang.Runnable) -> a
    boolean access$000(com.google.android.apps.analytics.easytracking.EasyTracker) -> a
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate access$100(com.google.android.apps.analytics.easytracking.EasyTracker) -> b
    boolean access$200(com.google.android.apps.analytics.easytracking.EasyTracker) -> c
    int access$300(com.google.android.apps.analytics.easytracking.EasyTracker) -> d
    boolean access$400(com.google.android.apps.analytics.easytracking.EasyTracker) -> e
    java.lang.String access$500(com.google.android.apps.analytics.easytracking.EasyTracker) -> f
    int access$600(com.google.android.apps.analytics.easytracking.EasyTracker) -> g
    android.content.Context access$700(com.google.android.apps.analytics.easytracking.EasyTracker) -> h
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate access$800(com.google.android.apps.analytics.easytracking.EasyTracker) -> i
    boolean access$900(com.google.android.apps.analytics.easytracking.EasyTracker) -> j
    java.lang.String access$1000(com.google.android.apps.analytics.easytracking.EasyTracker,android.app.Activity) -> a
    java.util.concurrent.LinkedBlockingQueue access$1100(com.google.android.apps.analytics.easytracking.EasyTracker) -> k
com.google.android.apps.analytics.easytracking.EasyTracker$1 -> com.google.android.apps.analytics.easytracking.b:
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$11 -> com.google.android.apps.analytics.easytracking.c:
    java.lang.String val$category -> a
    java.lang.String val$action -> b
    java.lang.String val$label -> c
    int val$value -> d
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> e
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$2 -> com.google.android.apps.analytics.easytracking.d:
    boolean val$startASession -> a
    android.app.Activity val$activity -> b
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> c
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$3 -> com.google.android.apps.analytics.easytracking.e:
    boolean val$sendEvent -> a
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> b
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$TrackerThread -> com.google.android.apps.analytics.easytracking.f:
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate -> com.google.android.apps.analytics.easytracking.g:
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    void setDryRun(boolean) -> c
com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegateImpl -> com.google.android.apps.analytics.easytracking.h:
    com.google.android.apps.analytics.GoogleAnalyticsTracker tracker -> a
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    void setDryRun(boolean) -> c
com.google.android.apps.analytics.easytracking.ParameterLoader -> com.google.android.apps.analytics.easytracking.i:
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    int getInt(java.lang.String,int) -> a
com.google.android.apps.analytics.easytracking.ParameterLoaderImpl -> com.google.android.apps.analytics.easytracking.j:
    android.content.Context ctx -> a
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    int getInt(java.lang.String,int) -> a
com.google.android.apps.analytics.easytracking.TrackedActivity -> com.google.android.apps.analytics.easytracking.TrackedActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onStop() -> onStop
com.google.android.apps.analytics.easytracking.TrackedListActivity -> com.google.android.apps.analytics.easytracking.TrackedListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onStop() -> onStop
com.google.android.vending.licensing.AESObfuscator -> com.google.android.a.a.a:
    byte[] IV -> a
    javax.crypto.Cipher mEncryptor -> b
    javax.crypto.Cipher mDecryptor -> c
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.DeviceLimiter -> com.google.android.a.a.b:
com.google.android.vending.licensing.ILicenseResultListener -> com.google.android.a.a.c:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener$Stub -> com.google.android.a.a.d:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicenseResultListener$Stub$Proxy -> com.google.android.a.a.e:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicensingService -> com.google.android.a.a.f:
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.ILicensingService$Stub -> com.google.android.a.a.g:
    com.google.android.vending.licensing.ILicensingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicensingService$Stub$Proxy -> com.google.android.a.a.h:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.LicenseChecker -> com.google.android.a.a.i:
    java.security.SecureRandom RANDOM -> a
    com.google.android.vending.licensing.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.google.android.vending.licensing.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.lang.String mPackageName -> g
    java.lang.String mVersionCode -> h
    java.util.Set mChecksInProgress -> i
    java.util.Queue mPendingChecks -> j
    java.security.PublicKey generatePublicKey(java.lang.String) -> a
    void checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback) -> a
    void runChecks() -> b
    void finishCheck(com.google.android.vending.licensing.LicenseValidator) -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator) -> b
    void cleanupService() -> c
    void onDestroy() -> a
    java.lang.String getVersionCode(android.content.Context,java.lang.String) -> a
    void access$0(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> a
    void access$1(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> b
    android.os.Handler access$2(com.google.android.vending.licensing.LicenseChecker) -> a
    java.util.Set access$3(com.google.android.vending.licensing.LicenseChecker) -> b
    java.security.PublicKey access$4(com.google.android.vending.licensing.LicenseChecker) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener -> com.google.android.a.a.j:
    com.google.android.vending.licensing.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.google.android.vending.licensing.LicenseChecker this$0 -> a
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
    com.google.android.vending.licensing.LicenseValidator access$0(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> a
    void access$1(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> b
    com.google.android.vending.licensing.LicenseChecker access$2(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener$1 -> com.google.android.a.a.k:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    void run() -> run
com.google.android.vending.licensing.LicenseChecker$ResultListener$2 -> com.google.android.a.a.l:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    int val$responseCode -> b
    java.lang.String val$signedData -> c
    java.lang.String val$signature -> d
    void run() -> run
com.google.android.vending.licensing.LicenseCheckerCallback -> com.google.android.a.a.m:
    void allow(int) -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
com.google.android.vending.licensing.LicenseValidator -> com.google.android.a.a.n:
    com.google.android.vending.licensing.Policy mPolicy -> a
    com.google.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.google.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    com.google.android.vending.licensing.LicenseCheckerCallback getCallback() -> a
    int getNonce() -> b
    java.lang.String getPackageName() -> c
    void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    void handleResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    void handleApplicationError(int) -> a
    void handleInvalidResponse() -> d
com.google.android.vending.licensing.NullDeviceLimiter -> com.google.android.a.a.o:
com.google.android.vending.licensing.Obfuscator -> com.google.android.a.a.p:
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.Policy -> com.google.android.a.a.q:
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    boolean allowAccess() -> a
com.google.android.vending.licensing.PreferenceObfuscator -> com.google.android.a.a.r:
    android.content.SharedPreferences mPreferences -> a
    com.google.android.vending.licensing.Obfuscator mObfuscator -> b
    android.content.SharedPreferences$Editor mEditor -> c
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> b
    void commit() -> a
com.google.android.vending.licensing.ResponseData -> com.google.android.a.a.s:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    java.lang.String toString() -> toString
com.google.android.vending.licensing.ServerManagedPolicy -> com.google.android.a.a.t:
    long mValidityTimestamp -> a
    long mRetryUntil -> b
    long mMaxRetries -> c
    long mRetryCount -> d
    long mLastResponseTime -> e
    int mLastResponse -> f
    com.google.android.vending.licensing.PreferenceObfuscator mPreferences -> g
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    void setRetryCount(long) -> a
    void setValidityTimestamp(java.lang.String) -> a
    void setRetryUntil(java.lang.String) -> b
    void setMaxRetries(java.lang.String) -> c
    boolean allowAccess() -> a
    java.util.Map decodeExtras(java.lang.String) -> d
com.google.android.vending.licensing.ValidationException -> com.google.android.a.a.u:
com.google.android.vending.licensing.util.Base64 -> com.google.android.a.a.a.a:
    byte[] ALPHABET -> b
    byte[] WEBSAFE_ALPHABET -> c
    byte[] DECODABET -> d
    byte[] WEBSAFE_DECODABET -> e
    boolean $assertionsDisabled -> a
    java.lang.String encode(byte[]) -> a
    int decode4to3$355785af(byte[],byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.google.android.vending.licensing.util.Base64DecoderException -> com.google.android.a.a.a.b:
com.larvalabs.svgandroid.ParserHelper -> com.a.a.a:
    char current -> b
    java.lang.CharSequence s -> c
    int pos -> a
    int n -> d
    double[] pow10 -> e
    char read() -> d
    void skipWhitespace() -> a
    void advance() -> b
    void reportUnexpectedCharacterError(char) -> a
    float nextFloat() -> c
com.larvalabs.svgandroid.SVG -> com.a.a.b:
    android.graphics.Picture picture -> a
    android.graphics.RectF bounds -> b
    android.graphics.RectF limits -> c
    void setLimits(android.graphics.RectF) -> a
    android.graphics.Picture getPicture() -> a
com.larvalabs.svgandroid.SVGParseException -> com.a.a.c:
com.larvalabs.svgandroid.SVGParser -> com.a.a.d:
    com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources,int) -> a
    com.larvalabs.svgandroid.SVG parse$2929840(java.io.InputStream,java.lang.Integer,java.lang.Integer) -> a
    com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String) -> c
    java.lang.String getStringAttr(java.lang.String,org.xml.sax.Attributes) -> d
    java.lang.Float getFloatAttr(java.lang.String,org.xml.sax.Attributes,java.lang.Float) -> b
    java.lang.String access$200(java.lang.String,org.xml.sax.Attributes) -> a
    java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float) -> a
    android.graphics.Matrix access$600(java.lang.String) -> a
    java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes) -> b
    com.larvalabs.svgandroid.SVGParser$NumberParse access$900(java.lang.String,org.xml.sax.Attributes) -> c
    android.graphics.Path access$1000(java.lang.String) -> b
com.larvalabs.svgandroid.SVGParser$Gradient -> com.a.a.e:
    java.lang.String id -> a
    java.lang.String xlink -> b
    boolean isLinear -> c
    float x1 -> d
    float y1 -> e
    float x2 -> f
    float y2 -> g
    float x -> h
    float y -> i
    float radius -> j
    java.util.ArrayList positions -> k
    java.util.ArrayList colors -> l
    android.graphics.Matrix matrix -> m
    com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient) -> a
com.larvalabs.svgandroid.SVGParser$NumberParse -> com.a.a.f:
    java.util.ArrayList numbers -> a
    int nextCmd -> b
    java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse) -> a
com.larvalabs.svgandroid.SVGParser$Properties -> com.a.a.g:
    com.larvalabs.svgandroid.SVGParser$StyleSet styles -> a
    org.xml.sax.Attributes atts -> b
    java.lang.String getAttr(java.lang.String) -> a
    java.lang.Integer getHex(java.lang.String) -> b
    java.lang.Float getFloat(java.lang.String) -> c
com.larvalabs.svgandroid.SVGParser$SVGHandler -> com.a.a.h:
    android.graphics.Picture picture -> a
    android.graphics.Canvas canvas -> b
    android.graphics.Paint paint -> c
    android.graphics.RectF rect -> d
    android.graphics.RectF bounds -> e
    android.graphics.RectF limits -> f
    java.lang.Integer searchColor -> g
    java.lang.Integer replaceColor -> h
    boolean whiteMode -> i
    boolean pushed -> j
    java.util.HashMap gradientMap -> k
    java.util.HashMap gradientRefMap -> l
    com.larvalabs.svgandroid.SVGParser$Gradient gradient -> m
    boolean hidden -> n
    int hiddenLevel -> o
    boolean boundsMode -> p
    void setColorSwap(java.lang.Integer,java.lang.Integer) -> a
    void setWhiteMode$1385ff() -> a
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap) -> a
    boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties) -> a
    com.larvalabs.svgandroid.SVGParser$Gradient doGradient(boolean,org.xml.sax.Attributes) -> a
    void doColor(com.larvalabs.svgandroid.SVGParser$Properties,java.lang.Integer,boolean) -> a
    void doLimits(float,float) -> a
    void doLimits(android.graphics.Path) -> a
    void pushTransform(org.xml.sax.Attributes) -> a
    void popTransform() -> b
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.larvalabs.svgandroid.SVGParser$StyleSet -> com.a.a.i:
    java.util.HashMap styleMap -> a
    java.lang.String getStyle(java.lang.String) -> a
pl.mg6.common.FileUtils -> pl.mg6.common.a:
    java.lang.String tryReadFile(java.lang.String) -> a
pl.mg6.common.HtmlEntityEncoder -> pl.mg6.common.b:
    java.util.regex.Pattern WRONG_CHAR -> a
    java.util.regex.Pattern ENTITY -> b
    java.lang.String encode(java.lang.String) -> a
    java.lang.String decode(java.lang.String) -> b
pl.mg6.common.Settings -> pl.mg6.common.c:
    java.lang.String BOARD_INPUT_METHOD_DEFAULT_VALUE -> a
    android.content.SharedPreferences$Editor getSharedPrefsEditor(android.content.Context) -> G
    boolean isConfirmDisconnect(android.content.Context) -> a
    void setConfirmDisconnect$1a552341(android.content.Context) -> b
    boolean isShowGameEndDialog(android.content.Context) -> c
    void setShowGameEndDialog$1a552341(android.content.Context) -> d
    java.lang.String getUsername(android.content.Context) -> e
    java.lang.String getPassword(android.content.Context) -> f
    void setUsernameAndPassword(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean isRememberPassword(android.content.Context) -> g
    int getBoardInputMethod(android.content.Context) -> h
    java.lang.String getBoardColors(android.content.Context) -> i
    boolean isBoardPremove(android.content.Context) -> j
    java.lang.String getSeekTime(android.content.Context) -> k
    java.lang.String getSeekIncrement(android.content.Context) -> l
    java.lang.String getSeekType(android.content.Context) -> m
    boolean isSeekRated(android.content.Context) -> n
    void setSeekData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String getMatchTime(android.content.Context) -> o
    java.lang.String getMatchIncrement(android.content.Context) -> p
    java.lang.String getMatchType(android.content.Context) -> q
    boolean isMatchRated(android.content.Context) -> r
    void setMatchData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> b
    int getSoughtGameType(android.content.Context) -> s
    int getSoughtOpponent(android.content.Context) -> t
    int getSoughtTime(android.content.Context) -> u
    void setSoughtData(android.content.Context,int,int,int) -> a
    boolean isHelpImprove(android.content.Context) -> v
    void addCommand(android.content.Context,java.lang.String) -> a
    java.util.List getFrequentlyUsedCommands(android.content.Context) -> w
    boolean isVibrate(android.content.Context) -> x
    boolean isSound(android.content.Context) -> y
    void saveCurrentGame(android.content.Context,java.util.UUID) -> a
    java.util.UUID loadCurrentGame(android.content.Context) -> z
    void saveCurrentChat(android.content.Context,java.lang.String) -> b
    java.lang.String loadCurrentChat(android.content.Context) -> A
    boolean canShowRate(android.content.Context) -> B
    void setRateClicked(android.content.Context) -> C
    boolean isRegisteredUser(android.content.Context) -> D
    void setRegisteredUser(android.content.Context) -> E
    boolean isPaidApp(android.content.Context) -> F
pl.mg6.common.StringUtils -> pl.mg6.common.d:
    java.util.regex.Pattern FIRST_OR_AFTER_UNDERLINE -> a
    java.lang.String join(java.lang.String,java.lang.String[]) -> a
    java.lang.String underlinedToPascalCase(java.lang.String) -> a
pl.mg6.common.TimeUtils -> pl.mg6.common.e:
    java.lang.String formatTime(int,boolean) -> a
pl.mg6.common.android.AndroidUtils -> pl.mg6.common.android.a:
    java.lang.String getVersionName(android.content.Context) -> a
    int getVersionCode(android.content.Context) -> b
    void linkify(android.widget.TextView[]) -> a
pl.mg6.common.android.BaseActivity -> pl.mg6.common.android.BaseActivity:
    java.lang.String TAG -> a
    java.util.List aliveActivities -> b
    void finalize() -> finalize
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
pl.mg6.common.android.ButtonEx -> pl.mg6.common.android.ButtonEx:
    void setPressed(boolean) -> setPressed
pl.mg6.common.android.ImageListPreference -> pl.mg6.common.android.ImageListPreference:
    int layoutResId -> a
    int entryId -> b
    int imageId -> c
    int checkableId -> d
    int imagesResId -> e
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    int access$0(pl.mg6.common.android.ImageListPreference) -> a
    int access$1(pl.mg6.common.android.ImageListPreference) -> b
    int access$2(pl.mg6.common.android.ImageListPreference) -> c
    int access$3(pl.mg6.common.android.ImageListPreference) -> d
    int access$4(pl.mg6.common.android.ImageListPreference) -> e
pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter -> pl.mg6.common.android.b:
    android.view.LayoutInflater layoutInflater -> b
    java.lang.CharSequence[] values -> c
    java.lang.String selectedValue -> d
    java.lang.CharSequence[] texts -> e
    android.graphics.drawable.Drawable[] images -> f
    android.view.View$OnClickListener listener -> g
    pl.mg6.common.android.ImageListPreference this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    pl.mg6.common.android.ImageListPreference access$0(pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter) -> a
pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter$1 -> pl.mg6.common.android.c:
    pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
pl.mg6.common.android.ListPreferenceEx -> pl.mg6.common.android.ListPreferenceEx:
    void setValue(java.lang.String) -> setValue
    java.lang.CharSequence getSummary() -> getSummary
pl.mg6.common.android.OnSizeChangedListener -> pl.mg6.common.android.d:
    void onSizeChanged$5b6f797d(int) -> a
pl.mg6.common.android.ScrollViewEx -> pl.mg6.common.android.ScrollViewEx:
    pl.mg6.common.android.OnSizeChangedListener onSizeChangedListener -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setOnSizeChangedListener(pl.mg6.common.android.OnSizeChangedListener) -> a
pl.mg6.common.android.ViewUtils -> pl.mg6.common.android.e:
    void setTextAndScroll(android.widget.ScrollView,android.widget.TextView,java.lang.String) -> a
    void centerViewInScroll(android.view.View,android.widget.HorizontalScrollView) -> a
    void centerViewInScroll(android.view.View,android.widget.ScrollView) -> a
pl.mg6.common.android.ViewUtils$1 -> pl.mg6.common.android.f:
    android.widget.TextView val$textView -> a
    android.widget.ScrollView val$scrollView -> b
    void run() -> run
pl.mg6.common.android.ads.BaseAdListener -> pl.mg6.common.android.a.a:
    java.lang.String TAG -> a
    void onDismissScreen(com.google.ads.Ad) -> b
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onLeaveApplication(com.google.ads.Ad) -> c
    void onPresentScreen(com.google.ads.Ad) -> a
pl.mg6.common.android.tracker.TrackedActivity -> pl.mg6.common.android.tracker.TrackedActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackEvent$78a511a1(java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.common.android.tracker.TrackedPreferenceActivity -> pl.mg6.common.android.tracker.TrackedPreferenceActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackEvent$78a511a1(java.lang.String,java.lang.String,boolean) -> a
pl.mg6.common.android.tracker.Tracking -> pl.mg6.common.android.tracker.a:
    java.lang.String[] LABEL_ARRAY_SOURCES -> a
pl.mg6.yafi.BaseFreechessActivity -> pl.mg6.yafi.BaseFreechessActivity:
    java.lang.String TAG -> e
    android.app.AlertDialog disconnectedDialog -> f
    android.os.Handler handler -> a
    pl.mg6.yafi.model.FreechessService$FreechessServiceInterface service -> b
    boolean bindFreechessService -> c
    boolean stopped -> g
    boolean checkLoggedOn -> d
    boolean firstTime -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onContentChanged() -> onContentChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onDisconnected() -> b
    void onGameCreate() -> c
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(pl.mg6.yafi.BaseFreechessActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.BaseFreechessActivity$1 -> pl.mg6.yafi.a:
    long startTime -> b
    pl.mg6.yafi.BaseFreechessActivity this$0 -> a
    void onPresentScreen(com.google.ads.Ad) -> a
    void onLeaveApplication(com.google.ads.Ad) -> c
    void onDismissScreen(com.google.ads.Ad) -> b
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
pl.mg6.yafi.BaseFreechessActivity$2 -> pl.mg6.yafi.b:
    pl.mg6.yafi.BaseFreechessActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
pl.mg6.yafi.BoardActivity -> pl.mg6.yafi.BoardActivity:
    android.app.AlertDialog gameEndDialog -> e
    android.widget.CheckBox showGameEndDialogCheckbox -> f
    pl.mg6.yafi.BoardView boardView -> g
    android.widget.LinearLayout tabs -> h
    android.widget.HorizontalScrollView tabsScrollPortrait -> i
    android.widget.ScrollView tabsScrollLandscape -> j
    android.widget.TextView whiteNameField -> k
    android.widget.TextView whiteRatingField -> l
    android.widget.TextView whiteTimeField -> m
    android.widget.TextView blackNameField -> n
    android.widget.TextView blackRatingField -> o
    android.widget.TextView blackTimeField -> p
    android.widget.TextView resultField -> q
    android.widget.TextView descriptionField -> r
    android.view.View reviewOverlay -> s
    java.lang.Runnable updateTimesCallback -> t
    java.util.List allGamesIds -> u
    java.util.UUID currentGameId -> v
    int currentPosition -> w
    boolean showLag -> x
    boolean premove -> y
    java.util.Queue premoveQueue -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    void onFirstClick(android.view.View) -> onFirstClick
    void onPreviousClick(android.view.View) -> onPreviousClick
    void onNextClick(android.view.View) -> onNextClick
    void onLastClick(android.view.View) -> onLastClick
    void updateViews() -> e
    void updateTimes() -> f
    void positionInCenter(android.view.View) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onGameUpdate(java.util.UUID) -> a
    void addTab(java.util.UUID) -> b
    void onBoardTabClick(android.view.View) -> onBoardTabClick
    void onBoardCloseClick(android.view.View) -> onBoardCloseClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onMove(int,int,int,int) -> a
    void onUnsupportedDrawPicture() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(pl.mg6.yafi.BoardActivity) -> a
    void access$1(pl.mg6.yafi.BoardActivity,android.view.View) -> a
    android.widget.CheckBox access$2(pl.mg6.yafi.BoardActivity) -> b
    void access$3$423d2a3f(pl.mg6.yafi.BoardActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.BoardActivity$1 -> pl.mg6.yafi.c:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void run() -> run
pl.mg6.yafi.BoardActivity$2 -> pl.mg6.yafi.d:
    pl.mg6.yafi.BoardActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.BoardActivity$3 -> pl.mg6.yafi.e:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.BoardActivity$4 -> pl.mg6.yafi.f:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.BoardActivity$5 -> pl.mg6.yafi.g:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
pl.mg6.yafi.BoardActivity$6 -> pl.mg6.yafi.h:
    pl.mg6.yafi.BoardActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.BoardActivity$7 -> pl.mg6.yafi.i:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.BoardView -> pl.mg6.yafi.BoardView:
    java.lang.String TAG -> a
    pl.mg6.yafi.BoardView$OnMoveListener listener -> b
    pl.mg6.yafi.model.data.Position position -> c
    boolean flip -> d
    android.graphics.Paint paint -> e
    android.graphics.RectF rect -> f
    java.util.Map pictures -> g
    java.util.Map bitmaps -> h
    int initFile -> i
    int initRank -> j
    int destFile -> k
    int destRank -> l
    float draggingX -> m
    float draggingY -> n
    int inputMethod -> o
    int lightSquareColor -> p
    int darkSquareColor -> q
    boolean premove -> r
    int state -> s
    void init() -> c
    void setStateNone() -> a
    void setMoveSent() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnMoveListener(pl.mg6.yafi.BoardView$OnMoveListener) -> a
    void setPosition(pl.mg6.yafi.model.data.Position) -> a
    void setFlip(boolean) -> a
    int flip(int) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
pl.mg6.yafi.BoardView$OnMoveListener -> pl.mg6.yafi.j:
    void onMove(int,int,int,int) -> a
    void onUnsupportedDrawPicture() -> d
pl.mg6.yafi.ChallengesActivity -> pl.mg6.yafi.ChallengesActivity:
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter adapterSent -> e
    android.widget.ListView listSent -> f
    android.widget.TextView sentEmptyView -> g
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter adapterReceived -> h
    android.widget.ListView listReceived -> i
    android.widget.TextView recevicedEmptyView -> j
    java.lang.String menuName -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    void onRefreshClick(android.view.View) -> onRefreshClick
    boolean handleMessage(android.os.Message) -> handleMessage
    void onChallengeClick(android.view.View) -> onChallengeClick
    void onCommandClick(android.view.View) -> onCommandClick
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter access$0(pl.mg6.yafi.ChallengesActivity) -> a
    void access$1(pl.mg6.yafi.ChallengesActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ChallengesActivity) -> b
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter access$3(pl.mg6.yafi.ChallengesActivity) -> c
pl.mg6.yafi.ChallengesActivity$1 -> pl.mg6.yafi.k:
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChallengesActivity$2 -> pl.mg6.yafi.l:
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChallengesActivity$ChallengesAdapter -> pl.mg6.yafi.m:
    android.view.LayoutInflater layoutInflater -> b
    int layoutId -> c
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void removeWithName(java.lang.String) -> a
    pl.mg6.yafi.ChallengesActivity access$0(pl.mg6.yafi.ChallengesActivity$ChallengesAdapter) -> a
pl.mg6.yafi.ChallengesActivity$ChallengesAdapter$1 -> pl.mg6.yafi.n:
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
pl.mg6.yafi.ChatActivity -> pl.mg6.yafi.ChatActivity:
    android.widget.ListView outputList -> e
    android.widget.EditText inputField -> f
    android.widget.LinearLayout tabs -> g
    android.widget.HorizontalScrollView tabsScrollPortrait -> h
    android.widget.ScrollView tabsScrollLandscape -> i
    pl.mg6.yafi.ChatActivity$ChatAdapter outputAdapter -> j
    java.util.List allChatIds -> k
    java.lang.String currentChatId -> l
    boolean forceCreate -> m
    java.lang.String menuName -> n
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onPause() -> onPause
    void onSendClick(android.view.View) -> onSendClick
    void onChatItemClick(android.view.View) -> onChatItemClick
    boolean sendMessage() -> d
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onNotLoggedIn(java.lang.String) -> a
    void addTab(java.lang.String) -> b
    void updateViews() -> e
    pl.mg6.yafi.ChatActivity$ChatAdapter access$0(pl.mg6.yafi.ChatActivity) -> a
    void access$1(pl.mg6.yafi.ChatActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ChatActivity) -> b
    java.lang.String access$3(pl.mg6.yafi.ChatActivity) -> c
    boolean access$4(pl.mg6.yafi.ChatActivity) -> d
    void access$5(pl.mg6.yafi.ChatActivity,android.view.View) -> a
    void access$6(pl.mg6.yafi.ChatActivity,java.lang.String) -> b
    void access$7(pl.mg6.yafi.ChatActivity) -> e
pl.mg6.yafi.ChatActivity$1 -> pl.mg6.yafi.o:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChatActivity$2 -> pl.mg6.yafi.p:
    pl.mg6.yafi.ChatActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.ChatActivity$3 -> pl.mg6.yafi.q:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.widget.Button val$tab -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$4 -> pl.mg6.yafi.r:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$5 -> pl.mg6.yafi.s:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$6 -> pl.mg6.yafi.t:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pl.mg6.yafi.ChatActivity$7 -> pl.mg6.yafi.u:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChatActivity$ChatAdapter -> pl.mg6.yafi.v:
    android.view.LayoutInflater layoutInflater -> a
    java.util.List items -> b
    int getCount() -> getCount
    pl.mg6.yafi.model.data.Communication getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setItems(java.util.List) -> a
    void addItem(pl.mg6.yafi.model.data.Communication) -> a
    java.lang.Object getItem(int) -> getItem
pl.mg6.yafi.ConsoleActivity -> pl.mg6.yafi.ConsoleActivity:
    android.widget.TextView outputField -> e
    android.widget.EditText inputField -> f
    pl.mg6.common.android.ScrollViewEx outputScroll -> g
    android.widget.LinearLayout tabs -> h
    java.util.List previousCommands -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean sendCommand() -> d
    void onSendClick(android.view.View) -> onSendClick
    void onPreviousCommandsClick(android.view.View) -> onPreviousCommandsClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean access$0(pl.mg6.yafi.ConsoleActivity) -> a
    android.widget.TextView access$1(pl.mg6.yafi.ConsoleActivity) -> b
    pl.mg6.common.android.ScrollViewEx access$2(pl.mg6.yafi.ConsoleActivity) -> c
    void access$3(pl.mg6.yafi.ConsoleActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.ConsoleActivity$1 -> pl.mg6.yafi.w:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.ConsoleActivity$2 -> pl.mg6.yafi.x:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    void onSizeChanged$5b6f797d(int) -> a
pl.mg6.yafi.ConsoleActivity$2$1 -> pl.mg6.yafi.y:
    pl.mg6.yafi.ConsoleActivity$2 this$1 -> a
    void run() -> run
pl.mg6.yafi.ConsoleActivity$3 -> pl.mg6.yafi.z:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    java.lang.String val$command -> b
    void onClick(android.view.View) -> onClick
pl.mg6.yafi.InformationsActivity -> pl.mg6.yafi.InformationsActivity:
    java.lang.String username -> e
    int state -> f
    int[] notesIds -> g
    int[] currentRatingIds -> h
    int[] gamesIds -> i
    int[] ratingNames -> j
    java.lang.String historicalGameId -> k
    java.lang.String trackingLabel -> l
    android.view.View$OnCreateContextMenuListener contextMenuListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onEntryClick(android.view.View) -> onEntryClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void access$0(pl.mg6.yafi.InformationsActivity,java.lang.String) -> a
    java.lang.String access$1(pl.mg6.yafi.InformationsActivity) -> a
    java.lang.String access$2(pl.mg6.yafi.InformationsActivity) -> b
    void access$3(pl.mg6.yafi.InformationsActivity,java.lang.String) -> b
pl.mg6.yafi.InformationsActivity$1 -> pl.mg6.yafi.aa:
    pl.mg6.yafi.InformationsActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LicenseCheckActivity -> pl.mg6.yafi.LicenseCheckActivity:
    java.lang.String TAG -> a
    com.google.android.vending.licensing.LicenseChecker checker -> b
    android.view.View progressView -> c
    android.view.View errorView -> d
    android.widget.TextView descriptionField -> e
    android.widget.Button goToMarketButton -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onRetryClick(android.view.View) -> onRetryClick
    void onGoToMarketClick(android.view.View) -> onGoToMarketClick
    void checkLicense() -> b
    java.lang.String access$0() -> a
    void access$1(pl.mg6.yafi.LicenseCheckActivity,int) -> a
    void access$2(pl.mg6.yafi.LicenseCheckActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.LicenseCheckActivity$1 -> pl.mg6.yafi.ab:
    pl.mg6.yafi.LicenseCheckActivity this$0 -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
    void allow(int) -> a
pl.mg6.yafi.LicenseCheckActivity$1$1 -> pl.mg6.yafi.ac:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    int val$reason -> b
    void run() -> run
pl.mg6.yafi.LicenseCheckActivity$1$2 -> pl.mg6.yafi.ad:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    int val$errorCode -> b
    void run() -> run
pl.mg6.yafi.LicenseCheckActivity$1$3 -> pl.mg6.yafi.ae:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    void run() -> run
pl.mg6.yafi.ListUsersActivity -> pl.mg6.yafi.ListUsersActivity:
    android.widget.ListView listView -> e
    android.widget.TextView emptyView -> f
    android.widget.ArrayAdapter listAdapter -> g
    boolean received -> h
    java.lang.String menuName -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    android.widget.ArrayAdapter access$0(pl.mg6.yafi.ListUsersActivity) -> a
    void access$1(pl.mg6.yafi.ListUsersActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ListUsersActivity) -> b
pl.mg6.yafi.ListUsersActivity$1 -> pl.mg6.yafi.af:
    pl.mg6.yafi.ListUsersActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pl.mg6.yafi.ListUsersActivity$2 -> pl.mg6.yafi.ag:
    pl.mg6.yafi.ListUsersActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LoginActivity -> pl.mg6.yafi.LoginActivity:
    android.widget.EditText usernameField -> e
    android.widget.EditText passwordField -> f
    android.widget.Button loginButton -> g
    android.widget.Button ficsBanner -> h
    android.app.ProgressDialog connectingDialog -> i
    android.app.AlertDialog unableToLogOnDialog -> j
    java.lang.String unableToLogOnInfo -> k
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onLoginClick(android.view.View) -> onLoginClick
    void initLogin() -> d
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onSendingUsername() -> e
    void onSendingPassword() -> f
    void onLoggedOn() -> g
    void onDisconnected() -> b
    void dismissConnectingDialog() -> h
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onFicsBannerClick(android.view.View) -> onFicsBannerClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.widget.EditText access$0(pl.mg6.yafi.LoginActivity) -> a
    android.widget.Button access$1(pl.mg6.yafi.LoginActivity) -> b
    void access$2(pl.mg6.yafi.LoginActivity) -> c
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState() -> i
    void access$4(pl.mg6.yafi.LoginActivity) -> d
pl.mg6.yafi.LoginActivity$1 -> pl.mg6.yafi.ah:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pl.mg6.yafi.LoginActivity$2 -> pl.mg6.yafi.ai:
    pl.mg6.yafi.LoginActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.LoginActivity$3 -> pl.mg6.yafi.aj:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LoginActivity$4 -> pl.mg6.yafi.ak:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
pl.mg6.yafi.MatchActivity -> pl.mg6.yafi.MatchActivity:
    android.widget.EditText userField -> e
    android.widget.EditText timeField -> f
    android.widget.EditText incrementField -> g
    android.widget.Spinner typeField -> h
    android.widget.CheckBox ratedField -> i
    java.lang.String[] typeIds -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onMatchClick(android.view.View) -> onMatchClick
    boolean handleMessage(android.os.Message) -> handleMessage
pl.mg6.yafi.MenuActivity -> pl.mg6.yafi.MenuActivity:
    android.app.AlertDialog confirmDisconnectDialog -> e
    android.widget.CheckBox confirmDisconnectCheckbox -> f
    android.widget.Button boardButton -> g
    android.view.ViewGroup updateRatePanel -> h
    boolean triedShowRate -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onBoardClick(android.view.View) -> onBoardClick
    void onChatClick(android.view.View) -> onChatClick
    void onSeekClick(android.view.View) -> onSeekClick
    void onSoughtClick(android.view.View) -> onSoughtClick
    void onMatchClick(android.view.View) -> onMatchClick
    void onChallengesClick(android.view.View) -> onChallengesClick
    void onSearchForGameClick(android.view.View) -> onSearchForGameClick
    void onConsoleClick(android.view.View) -> onConsoleClick
    void onUserPrefsClick(android.view.View) -> onUserPrefsClick
    void onNewsMessagesClick(android.view.View) -> onNewsMessagesClick
    void onBackPressed() -> onBackPressed
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void showUpdateInfo() -> d
    void onUpdateRateClick(android.view.View) -> onUpdateRateClick
    void onDisconnected() -> b
    void onGameCreate() -> c
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.widget.CheckBox access$0(pl.mg6.yafi.MenuActivity) -> a
    void access$1$51589fc2(pl.mg6.yafi.MenuActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.MenuActivity$1 -> pl.mg6.yafi.al:
    pl.mg6.yafi.MenuActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.NewsAndMessagesActivity -> pl.mg6.yafi.NewsAndMessagesActivity:
    android.widget.ListView content -> e
    pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter adapter -> f
    int smallestNews -> g
    java.lang.String menuName -> h
    int itemId -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onShowAllMessagesClick(android.view.View) -> onShowAllMessagesClick
    void onShowOlderNewsClick(android.view.View) -> onShowOlderNewsClick
    void onShowAllNewsClick(android.view.View) -> onShowAllNewsClick
    void onMessageClick(android.view.View) -> onMessageClick
    void onNewsClick(android.view.View) -> onNewsClick
    void access$0(pl.mg6.yafi.NewsAndMessagesActivity,java.lang.String) -> a
    void access$1(pl.mg6.yafi.NewsAndMessagesActivity,int) -> a
    java.lang.String access$2(pl.mg6.yafi.NewsAndMessagesActivity) -> a
pl.mg6.yafi.NewsAndMessagesActivity$1 -> pl.mg6.yafi.am:
    pl.mg6.yafi.NewsAndMessagesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter -> pl.mg6.yafi.an:
    android.view.LayoutInflater layoutInflater -> a
    boolean canHaveMessages -> b
    pl.mg6.yafi.model.data.WelcomeData data -> c
    java.util.List messages -> d
    java.util.SortedSet news -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setCanHaveMessages(boolean) -> a
    void setData(pl.mg6.yafi.model.data.WelcomeData) -> a
    void setMessages(java.util.List) -> a
    void removeMessage(int) -> a
    void addNews(java.util.List) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.util.SortedSet access$0(pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter) -> a
pl.mg6.yafi.NewsDetailsActivity -> pl.mg6.yafi.NewsDetailsActivity:
    pl.mg6.yafi.model.data.NewsItem news -> e
    android.view.View loading -> f
    android.widget.TextView date -> g
    android.widget.TextView title -> h
    android.widget.TextView message -> i
    android.widget.TextView author -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onNewsItem(pl.mg6.yafi.model.data.NewsItem) -> a
pl.mg6.yafi.SearchForGameActivity -> pl.mg6.yafi.SearchForGameActivity:
pl.mg6.yafi.SeekActivity -> pl.mg6.yafi.SeekActivity:
    android.widget.EditText timeField -> e
    android.widget.EditText incrementField -> f
    android.widget.Spinner typeField -> g
    android.widget.CheckBox ratedField -> h
    java.lang.String[] typeIds -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSeekClick(android.view.View) -> onSeekClick
    boolean handleMessage(android.os.Message) -> handleMessage
pl.mg6.yafi.SendMessageActivity -> pl.mg6.yafi.SendMessageActivity:
    android.widget.EditText usernameField -> e
    android.widget.EditText messageField -> f
    android.widget.Button sendButton -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onSendClick(android.view.View) -> onSendClick
    android.widget.EditText access$0(pl.mg6.yafi.SendMessageActivity) -> a
    android.widget.EditText access$1(pl.mg6.yafi.SendMessageActivity) -> b
    android.widget.Button access$2(pl.mg6.yafi.SendMessageActivity) -> c
pl.mg6.yafi.SendMessageActivity$1 -> pl.mg6.yafi.ao:
    pl.mg6.yafi.SendMessageActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pl.mg6.yafi.SoughtActivity -> pl.mg6.yafi.SoughtActivity:
    boolean recevingSeeks -> e
    pl.mg6.yafi.SoughtActivity$SoughtAdapter soughtAdapter -> f
    android.widget.GridView soughtList -> g
    android.widget.TextView emptyView -> h
    android.widget.Spinner gameTypeFilter -> i
    java.lang.String[] gameTypeFilterPatterns -> j
    android.widget.Spinner opponentFilter -> k
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] opponentFilterPatterns -> l
    android.widget.Spinner timeFilter -> m
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] timeFilterPatterns -> n
    java.lang.String menuName -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    pl.mg6.yafi.SoughtActivity$SoughtAdapter access$0(pl.mg6.yafi.SoughtActivity) -> a
    java.lang.String[] access$1(pl.mg6.yafi.SoughtActivity) -> b
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] access$2(pl.mg6.yafi.SoughtActivity) -> c
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] access$3(pl.mg6.yafi.SoughtActivity) -> d
    void access$4(pl.mg6.yafi.SoughtActivity,pl.mg6.yafi.model.data.SeekInfo) -> a
    void access$5(pl.mg6.yafi.SoughtActivity,java.lang.String) -> a
    java.lang.String access$6(pl.mg6.yafi.SoughtActivity) -> e
pl.mg6.yafi.SoughtActivity$1 -> pl.mg6.yafi.ap:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$2 -> pl.mg6.yafi.aq:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$3 -> pl.mg6.yafi.ar:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$4 -> pl.mg6.yafi.as:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pl.mg6.yafi.SoughtActivity$5 -> pl.mg6.yafi.at:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.SoughtActivity$SoughtAdapter -> pl.mg6.yafi.au:
    android.view.LayoutInflater layoutInflater -> a
    java.util.List allItems -> b
    java.util.List items -> c
    pl.mg6.yafi.model.data.seek.filters.SeekFilter gameTypeFilter -> d
    pl.mg6.yafi.model.data.seek.filters.SeekFilter oppFilter -> e
    pl.mg6.yafi.model.data.seek.filters.SeekFilter etimeFilter -> f
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    pl.mg6.yafi.model.data.SeekInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    boolean isExpired(int) -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> b
    void add(pl.mg6.yafi.model.data.SeekInfo) -> a
    void addAll(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void removeAll(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void removeAll() -> a
    void setGameTypeFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> a
    void setOpponentFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> b
    void setTimeFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> c
    void refilter() -> b
    java.lang.Object getItem(int) -> getItem
    void access$1(pl.mg6.yafi.SoughtActivity$SoughtAdapter) -> a
pl.mg6.yafi.SoughtActivity$SoughtAdapter$EmptyItemStrategy -> pl.mg6.yafi.av:
    android.view.LayoutInflater layoutInflater -> a
    java.lang.Long expiryTime -> b
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$ItemStrategy -> pl.mg6.yafi.aw:
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$SeekItemStrategy -> pl.mg6.yafi.ax:
    android.view.LayoutInflater layoutInflater -> a
    pl.mg6.yafi.model.data.SeekInfo seekInfo -> b
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$SeekItemStrategy$ViewHolder -> pl.mg6.yafi.ay:
    android.widget.TextView name -> a
    android.widget.TextView rating -> b
    android.widget.TextView type -> c
    android.widget.TextView other -> d
pl.mg6.yafi.UserPreferencesActivity -> pl.mg6.yafi.UserPreferencesActivity:
    android.content.SharedPreferences$OnSharedPreferenceChangeListener listener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0$5fefb1c8(pl.mg6.yafi.UserPreferencesActivity,java.lang.String,java.lang.String,boolean) -> a
    void access$1$5fef71f7(pl.mg6.yafi.UserPreferencesActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.UserPreferencesActivity$1 -> pl.mg6.yafi.az:
    pl.mg6.yafi.UserPreferencesActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
pl.mg6.yafi.YafiActivity -> pl.mg6.yafi.YafiActivity:
    void onCreate(android.os.Bundle) -> onCreate
pl.mg6.yafi.lib.R -> pl.mg6.yafi.a.a:
pl.mg6.yafi.lib.R$array -> pl.mg6.yafi.a.b:
    int types_ids -> a
    int sought_game_types_pattern -> b
pl.mg6.yafi.lib.R$dimen -> pl.mg6.yafi.a.c:
    int console_tab_item_min_width -> a
    int chat_tab_item_min_width -> b
    int console_tab_item_max_width -> c
pl.mg6.yafi.lib.R$id -> pl.mg6.yafi.a.d:
    int sought_item_other -> a
    int seek_type -> b
    int sought_game_type -> c
    int info_finger_rating_crazyhouse_games -> d
    int console_input -> e
    int main_update_rate_text -> f
    int news_details_date -> g
    int board_view -> h
    int info_history_entry_black_rating -> i
    int news_details_loading -> j
    int mi_contact -> k
    int info_finger_rating_bughouse_current -> l
    int messages_show_older -> m
    int challenges_list_received_empty -> n
    int info_no_journal -> o
    int challenges_list_sent_empty -> p
    int challenge_item_type -> q
    int challenges_list_received -> r
    int info_finger_rating_suicide_current -> s
    int chat_item_name -> t
    int challenges_list_sent -> u
    int info_journal_entry_black_rating -> v
    int sought_list -> w
    int info_finger_rating_blitz_games -> x
    int info_journal_entry_white_rating -> y
    int console_output -> z
    int main_update_rate_button -> A
    int info_no_adjourned -> B
    int news_details_message -> C
    int mi_reply -> D
    int board_black_time -> E
    int info_finger_note_10 -> F
    int chat_tabs_scroll_portrait -> G
    int board_tabs -> H
    int match_type -> I
    int info_finger_rating_wild_current -> J
    int board_tabs_scroll_portrait -> K
    int info_finger_rating_blitz_current -> L
    int mi_inchannel -> M
    int info_finger_rating_lightning_current -> N
    int info_finger_rating_standard_current -> O
    int chat_input -> P
    int info_history_entry_black_name -> Q
    int board_tab_desc -> R
    int board_review_overlay -> S
    int info_finger_rating_lightning_games -> T
    int login_password -> U
    int info_finger_rating_atomic_current -> V
    int console_output_scroll -> W
    int info_finger_rating_losers_games -> X
    int info_adjourned_entry_white_strength -> Y
    int challenge_item_increment -> Z
    int board_black_rating -> aa
    int mi_info -> ab
    int news_details_author -> ac
    int login_submit -> ad
    int info_history_entry_white_rating -> ae
    int mi_observe_standard -> af
    int news_details_title -> ag
    int dont_ask_again_checkbox -> ah
    int info_adjourned_loading -> ai
    int mi_abort -> aj
    int board_description -> ak
    int info_journal_entry_result -> al
    int sought_empty_view -> am
    int seek_time -> an
    int info_finger_rating_standard_games -> ao
    int seek_rated -> ap
    int board_white_rating -> aq
    int mi_register -> ar
    int info_history_entry_time -> as
    int console_tabs -> at
    int news_item_title -> au
    int info_finger_stub -> av
    int match_time -> aw
    int license_check_description -> ax
    int info_finger_rating_losers_current -> ay
    int mi_homepage -> az
    int mi_unexamine -> aA
    int mi_review -> aB
    int info_finger_titles -> aC
    int board_tab_update -> aD
    int license_check_error -> aE
    int info_adjourned_entry_white_name -> aF
    int mi_match -> aG
    int info_adjourned_entry_black_strength -> aH
    int board_white_name -> aI
    int mi_delete -> aJ
    int mi_flip -> aK
    int info_journal_entry_white_name -> aL
    int ad_view -> aM
    int sought_item_type -> aN
    int mi_draw -> aO
    int sought_item_name -> aP
    int board_white_time -> aQ
    int empty -> aR
    int challenge_item_time -> aS
    int info_journal_entry_black_name -> aT
    int info_private_journal -> aU
    int messages_show_all -> aV
    int info_adjourned_entry_black_name -> aW
    int challenge_item_who -> aX
    int sought_item_rating -> aY
    int send_message_username -> aZ
    int mi_issue_tracker -> ba
    int board_tabs_scroll_landscape -> bb
    int login_username -> bc
    int chat_item_time -> bd
    int info_vars_interface -> be
    int mi_examine -> bf
    int info_no_history -> bg
    int info_finger_rating_suicide_games -> bh
    int info_journal_entry_increment -> bi
    int info_username -> bj
    int mi_reset_password -> bk
    int message_item_content -> bl
    int info_journal_entry_time -> bm
    int message_item_date -> bn
    int board_result -> bo
    int info_journal_stub -> bp
    int info_finger_note_6 -> bq
    int chat_tabs_scroll_landscape -> br
    int info_finger_note_7 -> bs
    int info_finger_rating_atomic_games -> bt
    int info_finger_note_4 -> bu
    int info_finger_note_5 -> bv
    int match_user -> bw
    int info_finger_note_2 -> bx
    int info_adjourned_stub -> by
    int info_history_entry_result -> bz
    int info_finger_note_3 -> bA
    int info_finger_note_1 -> bB
    int info_journal_loading -> bC
    int match_increment -> bD
    int challenge_item_rated -> bE
    int send_message_send -> bF
    int message_item_from -> bG
    int info_finger_note_9 -> bH
    int info_finger_note_8 -> bI
    int info_history_stub -> bJ
    int chat_output -> bK
    int chat_tabs -> bL
    int match_rated -> bM
    int mg_examine -> bN
    int info_adjourned_entry_increment -> bO
    int info_finger_rating_bughouse_games -> bP
    int sought_time -> bQ
    int info_adjourned_entry_time -> bR
    int mi_preferences -> bS
    int info_unreg_journal -> bT
    int mi_chat -> bU
    int info_vars_stub -> bV
    int info_finger_rating_wild_games -> bW
    int main_board -> bX
    int login_fics_banner -> bY
    int main_update_rate_panel -> bZ
    int mi_resign -> ca
    int license_check_go_to_market -> cb
    int mg_observe -> cc
    int board_tab_close -> cd
    int info_history_entry_increment -> ce
    int news_messages_list -> cf
    int license_check_progress -> cg
    int seek_increment -> ch
    int send_message_message -> ci
    int mi_unobserve -> cj
    int mg_play -> ck
    int info_finger_rating_crazyhouse_current -> cl
    int news_item_date -> cm
    int info_finger_vars_loading -> cn
    int mi_observe_blitz -> co
    int info_history_entry_white_name -> cp
    int chat_item_message -> cq
    int list -> cr
    int sought_opponent -> cs
    int info_history_loading -> ct
    int board_black_name -> cu
pl.mg6.yafi.lib.R$layout -> pl.mg6.yafi.a.e:
    int news_show_all_item -> a
    int messages_no_new_item -> b
    int license_check_view -> c
    int info_adjourned_entry -> d
    int send_message_view -> e
    int messages_no_item -> f
    int common_item_loading -> g
    int challenge_received_item -> h
    int chat_view -> i
    int chat_item -> j
    int info_view -> k
    int dont_ask_again -> l
    int sought_view -> m
    int news_item -> n
    int message_item -> o
    int board_view -> p
    int messages_only_registered_can_have_messages_item -> q
    int news_no_new_item -> r
    int listusers_view -> s
    int board_tab -> t
    int challenge_sent_item -> u
    int sought_item_empty -> v
    int console_view -> w
    int info_history_entry -> x
    int login_view -> y
    int news_messages_view -> z
    int main_view -> A
    int messages_show_all_item -> B
    int challenges_view -> C
    int news_title_item -> D
    int match_view -> E
    int info_journal_entry -> F
    int seek_view -> G
    int messages_title_item -> H
    int sought_item -> I
    int news_details_view -> J
pl.mg6.yafi.lib.R$menu -> pl.mg6.yafi.a.f:
    int fics_banner -> a
    int message_item -> b
    int chat_tab_channel -> c
    int chat_item_without_chat -> d
    int informations -> e
    int login -> f
    int board -> g
    int chat_item -> h
    int main -> i
pl.mg6.yafi.lib.R$raw -> pl.mg6.yafi.a.g:
    int default_white_king -> a
    int default_black_bishop -> b
    int default_white_bishop -> c
    int default_black_rook -> d
    int default_white_queen -> e
    int default_black_knight -> f
    int default_white_pawn -> g
    int default_black_king -> h
    int default_white_knight -> i
    int default_white_rook -> j
    int tell -> k
    int default_black_pawn -> l
    int move -> m
    int default_black_queen -> n
pl.mg6.yafi.lib.R$string -> pl.mg6.yafi.a.h:
    int title_blind -> a
    int challenges_sent_empty -> b
    int examine -> c
    int enter_username -> d
    int you_are_playing_or_examining -> e
    int getting_sought_items -> f
    int fics -> g
    int type_standard -> h
    int type_losers -> i
    int error_retry -> j
    int ok -> k
    int error_not_licensed -> l
    int title_advisor -> m
    int unable_to_connect -> n
    int rate_yafi -> o
    int title_sr -> p
    int hide_controls -> q
    int title_td -> r
    int illegal_move -> s
    int title_tm -> t
    int type_wild -> u
    int disconnected -> v
    int new_version_available -> w
    int type_blitz -> x
    int you_may_not_announce -> y
    int challenges_getting -> z
    int draw_offered -> A
    int sending_username -> B
    int yes -> C
    int title_demo -> D
    int error_not_market_managed -> E
    int title_comp -> F
    int if_enjoy_please_rate -> G
    int challenges_received_empty -> H
    int cancel -> I
    int chat -> J
    int sending_password -> K
    int rematch -> L
    int login_as_guest -> M
    int error_invalid_package_name -> N
    int error_missing_permission -> O
    int informations -> P
    int login -> Q
    int title_fm -> R
    int unable_to_log_on -> S
    int title_team -> T
    int invalid_password -> U
    int var_interface -> V
    int error_check_in_progress -> W
    int title_wim -> X
    int type_suicide -> Y
    int match -> Z
    int title_gm -> aa
    int update -> ab
    int error_non_matching_uid -> ac
    int connecting -> ad
    int type_atomic -> ae
    int no_sought_items -> af
    int title_wfm -> ag
    int type_lightning -> ah
    int show_controls -> ai
    int type_crazyhouse -> aj
    int error_unknown_code -> ak
    int title_unreg -> al
    int type_bughouse -> am
    int abort_requested -> an
    int want_to_disconnect_question -> ao
    int title_wgm -> ap
    int title_admin -> aq
    int board_no_game_description -> ar
    int unable_to_connect_message -> as
    int title_im -> at
    int error_invalid_public_key -> au
    int invalid_username -> av
pl.mg6.yafi.lib.R$styleable -> pl.mg6.yafi.a.i:
    int[] ImageListPreference -> a
pl.mg6.yafi.lib.R$xml -> pl.mg6.yafi.a.j:
    int user_prefs -> a
pl.mg6.yafi.model.ConnectionProtocol -> pl.mg6.yafi.model.a:
    int read(byte[]) -> a
    void write(byte[]) -> b
pl.mg6.yafi.model.FreechessConnection -> pl.mg6.yafi.model.b:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessConnection$Listener listener -> b
    java.lang.String username -> c
    java.lang.String password -> d
    java.lang.String interfaceName -> e
    java.lang.String realUsername -> f
    boolean registered -> g
    pl.mg6.yafi.model.FreechessConnection$ConnectionState state -> h
    java.lang.Thread readerThread -> i
    android.os.HandlerThread writerThread -> j
    android.os.Handler writerHandler -> k
    pl.mg6.yafi.model.ConnectionProtocol protocol -> l
    java.lang.StringBuilder readerBuffer -> m
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState -> n
    void connect() -> a
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> b
    boolean isLoggedOn() -> c
    void forceEnd() -> d
    java.lang.String getRealUsername() -> e
    boolean isRegistered() -> f
    void run() -> run
    void loop() -> g
    void parse(byte[],int) -> a
    void send(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void notifyUnableToLogOn(java.lang.String) -> b
    void notifyDisconnected() -> h
    void notifyReceivedOutput(java.lang.String) -> c
    void setListener(pl.mg6.yafi.model.FreechessConnection$Listener) -> a
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState() -> i
pl.mg6.yafi.model.FreechessConnection$1 -> pl.mg6.yafi.model.c:
    pl.mg6.yafi.model.FreechessConnection this$0 -> a
    java.lang.Object[] val$socketAndErrors -> b
    void run() -> run
pl.mg6.yafi.model.FreechessConnection$2 -> pl.mg6.yafi.model.d:
    pl.mg6.yafi.model.FreechessConnection this$0 -> a
    java.lang.Object[] val$socketAndErrors -> b
    void run() -> run
pl.mg6.yafi.model.FreechessConnection$ConnectionState -> pl.mg6.yafi.model.e:
    pl.mg6.yafi.model.FreechessConnection$ConnectionState NotConnected -> a
    pl.mg6.yafi.model.FreechessConnection$ConnectionState Connecting -> b
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterUsernameRequest -> c
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterPasswordRequest -> d
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterNoPasswordRequired -> e
    pl.mg6.yafi.model.FreechessConnection$ConnectionState UnableToLogOn -> f
    pl.mg6.yafi.model.FreechessConnection$ConnectionState LoggedOn -> g
    pl.mg6.yafi.model.FreechessConnection$ConnectionState Disconnected -> h
    pl.mg6.yafi.model.FreechessConnection$ConnectionState[] ENUM$VALUES -> i
    pl.mg6.yafi.model.FreechessConnection$ConnectionState[] values() -> values
    pl.mg6.yafi.model.FreechessConnection$ConnectionState valueOf(java.lang.String) -> valueOf
pl.mg6.yafi.model.FreechessConnection$Listener -> pl.mg6.yafi.model.f:
    void onConnecting() -> a
    void onInvalidUsername() -> b
    void onSendingUsername() -> c
    void onSendingPassword() -> d
    void onInvalidPassword() -> e
    void onUnableToLogOn(java.lang.String) -> a
    void onLoggedOn() -> f
    void onDisconnected() -> g
    void onReceivedOutput(java.lang.String) -> b
pl.mg6.yafi.model.FreechessModel -> pl.mg6.yafi.model.g:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessModel$Listener listener -> b
    java.lang.String output -> c
    java.util.Map activeGames -> d
    java.util.Map allGames -> e
    java.util.Map allCommunication -> f
    int currentVersion -> g
    boolean currentVersionOld -> h
    pl.mg6.yafi.model.data.WelcomeData welcomeData -> i
    boolean yafiFingered -> j
    void setCurrentVersion(int) -> a
    boolean isCurrentVersionOld() -> a
    java.lang.String getOutput() -> b
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> c
    void removeGame(java.util.UUID) -> b
    java.util.List getCommunicationById(java.lang.String) -> a
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllCommunicationIds() -> d
    pl.mg6.yafi.model.data.WelcomeData getWelcomeData() -> e
    boolean parse(java.lang.String) -> b
    void parseGameInfoMove(java.util.regex.Matcher) -> a
    void parseMove(java.util.regex.Matcher) -> b
    void parseGameInfoCreating(java.util.regex.Matcher) -> c
    void parseGameInfoFollowing(java.util.regex.Matcher) -> d
    void parseGameInfoRemovingObserved(java.util.regex.Matcher) -> e
    void parseGameInfoAcceptRemovingObserved(java.util.regex.Matcher) -> f
    void parseSeekInfoSet(java.util.regex.Matcher) -> g
    void parseSeekInfoRemove(java.util.regex.Matcher) -> h
    void parseListInfoShow(java.util.regex.Matcher) -> i
    boolean parseFinger(java.util.regex.Matcher) -> j
    void parseInchannelNumber(java.util.regex.Matcher) -> k
    void parseHandlePrefix(java.util.regex.Matcher) -> l
    void parseWhoIbslwbslx(java.lang.String) -> c
    void parseMotdExtended(java.util.regex.Matcher) -> m
    void parseNews(java.lang.String) -> d
    void parseMessages(java.lang.String) -> e
    void handleCommunication(pl.mg6.yafi.model.data.Communication) -> b
    void notifyGameCreate(java.util.UUID) -> c
    void notifyGameUpdate(java.util.UUID) -> d
    void notifySeekInfoRemove(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void notifyRemoveMatchOfferFrom(java.lang.String) -> f
    void notifyRemoveMatchOfferTo(java.lang.String) -> g
    void setListener(pl.mg6.yafi.model.FreechessModel$Listener) -> a
pl.mg6.yafi.model.FreechessModel$1 -> pl.mg6.yafi.model.h:
    pl.mg6.yafi.model.FreechessModel this$0 -> a
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
pl.mg6.yafi.model.FreechessModel$Listener -> pl.mg6.yafi.model.i:
    void onGameCreate(java.util.UUID) -> a
    void onGameUpdate(java.util.UUID) -> b
    void onIllegalMove() -> h
    void onPendingInfo(pl.mg6.yafi.model.data.PendingInfo) -> a
    void onDrawOffer() -> i
    void onAbortRequest() -> j
    void onSeekInfoSet(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void onSeekInfoSetError() -> k
    void onReceivedSeek(pl.mg6.yafi.model.data.SeekInfo) -> a
    void onRemovedSeeks(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void onCommunication(pl.mg6.yafi.model.data.Communication) -> a
    void onFinger(pl.mg6.yafi.model.data.FingerInfo) -> a
    void onVariables(pl.mg6.yafi.model.data.VariablesInfo) -> a
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onNoHistory(java.lang.String) -> c
    void onNoJournal(java.lang.String) -> d
    void onPrivateJournal() -> l
    void onUnregJournal() -> m
    void onNoAdjourned(java.lang.String) -> e
    void onInchannelInfo(pl.mg6.yafi.model.data.InchannelInfo) -> a
    void onRemoveMatchOfferFrom(java.lang.String) -> f
    void onRemoveMatchOfferTo(java.lang.String) -> g
    void onCantPlayVariantsUntimed() -> n
    void onTimeControlsTooLarge() -> o
    void onAlreadyHaveSameSeek() -> p
    void onCannotChallengeWhileExamining() -> q
    void onCannotChallengeWhilePlaying() -> r
    void onCanHave3Seeks() -> s
    void onSeekNotAvailable() -> t
    void onNotLoggedIn(java.lang.String) -> h
    void onMotdExtended(pl.mg6.yafi.model.data.WelcomeData) -> a
    void onNews(java.util.List) -> a
    void onNewsDetails(pl.mg6.yafi.model.data.NewsItem) -> a
    void onMessages(java.util.List) -> b
pl.mg6.yafi.model.FreechessService -> pl.mg6.yafi.model.FreechessService:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessService$LocalBinder binder -> b
    pl.mg6.yafi.model.FreechessConnection connection -> c
    pl.mg6.yafi.model.FreechessModel model -> d
    android.media.MediaPlayer movePlayer -> e
    android.media.MediaPlayer tellPlayer -> f
    android.os.PowerManager$WakeLock wakeLock -> g
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
    void onDestroy() -> onDestroy
    void cleanup() -> u
    void onConnecting() -> a
    void onInvalidUsername() -> b
    void onSendingUsername() -> c
    void onSendingPassword() -> d
    void onInvalidPassword() -> e
    void onUnableToLogOn(java.lang.String) -> a
    void onLoggedOn() -> f
    void onDisconnected() -> g
    void onReceivedOutput(java.lang.String) -> b
    void onGameCreate(java.util.UUID) -> a
    void onGameUpdate(java.util.UUID) -> b
    void onIllegalMove() -> h
    void onPendingInfo(pl.mg6.yafi.model.data.PendingInfo) -> a
    void onDrawOffer() -> i
    void onAbortRequest() -> j
    void onSeekInfoSet(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void onSeekInfoSetError() -> k
    void onReceivedSeek(pl.mg6.yafi.model.data.SeekInfo) -> a
    void onRemovedSeeks(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void onCommunication(pl.mg6.yafi.model.data.Communication) -> a
    void onFinger(pl.mg6.yafi.model.data.FingerInfo) -> a
    void onVariables(pl.mg6.yafi.model.data.VariablesInfo) -> a
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onNoHistory(java.lang.String) -> c
    void onNoJournal(java.lang.String) -> d
    void onPrivateJournal() -> l
    void onUnregJournal() -> m
    void onNoAdjourned(java.lang.String) -> e
    void onInchannelInfo(pl.mg6.yafi.model.data.InchannelInfo) -> a
    void onRemoveMatchOfferFrom(java.lang.String) -> f
    void onRemoveMatchOfferTo(java.lang.String) -> g
    void onCantPlayVariantsUntimed() -> n
    void onTimeControlsTooLarge() -> o
    void onAlreadyHaveSameSeek() -> p
    void onCannotChallengeWhileExamining() -> q
    void onCannotChallengeWhilePlaying() -> r
    void onCanHave3Seeks() -> s
    void onSeekNotAvailable() -> t
    void onNotLoggedIn(java.lang.String) -> h
    void onMotdExtended(pl.mg6.yafi.model.data.WelcomeData) -> a
    void onNews(java.util.List) -> a
    void onNewsDetails(pl.mg6.yafi.model.data.NewsItem) -> a
    void onMessages(java.util.List) -> b
    pl.mg6.yafi.model.FreechessConnection access$0(pl.mg6.yafi.model.FreechessService) -> a
    pl.mg6.yafi.model.FreechessModel access$1(pl.mg6.yafi.model.FreechessService) -> b
    void access$2(pl.mg6.yafi.model.FreechessService) -> c
pl.mg6.yafi.model.FreechessService$FreechessServiceInterface -> pl.mg6.yafi.model.j:
    void addCallbackHandler(android.os.Handler) -> a
    void removeCallbackHandler(android.os.Handler) -> b
    void sendInput(java.lang.String) -> a
    java.lang.String getOutput() -> a
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> b
    void removeGame(java.util.UUID) -> b
    java.util.List getChat(java.lang.String) -> b
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllChatIds() -> c
    pl.mg6.yafi.model.data.WelcomeData getWelcomData() -> d
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> e
    boolean isLoggedOn() -> f
    java.lang.String getRealUsername() -> g
    boolean isRegistered() -> h
    void quit() -> i
    boolean isCurrentVersionOld() -> j
pl.mg6.yafi.model.FreechessService$LocalBinder -> pl.mg6.yafi.model.k:
    java.util.List listeners -> b
    pl.mg6.yafi.model.FreechessService this$0 -> a
    void addCallbackHandler(android.os.Handler) -> a
    void removeCallbackHandler(android.os.Handler) -> b
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> e
    boolean isLoggedOn() -> f
    java.lang.String getRealUsername() -> g
    boolean isRegistered() -> h
    void sendInput(java.lang.String) -> a
    java.lang.String getOutput() -> a
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> b
    void removeGame(java.util.UUID) -> b
    java.util.List getChat(java.lang.String) -> b
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllChatIds() -> c
    pl.mg6.yafi.model.data.WelcomeData getWelcomData() -> d
    void sendMessage(int) -> a
    void sendMessage(int,java.lang.Object) -> a
    void quit() -> i
    boolean isCurrentVersionOld() -> j
    void access$1(pl.mg6.yafi.model.FreechessService$LocalBinder,int) -> a
    void access$2(pl.mg6.yafi.model.FreechessService$LocalBinder,int,java.lang.Object) -> a
pl.mg6.yafi.model.FreechessUtils -> pl.mg6.yafi.model.l:
    java.lang.StringBuilder builder -> aM
    java.util.regex.Pattern HACK_MULTIPLE_ACCEPTS -> a
    java.util.regex.Pattern HACK_POSTED_MANUAL_SEEK -> b
    java.util.regex.Pattern PRIVATE_TELL -> c
    java.util.regex.Pattern SAY -> d
    java.util.regex.Pattern PARTNER_TELL -> e
    java.util.regex.Pattern CHANNEL_TELL -> f
    java.util.regex.Pattern SHOUT -> g
    java.util.regex.Pattern SHOUT_IT -> h
    java.util.regex.Pattern CHESS_SHOUT -> i
    java.util.regex.Pattern ANNOUNCEMENT -> j
    java.util.regex.Pattern KIBITZ_WHISPER -> k
    java.util.regex.Pattern SEEKINFO_SET -> l
    java.util.regex.Pattern SEEKINFO_SET_SEEK -> m
    java.util.regex.Pattern SEEKINFO_SET_ERROR -> n
    java.util.regex.Pattern SEEKINFO_SEEK -> o
    java.util.regex.Pattern SEEKINFO_REMOVE -> p
    java.util.regex.Pattern SEEKINFO_UNSET -> q
    java.util.regex.Pattern PENDING -> r
    java.util.regex.Pattern DECLINE_MATCH -> s
    java.util.regex.Pattern DECLINED_MATCH -> t
    java.util.regex.Pattern WITHDRAW_MATCH -> u
    java.util.regex.Pattern WITHDRAWN_MATCH -> v
    java.util.regex.Pattern REMOVED_MATCH -> w
    java.util.regex.Pattern PENDING_OFFER_TO -> x
    java.util.regex.Pattern PENDING_OFFER_FROM -> y
    java.util.regex.Pattern GAMEINFO_MOVE -> z
    java.util.regex.Pattern GAMEINFO_MOVE_ADDITIONAL -> A
    java.util.regex.Pattern GAMEINFO_ACCEPT_DECLINE_MOVE -> B
    java.util.regex.Pattern GAMEINFO_ILLEGAL_MOVE -> C
    java.util.regex.Pattern GAMEINFO_END -> D
    java.util.regex.Pattern GAMEINFO_NOTE_END -> E
    java.util.regex.Pattern GAMEINFO_ABORTED_END -> F
    java.util.regex.Pattern GAMEINFO_CREATING -> G
    java.util.regex.Pattern GAMEINFO_OBSERVING -> H
    java.util.regex.Pattern GAMEINFO_FOLLOWING -> I
    java.util.regex.Pattern GAMEINFO_EXAMINING -> J
    java.util.regex.Pattern GAMEINFO_REMOVING_OBSERVED -> K
    java.util.regex.Pattern GAMEINFO_ACCEPT_REMOVING_OBSERVED -> L
    java.util.regex.Pattern GAMEINFO_REMOVING_EXAMINED -> M
    java.util.regex.Pattern GAMEINFO_MEXAMINED -> N
    java.util.regex.Pattern GAMEINFO_NOTE -> O
    java.util.regex.Pattern GAMEINFO_NOTE_MOVE -> P
    java.util.regex.Pattern GAMEINFO_NOTE_MOVE_NOTE -> Q
    java.util.regex.Pattern GAMEINFO_NOTE_VALUE_RESULT -> R
    java.util.regex.Pattern GAMEINFO_MOVE_NOTE -> S
    java.util.regex.Pattern GAMEINFO_MORETIME_MOVE -> T
    java.util.regex.Pattern GAMEINFO_MOVE_END -> U
    java.util.regex.Pattern GAMEINFO_AUTOFLAGGING_MOVE -> V
    java.util.regex.Pattern GAMEINFO_DRAW_OFFER -> W
    java.util.regex.Pattern GAMEINFO_ABORT_REQUEST -> X
    java.util.regex.Pattern GAME_ID -> Y
    java.util.regex.Pattern LISTINFO_SHOW -> Z
    java.util.regex.Pattern LISTINFO_ADD -> aa
    java.util.regex.Pattern LISTINFO_SUB -> ab
    java.util.regex.Pattern LISTINFO_SHOW_ENTRY -> ac
    java.util.regex.Pattern FINGER -> ad
    java.util.regex.Pattern VARIABLES -> ae
    java.util.regex.Pattern HISTORY -> af
    java.util.regex.Pattern HISTORY_ENTRY -> ag
    java.util.regex.Pattern JOURNAL -> ah
    java.util.regex.Pattern JOURNAL_ENTRY -> ai
    java.util.regex.Pattern ADJOURNED -> aj
    java.util.regex.Pattern ADJOURNED_ENTRY -> ak
    java.util.regex.Pattern NO_HISTORY -> al
    java.util.regex.Pattern NO_JOURNAL -> am
    java.util.regex.Pattern PRIVATE_JOURNAL -> an
    java.util.regex.Pattern UNREG_JOURNAL -> ao
    java.util.regex.Pattern NO_ADJOURNED -> ap
    java.util.regex.Pattern INCHANNEL_NUMBER -> aq
    java.util.regex.Pattern INCHANNEL_USER -> ar
    java.util.regex.Pattern HANDLE_PREFIX -> as
    java.util.regex.Pattern WHO_IBSLWBSLX -> at
    java.util.regex.Pattern WHO_IBSLWBSLX_LINE -> au
    java.util.regex.Pattern COMMAND_NOT_FOUND -> av
    java.util.regex.Pattern CANT_PLAY_VARIANTS_UNTIMED -> aw
    java.util.regex.Pattern TIME_CONTROLS_TOO_LARGE -> ax
    java.util.regex.Pattern ALREADY_HAVE_SAME_SEEK -> ay
    java.util.regex.Pattern CANNOT_CHALLENGE_WHILE_EXAMINING -> az
    java.util.regex.Pattern CANNOT_CHALLENGE_WHILE_PLAYING -> aA
    java.util.regex.Pattern CAN_HAVE_3_SEEKS -> aB
    java.util.regex.Pattern SEEK_NOT_AVAILABLE -> aC
    java.util.regex.Pattern NOT_LOGGED_IN -> aD
    java.util.regex.Pattern MOVES -> aE
    java.util.regex.Pattern MOTD_EXTENDED -> aF
    java.util.regex.Pattern NEWS -> aG
    java.util.regex.Pattern NEWS_ITEM -> aH
    java.util.regex.Pattern NEWS_DETAILS -> aI
    java.util.regex.Pattern NEWS_DETAILS_SEPARATOR -> aJ
    java.util.regex.Pattern MESSAGES -> aK
    java.util.regex.Pattern MESSAGE_ITEM -> aL
    boolean validateUsername(java.lang.String) -> a
    java.lang.String moveToString(int,int,int,int) -> a
    boolean isGuest(int) -> a
pl.mg6.yafi.model.TelnetProtocolImpl -> pl.mg6.yafi.model.m:
    java.io.InputStream istream -> a
    java.io.OutputStream ostream -> b
    int read(byte[]) -> a
    int read(byte[],int,int) -> a
    void write(int) -> a
    void write(byte[]) -> b
    void write$1cf967a4(byte[],int) -> a
    void flush() -> a
pl.mg6.yafi.model.TimesealProtocolImpl -> pl.mg6.yafi.model.n:
    pl.mg6.yafi.model.TelnetProtocolImpl telnet -> a
    byte[] stamp -> b
    byte[] stampReply -> c
    byte[] about -> d
    byte[] readBuffer -> e
    byte[] writeBuffer -> f
    int readBufferCount -> g
    int writeBufferCount -> h
    byte[] encodeBuffer -> i
    long startTime -> j
    int read(byte[]) -> a
    void write(int) -> a
    void write(byte[]) -> b
    void write$1cf967a4(byte[],int) -> a
pl.mg6.yafi.model.data.AbortPendingOffer -> pl.mg6.yafi.model.data.a:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.AdjournPendingOffer -> pl.mg6.yafi.model.data.b:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.AdjournedInfo -> pl.mg6.yafi.model.data.c:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.AdjournedInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.AdjournedInfo$Entry -> pl.mg6.yafi.model.data.d:
    pl.mg6.yafi.model.data.Color color -> b
    java.lang.String opponentName -> c
    boolean opponentOnline -> d
    char type -> e
    boolean rated -> f
    int time -> g
    int increment -> h
    int whiteStrength -> i
    int blackStrength -> j
    pl.mg6.yafi.model.data.Color getColor() -> a
    java.lang.String getOpponentName() -> b
    int getTime() -> c
    int getIncrement() -> d
    int getWhiteStrength() -> e
    int getBlackStrength() -> f
    pl.mg6.yafi.model.data.AdjournedInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.ChallengePendingOffer -> pl.mg6.yafi.model.data.e:
    boolean rated -> a
    java.lang.String type -> b
    int time -> c
    int increment -> d
    boolean isRated() -> a
    java.lang.String getType() -> b
    int getTime() -> c
    int getIncrement() -> d
pl.mg6.yafi.model.data.Color -> pl.mg6.yafi.model.data.f:
    pl.mg6.yafi.model.data.Color WHITE -> a
    pl.mg6.yafi.model.data.Color BLACK -> b
pl.mg6.yafi.model.data.Communication -> pl.mg6.yafi.model.data.g:
    java.lang.String id -> a
    pl.mg6.yafi.model.data.Communication$Type type -> b
    java.lang.String name -> c
    java.lang.String message -> d
    java.util.Date time -> e
    java.lang.String getId() -> a
    java.lang.String getName() -> b
    java.lang.String getMessage() -> c
    java.util.Date getTime() -> d
    boolean isPrivate() -> e
    pl.mg6.yafi.model.data.Communication createPrivateTell(java.lang.String,java.lang.String) -> a
    pl.mg6.yafi.model.data.Communication createSay(java.lang.String,java.lang.String) -> b
    pl.mg6.yafi.model.data.Communication createPartnerTell(java.lang.String,java.lang.String) -> c
    pl.mg6.yafi.model.data.Communication createChannelTell(java.lang.String,java.lang.String,java.lang.String) -> a
    pl.mg6.yafi.model.data.Communication createAnnouncement(java.lang.String,java.lang.String) -> d
    pl.mg6.yafi.model.data.Communication createShout(java.lang.String,java.lang.String) -> e
    pl.mg6.yafi.model.data.Communication createShoutIt(java.lang.String,java.lang.String) -> f
    pl.mg6.yafi.model.data.Communication createChessShout(java.lang.String,java.lang.String) -> g
    pl.mg6.yafi.model.data.Communication createKibitz(java.lang.String,java.lang.String,java.lang.String) -> b
    pl.mg6.yafi.model.data.Communication createWhisper(java.lang.String,java.lang.String,java.lang.String) -> c
    pl.mg6.yafi.model.data.Communication create(java.lang.String,java.lang.String,java.lang.String) -> d
pl.mg6.yafi.model.data.Communication$Type -> pl.mg6.yafi.model.data.h:
    pl.mg6.yafi.model.data.Communication$Type PrivateTell -> a
    pl.mg6.yafi.model.data.Communication$Type Say -> b
    pl.mg6.yafi.model.data.Communication$Type PartnerTell -> c
    pl.mg6.yafi.model.data.Communication$Type ChannelTell -> d
    pl.mg6.yafi.model.data.Communication$Type Announcement -> e
    pl.mg6.yafi.model.data.Communication$Type Shout -> f
    pl.mg6.yafi.model.data.Communication$Type ShoutIt -> g
    pl.mg6.yafi.model.data.Communication$Type ChessShout -> h
    pl.mg6.yafi.model.data.Communication$Type Kibitz -> i
    pl.mg6.yafi.model.data.Communication$Type Whisper -> j
    pl.mg6.yafi.model.data.Communication$Type[] ENUM$VALUES -> k
    pl.mg6.yafi.model.data.Communication$Type[] values() -> values
    pl.mg6.yafi.model.data.Communication$Type valueOf(java.lang.String) -> valueOf
pl.mg6.yafi.model.data.DrawPendingOffer -> pl.mg6.yafi.model.data.i:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.FingerInfo -> pl.mg6.yafi.model.data.j:
    java.lang.String user -> a
    java.lang.String[] titles -> b
    java.lang.String[] NO_TITLES -> c
    pl.mg6.yafi.model.data.RatingInfo blitz -> d
    pl.mg6.yafi.model.data.RatingInfo standard -> e
    pl.mg6.yafi.model.data.RatingInfo lightning -> f
    pl.mg6.yafi.model.data.RatingInfo wild -> g
    pl.mg6.yafi.model.data.RatingInfo buhouse -> h
    pl.mg6.yafi.model.data.RatingInfo crazyhouse -> i
    pl.mg6.yafi.model.data.RatingInfo suicide -> j
    pl.mg6.yafi.model.data.RatingInfo losers -> k
    pl.mg6.yafi.model.data.RatingInfo atomic -> l
    java.util.List lines -> m
    java.lang.String getUser() -> a
    java.lang.String[] getTitles() -> b
    pl.mg6.yafi.model.data.RatingInfo getBlitz() -> c
    pl.mg6.yafi.model.data.RatingInfo getStandard() -> d
    pl.mg6.yafi.model.data.RatingInfo getLightning() -> e
    pl.mg6.yafi.model.data.RatingInfo getWild() -> f
    pl.mg6.yafi.model.data.RatingInfo getBuhouse() -> g
    pl.mg6.yafi.model.data.RatingInfo getCrazyhouse() -> h
    pl.mg6.yafi.model.data.RatingInfo getSuicide() -> i
    pl.mg6.yafi.model.data.RatingInfo getLosers() -> j
    pl.mg6.yafi.model.data.RatingInfo getAtomic() -> k
    int getLineCount() -> l
    java.lang.String getLine(int) -> a
    pl.mg6.yafi.model.data.FingerInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.Game -> pl.mg6.yafi.model.data.k:
    java.util.List positions -> a
    java.util.UUID uuid -> b
    long gameTimestamp -> c
    int id -> d
    java.lang.String whiteName -> e
    java.lang.String blackName -> f
    java.lang.String whiteRating -> g
    java.lang.String blackRating -> h
    pl.mg6.yafi.model.data.Color toMove -> i
    int whiteTime -> j
    int blackTime -> k
    long timestamp -> l
    boolean timeRunning -> m
    java.lang.String result -> n
    java.lang.String description -> o
    boolean flip -> p
    boolean userFlip -> q
    int relation -> r
    void addPosition(pl.mg6.yafi.model.data.Position) -> a
    int getPositionCount() -> a
    pl.mg6.yafi.model.data.Position getPosition(int) -> a
    java.util.UUID getUUID() -> b
    long getGameTimestamp() -> c
    int getId() -> d
    java.lang.String getWhiteName() -> e
    java.lang.String getBlackName() -> f
    java.lang.String getWhiteRating() -> g
    void setWhiteRating(java.lang.String) -> a
    java.lang.String getBlackRating() -> h
    void setBlackRating(java.lang.String) -> b
    boolean isTimeRunning() -> i
    java.lang.String getResult() -> j
    java.lang.String getDescription() -> k
    boolean isFlip() -> l
    void toggleUserFlip() -> m
    int getRelation() -> n
    void setRelation$13462e() -> o
    int getCurrentWhiteTime() -> r
    int getCurrentBlackTime() -> s
    java.lang.String getCurrentWhiteTimeString() -> p
    java.lang.String getCurrentBlackTimeString() -> q
    void setResult(java.lang.String,java.lang.String) -> a
pl.mg6.yafi.model.data.HistoricalGameEntry -> pl.mg6.yafi.model.data.l:
    java.lang.String id -> a
    java.lang.String getId() -> g
pl.mg6.yafi.model.data.HistoryInfo -> pl.mg6.yafi.model.data.m:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.HistoryInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.HistoryInfo$Entry -> pl.mg6.yafi.model.data.n:
    int result -> b
    int rating -> c
    pl.mg6.yafi.model.data.Color color -> d
    int opponentRating -> e
    java.lang.String opponentName -> f
    char type -> g
    boolean rated -> h
    int time -> i
    int increment -> j
    java.lang.String eco -> k
    java.lang.String resultDescription -> l
    java.lang.String date -> m
    int getResult() -> a
    int getRating() -> b
    pl.mg6.yafi.model.data.Color getColor() -> c
    int getOpponentRating() -> d
    java.lang.String getOpponentName() -> e
    int getTime() -> f
    int getIncrement() -> h
    pl.mg6.yafi.model.data.HistoryInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.InchannelInfo -> pl.mg6.yafi.model.data.o:
    java.lang.String channelNumber -> a
    java.lang.String channelName -> b
    java.util.List users -> c
    void add(java.lang.String) -> a
    java.lang.String getChannelNumber() -> a
    int getUsersCount() -> b
    java.lang.String getUser(int) -> a
pl.mg6.yafi.model.data.JournalInfo -> pl.mg6.yafi.model.data.p:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.JournalInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.JournalInfo$Entry -> pl.mg6.yafi.model.data.q:
    java.lang.String whiteName -> b
    int whiteRating -> c
    java.lang.String blackName -> d
    int blackRating -> e
    char type -> f
    boolean rated -> g
    int time -> h
    int increment -> i
    java.lang.String eco -> j
    java.lang.String resultDescription -> k
    java.lang.String result -> l
    java.lang.String getWhiteName() -> a
    int getWhiteRating() -> b
    java.lang.String getBlackName() -> c
    int getBlackRating() -> d
    int getTime() -> e
    int getIncrement() -> f
    java.lang.String getResult() -> h
    pl.mg6.yafi.model.data.JournalInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.NewsItem -> pl.mg6.yafi.model.data.NewsItem:
    int id -> a
    java.lang.String date -> b
    java.lang.String title -> c
    java.lang.String message -> d
    java.lang.String author -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    java.lang.String getDate() -> b
    java.lang.String getTitle() -> c
    java.lang.String getMessage() -> d
    java.lang.String getAuthor() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    pl.mg6.yafi.model.data.NewsItem fromListMatcher(java.util.regex.Matcher) -> a
    pl.mg6.yafi.model.data.NewsItem fromDetailsMatcher(java.util.regex.Matcher) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
    void access$1(pl.mg6.yafi.model.data.NewsItem,int) -> a
    void access$2(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> a
    void access$3(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> b
    void access$4(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> c
    void access$5(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> d
pl.mg6.yafi.model.data.NewsItem$1 -> pl.mg6.yafi.model.data.r:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pl.mg6.yafi.model.data.PendingInfo -> pl.mg6.yafi.model.data.s:
    java.util.List sentOffers -> a
    java.util.List receivedOffers -> b
    int getSentOfferCount() -> a
    pl.mg6.yafi.model.data.PendingOffer getSentOffer(int) -> a
    int getReceivedOffersCount() -> b
    pl.mg6.yafi.model.data.PendingOffer getReceivedOffer(int) -> b
    pl.mg6.yafi.model.data.PendingInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.PendingOffer -> pl.mg6.yafi.model.data.t:
    int id -> a
    java.lang.String name -> b
    int getId() -> e
    java.lang.String getName() -> f
    pl.mg6.yafi.model.data.PendingOffer fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.Position -> pl.mg6.yafi.model.data.u:
    long timestamp -> a
    java.lang.String[] placement -> b
    pl.mg6.yafi.model.data.Color toMove -> c
    int enPassantFile -> d
    boolean[] casting -> e
    int movesSinceIrreversible -> f
    int gameId -> g
    java.lang.String whiteName -> h
    java.lang.String blackName -> i
    int relation -> j
    int initialTime -> k
    int timeIncrement -> l
    int whiteStrength -> m
    int blackStrength -> n
    int whiteTime -> o
    int blackTime -> p
    int nextMoveNumber -> q
    java.lang.String verboseMove -> r
    java.lang.String timeTaken -> s
    java.lang.String prettyMove -> t
    boolean flip -> u
    boolean timeRunning -> v
    int lag -> w
    long getTimestamp() -> a
    pl.mg6.yafi.model.data.Color getToMove() -> b
    int getGameId() -> c
    java.lang.String getWhiteName() -> d
    java.lang.String getBlackName() -> e
    int getRelation() -> f
    int getWhiteTime() -> g
    int getBlackTime() -> h
    int getCurrentMoveNumber() -> i
    java.lang.String getVerboseMove() -> j
    java.lang.String getPrettyMove() -> k
    boolean isFlip() -> l
    boolean isTimeRunning() -> m
    int getLag() -> n
    int getMoveIndex() -> o
    char getPieceAt(int,int) -> a
    pl.mg6.yafi.model.data.Position fromStyle12(java.lang.String) -> a
pl.mg6.yafi.model.data.RatingInfo -> pl.mg6.yafi.model.data.v:
    java.lang.String rating -> a
    java.lang.String rd -> b
    int wins -> c
    int losses -> d
    int draws -> e
    int total -> f
    java.lang.String best -> g
    java.lang.String getRating() -> a
    int getWins() -> b
    int getDraws() -> c
    int getTotal() -> d
    java.lang.String getBest() -> e
    pl.mg6.yafi.model.data.RatingInfo fromFingerMatch(java.util.regex.Matcher,int) -> a
pl.mg6.yafi.model.data.ReceivedMessage -> pl.mg6.yafi.model.data.w:
    int id -> a
    java.lang.String from -> b
    java.lang.String date -> c
    java.lang.String content -> d
    int getId() -> a
    void decrementId() -> b
    java.lang.String getFrom() -> c
    java.lang.String getDate() -> d
    java.lang.String getContent() -> e
    pl.mg6.yafi.model.data.ReceivedMessage fromMatcher(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.SeekInfo -> pl.mg6.yafi.model.data.x:
    int id -> a
    java.lang.String name -> b
    int titles -> c
    int rating -> d
    java.lang.String type -> e
    int time -> f
    int increment -> g
    boolean rated -> h
    boolean manual -> i
    int getId() -> a
    java.lang.String getName() -> b
    int getTitles() -> c
    int getRating() -> d
    java.lang.String getType() -> e
    int getTime() -> f
    int getIncrement() -> g
    boolean isRated() -> h
    boolean isManual() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    pl.mg6.yafi.model.data.SeekInfo fromMatch(java.util.regex.Matcher) -> a
    pl.mg6.yafi.model.data.SeekInfo withId(java.lang.String) -> a
pl.mg6.yafi.model.data.SeekInfoList -> pl.mg6.yafi.model.data.y:
    java.util.List list -> a
    void add(pl.mg6.yafi.model.data.SeekInfo) -> a
    java.util.Iterator iterator() -> iterator
pl.mg6.yafi.model.data.TakebackPendingOffer -> pl.mg6.yafi.model.data.z:
    int moves -> a
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.UserTitle -> pl.mg6.yafi.model.data.aa:
    java.util.Map abbrTextMap -> a
    int abbrToText(java.lang.String) -> a
pl.mg6.yafi.model.data.VariablesInfo -> pl.mg6.yafi.model.data.ab:
    java.lang.String user -> a
    java.lang.String clientName -> b
    java.lang.String getUser() -> a
    java.lang.String getClientName() -> b
    pl.mg6.yafi.model.data.VariablesInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.WelcomeData -> pl.mg6.yafi.model.data.ac:
    java.util.List newsItems -> a
    int unreadMessages -> b
    int allMessages -> c
    java.lang.String[] friends -> d
    java.util.List getNewsItems() -> a
    int getUnreadMessages() -> b
    void resetUnreadMessages() -> c
    int getAllMessages() -> d
    void decrementAllMessages() -> e
pl.mg6.yafi.model.data.seek.filters.AllSeekFilter -> pl.mg6.yafi.model.data.a.a.a:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.ComputerSeekFilter -> pl.mg6.yafi.model.data.a.a.b:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.GameTypeSeekFilter -> pl.mg6.yafi.model.data.a.a.c:
    java.util.regex.Pattern gameTypePattern -> a
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.GuestSeekFilter -> pl.mg6.yafi.model.data.a.a.d:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.RatingSeekFilter -> pl.mg6.yafi.model.data.a.a.e:
    int minRating -> a
    int maxRating -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.RegisteredUserSeekFilter -> pl.mg6.yafi.model.data.a.a.f:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.SeekFilter -> pl.mg6.yafi.model.data.a.a.g:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.TimeSeekFilter -> pl.mg6.yafi.model.data.a.a.h:
    int minTime -> a
    int maxTime -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
