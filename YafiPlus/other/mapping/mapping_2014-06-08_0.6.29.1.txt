android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    void run() -> run
    void popFromBackStack$1385ff() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState$79e5e33f() -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged$1385ff() -> e
    void onActivityResult$6eb84b52() -> f
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> g
    void onInflate$423a76cd() -> h
    void onAttach$63a22f9() -> i
    android.view.animation.Animation onCreateAnimation$24236ca7() -> j
    void onViewCreated$65f1d89() -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void initState() -> l
    void onDetach() -> m
    void onDestroyOptionsMenu() -> n
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performCreate(android.os.Bundle) -> a
    android.view.View performCreateView$469ccb8a() -> o
    void performActivityCreated$79e5e33f() -> p
    void performStart() -> q
    void performResume() -> r
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> s
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> b
    void performPause() -> t
    void performStop() -> u
    void performReallyStop() -> v
    void performDestroyView() -> w
    void performDestroy() -> x
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$2cd5ab55(java.lang.String) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> d
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> t
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.r:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.s:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.u:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.v:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.w:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.x:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.y:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.z:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.aa:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ab:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ac:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ad:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ae:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.af:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ag:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.ah:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.al:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.am:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.an:
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.a:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.b:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.Loader -> android.support.v4.content.c:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.d:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize$134621() -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> d
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> e
    java.lang.Object valueAt(int) -> b
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    void gc() -> d
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.r:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
    void startTracking(android.view.KeyEvent) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.s:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.t:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.u:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.v:
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.w:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.x:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.y:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.z:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.aa:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject$171eb1dd() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.ab:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ac:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> a
    int getTextSpacing() -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText$7a69ae8(int) -> b
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ad:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ae:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.af:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ag:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ah:
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ai:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.aj:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ak:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.al:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.am:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.an:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically$5359dc96(android.view.View) -> a
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
    android.view.ViewParent getParentForAccessibility(android.view.View) -> h
    boolean isOpaque(android.view.View) -> i
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically$5359dc96(android.view.View) -> a
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
    android.view.ViewParent getParentForAccessibility(android.view.View) -> h
    boolean isOpaque(android.view.View) -> i
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ap:
    boolean isOpaque(android.view.View) -> i
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aq:
    int getOverScrollMode(android.view.View) -> b
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ar:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.as:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically$5359dc96(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.at:
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> h
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.au:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.av:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.aw:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically$5359dc96(android.view.View) -> a
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
    android.view.ViewParent getParentForAccessibility(android.view.View) -> h
    boolean isOpaque(android.view.View) -> i
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ax:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ay:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.az:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bb:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bc:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bd:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.be:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bf:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bg:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> b
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> e
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem$3af7e890(int) -> d
    void populate() -> c
    void populate(int) -> e
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> g
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> g
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> h
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> h
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> k
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> d
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bh:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bi:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bj:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bk:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bl:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bn:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bo:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bp:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> d
    void setFocusable(boolean) -> a
    boolean isFocused() -> e
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> f
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> g
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> h
    void setSelected(boolean) -> e
    boolean isClickable() -> i
    void setClickable(boolean) -> f
    boolean isLongClickable() -> j
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> k
    void setEnabled(boolean) -> h
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> l
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> m
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> n
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus$f3a5639() -> e
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.o:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.q:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.r:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.v:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.w:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.y:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.a:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202$38dcb275(android.support.v4.widget.ContentLoadingProgressBar) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> c
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.b:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.c:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    java.lang.CharSequence mTitleLeft -> v
    java.lang.CharSequence mTitleRight -> w
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> c
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> d
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> g
    void closeDrawer(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> d
    void cancelChildViewTouch() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.d:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.e:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.g:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void closeOtherDrawer() -> c
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.h:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.i:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.m:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.p:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.q:
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void dispatchOnPanelOpened$3c7ec8c3() -> a
    void dispatchOnPanelClosed$3c7ec8c3() -> b
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> d
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> c
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.r:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.s:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    void onEdgeDragStarted(int,int) -> a
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.v:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.y:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.aa:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds$3b4dfe4b(int,int) -> a
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    android.support.v4.widget.SwipeProgressBar mProgressBar -> a
    android.view.View mTarget -> b
    int mOriginalOffsetTop -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> d
    android.view.MotionEvent mDownEvent -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    float mPrevY -> j
    int mMediumAnimationDuration -> k
    float mFromPercentage -> l
    float mCurrPercentage -> m
    int mProgressBarHeight -> n
    int mCurrentTargetOffsetTop -> o
    boolean mReturningToStart -> p
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> q
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> r
    int[] LAYOUT_ATTRS -> s
    android.view.animation.Animation mAnimateToStartPosition -> t
    android.view.animation.Animation mShrinkTrigger -> u
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> v
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> w
    java.lang.Runnable mReturnToStartPosition -> x
    java.lang.Runnable mCancel -> y
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void ensureTarget() -> a
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTargetOffsetTopAndBottom(int) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702$3ab76409(android.support.v4.widget.SwipeRefreshLayout) -> f
    float access$802$3ab76f4f(android.support.v4.widget.SwipeRefreshLayout) -> g
    boolean access$902$3ab72427(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> j
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> k
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> l
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> m
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> n
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> o
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.ab:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.ad:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.ae:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.af:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.ag:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.ah:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.ai:
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aj:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling$138603() -> g
    void dispatchViewReleased$2548a35(float) -> b
    void clearMotionHistory(int) -> c
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop$17e2abff(android.view.View,float) -> a
    boolean checkTouchSlop$134632() -> h
    void releaseViewForPointerUp() -> i
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> b
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ak:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.al:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.am:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.Object a -> a
    com.google.ads.AdActivity b -> b
    com.google.ads.d c -> c
    com.google.ads.AdActivity d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.h f -> f
    boolean g -> g
    long h -> h
    android.widget.RelativeLayout i -> i
    com.google.ads.AdActivity j -> j
    boolean k -> k
    com.google.ads.g l -> l
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.g getAdVideoView() -> a
    com.google.ads.h getOpeningAdWebView() -> b
    boolean isShowing() -> c
    void launchAdActivity(com.google.ads.d,com.google.ads.e) -> a
    void a(com.google.ads.d) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.h,boolean,int) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void a() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.google.ads.AdListener -> com.google.ads.b:
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> a
    void onDismissScreen(com.google.ads.Ad) -> b
    void onLeaveApplication(com.google.ads.Ad) -> c
com.google.ads.AdRequest -> com.google.ads.c:
    com.google.ads.AdRequest$Gender a -> b
    java.lang.String b -> c
    java.util.Set c -> d
    boolean d -> e
    java.util.Map e -> f
    android.location.Location f -> g
    boolean g -> h
    boolean h -> i
    java.lang.String TEST_EMULATOR -> a
    java.util.Set i -> j
    void addKeyword(java.lang.String) -> a
    void addExtra(java.lang.String,java.lang.Object) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    void addTestDevice(java.lang.String) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.d:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.e:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.f:
    com.google.ads.AdSize BANNER -> a
    com.google.ads.AdSize IAB_MRECT -> b
    com.google.ads.AdSize IAB_BANNER -> c
    com.google.ads.AdSize IAB_LEADERBOARD -> d
    int a -> e
    int b -> f
    java.lang.String c -> g
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.d a -> a
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> a
com.google.ads.InterstitialAd -> com.google.ads.g:
com.google.ads.a -> com.google.ads.h:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(com.google.ads.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
com.google.ads.aa -> com.google.ads.i:
    boolean a(android.content.Context) -> a
    boolean a(android.content.Intent,android.content.Context) -> a
com.google.ads.ab -> com.google.ads.j:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab$a -> com.google.ads.k:
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.ab$b -> com.google.ads.l:
    com.google.ads.ab$b a -> a
    com.google.ads.ab$b b -> b
    java.lang.String c -> c
    com.google.ads.ab$b[] d -> d
    com.google.ads.ab$b[] values() -> values
    com.google.ads.ab$b valueOf(java.lang.String) -> valueOf
com.google.ads.ab$c -> com.google.ads.m:
    com.google.ads.d a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.b -> com.google.ads.n:
    com.google.ads.c a -> a
    com.google.ads.d b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.c -> com.google.ads.o:
    java.lang.String a -> a
    java.lang.String b -> b
    com.google.ads.b c -> c
    com.google.ads.d d -> d
    com.google.ads.AdRequest e -> e
    android.webkit.WebView f -> f
    java.lang.String g -> g
    java.util.LinkedList h -> h
    boolean i -> i
    com.google.ads.AdRequest$ErrorCode j -> j
    boolean k -> k
    int l -> l
    java.lang.Thread m -> m
    boolean n -> n
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    java.lang.String a(com.google.ads.AdRequest,android.app.Activity) -> a
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void b() -> a
    void a(int) -> a
    void a(boolean) -> a
com.google.ads.c$a -> com.google.ads.p:
    com.google.ads.d b -> b
    android.webkit.WebView c -> c
    com.google.ads.b d -> d
    com.google.ads.AdRequest$ErrorCode e -> e
    boolean f -> f
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$b -> com.google.ads.q:
    com.google.ads.c a -> a
com.google.ads.c$c -> com.google.ads.r:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.c$d -> com.google.ads.s:
    com.google.ads.c a -> a
com.google.ads.c$e -> com.google.ads.t:
    com.google.ads.d b -> b
    java.util.LinkedList c -> c
    int d -> d
    com.google.ads.c a -> a
    void run() -> run
com.google.ads.d -> com.google.ads.u:
    java.lang.Object a -> a
    java.lang.ref.WeakReference b -> b
    com.google.ads.Ad c -> c
    com.google.ads.AdListener d -> d
    com.google.ads.c e -> e
    com.google.ads.AdRequest f -> f
    com.google.ads.AdSize g -> g
    com.google.ads.f h -> h
    java.lang.String i -> i
    com.google.ads.h j -> j
    com.google.ads.i k -> k
    android.os.Handler l -> l
    long m -> m
    boolean n -> n
    boolean o -> o
    android.content.SharedPreferences p -> p
    long q -> q
    com.google.ads.x r -> r
    boolean s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    void a(java.lang.String) -> a
    void a(java.util.LinkedList) -> a
    void a() -> a
    void c() -> b
    void d() -> c
    android.app.Activity e() -> d
    com.google.ads.Ad f() -> e
    com.google.ads.c g() -> f
    java.lang.String h() -> g
    com.google.ads.h i() -> h
    com.google.ads.i j() -> i
    com.google.ads.AdSize k() -> j
    com.google.ads.f l() -> k
    void a(int) -> a
    int m() -> l
    long n() -> m
    boolean A() -> v
    boolean p() -> n
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void q() -> o
    void r() -> p
    void s() -> q
    void t() -> r
    void u() -> s
    void v() -> w
    boolean w() -> t
    void B() -> x
    void a(java.lang.Runnable) -> a
    void x() -> u
    void a(com.google.ads.AdListener) -> a
    void a(long) -> a
    void a(float) -> a
    void b(long) -> b
com.google.ads.e -> com.google.ads.v:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.f -> com.google.ads.w:
    java.util.LinkedList b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String a -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    long h() -> h
    long i() -> i
    java.lang.String j() -> j
    void a(java.lang.String) -> a
    boolean k() -> k
    void l() -> l
    boolean m() -> m
    void n() -> n
    void o() -> o
    java.lang.String p() -> p
    void b(java.lang.String) -> b
com.google.ads.g -> com.google.ads.x:
    java.lang.ref.WeakReference b -> b
    com.google.ads.h c -> c
    android.widget.MediaController a -> a
    long d -> d
    android.widget.VideoView e -> e
    java.lang.String f -> f
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void b() -> b
    void c() -> c
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void d() -> d
    void e() -> e
com.google.ads.g$a -> com.google.ads.y:
    java.lang.ref.WeakReference a -> a
    android.os.Handler b -> b
    void run() -> run
    void a() -> a
com.google.ads.h -> com.google.ads.z:
    java.lang.ref.WeakReference a -> a
    com.google.ads.AdSize b -> b
    void a() -> a
    com.google.ads.AdActivity b() -> b
    void a(com.google.ads.AdActivity) -> a
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void onMeasure(int,int) -> onMeasure
com.google.ads.i -> com.google.ads.aa:
    com.google.ads.d a -> a
    java.util.Map b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a() -> a
    void b() -> b
    void c() -> c
com.google.ads.j -> com.google.ads.ab:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.k -> com.google.ads.ac:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.l -> com.google.ads.ad:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.m -> com.google.ads.ae:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.n -> com.google.ads.af:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.o -> com.google.ads.ag:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.ah:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.ai:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.aj:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.a.a:
    java.lang.String a -> b
    int b -> c
    android.util.Pair c -> d
    int d -> e
    int e -> f
    int f -> g
    java.lang.String g -> h
    int h -> i
    int i -> j
    com.google.ads.searchads.SearchAdRequest$BorderType j -> k
    int k -> l
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.a.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.ak:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.al:
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.a -> com.google.ads.util.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b -> com.google.ads.util.c:
    boolean a -> a
    java.lang.String a(byte[]) -> a
com.google.ads.util.b$a -> com.google.ads.util.d:
    byte[] a -> a
    int b -> b
com.google.ads.util.b$b -> com.google.ads.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int) -> a
com.google.ads.util.c -> com.google.ads.util.f:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
com.google.ads.v -> com.google.ads.am:
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.an:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.google.ads.x -> com.google.ads.ao:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.y -> com.google.ads.ap:
    android.net.Uri a -> a
    android.net.Uri b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.google.ads.z -> com.google.ads.aq:
    void a(android.webkit.WebView,boolean) -> a
com.google.ads.z$a -> com.google.ads.ar:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.z$b -> com.google.ads.as:
    java.lang.ref.WeakReference a -> a
    android.webkit.WebView b -> b
    java.lang.String c -> c
    void run() -> run
com.google.ads.z$c -> com.google.ads.at:
    boolean a -> a
    android.webkit.WebView b -> b
    void run() -> run
com.google.android.apps.analytics.AdHitIdGenerator -> com.google.android.apps.analytics.a:
    boolean adMobSdkInstalled -> a
    int getAdHitId() -> a
com.google.android.apps.analytics.AdMobInfo -> com.google.android.apps.analytics.b:
    com.google.android.apps.analytics.AdMobInfo INSTANCE -> a
    int adHitId -> b
    java.util.Random random -> c
    com.google.android.apps.analytics.AdMobInfo getInstance() -> a
    int generateAdHitId() -> b
com.google.android.apps.analytics.AnalyticsParameterEncoder -> com.google.android.apps.analytics.c:
    java.lang.String encode(java.lang.String,java.lang.String) -> a
com.google.android.apps.analytics.AnalyticsReceiver -> com.google.android.apps.analytics.AnalyticsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.apps.analytics.CustomVariable -> com.google.android.apps.analytics.d:
    int scope -> a
    java.lang.String name -> b
    java.lang.String value -> c
    int index -> d
    int getScope() -> a
    java.lang.String getName() -> b
    java.lang.String getValue() -> c
    int getIndex() -> d
com.google.android.apps.analytics.CustomVariableBuffer -> com.google.android.apps.analytics.e:
    com.google.android.apps.analytics.CustomVariable[] customVariables -> a
    boolean isIndexAvailable(int) -> a
    void setCustomVariable(com.google.android.apps.analytics.CustomVariable) -> a
    com.google.android.apps.analytics.CustomVariable getCustomVariableAt(int) -> b
    com.google.android.apps.analytics.CustomVariable[] getCustomVariableArray() -> a
    void throwOnInvalidIndex(int) -> d
    boolean hasCustomVariables() -> b
    void clearCustomVariableAt(int) -> c
com.google.android.apps.analytics.Dispatcher -> com.google.android.apps.analytics.f:
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void setDryRun(boolean) -> a
com.google.android.apps.analytics.Dispatcher$Callbacks -> com.google.android.apps.analytics.g:
    void hitDispatched(long) -> a
    void dispatchFinished() -> a
com.google.android.apps.analytics.Event -> com.google.android.apps.analytics.h:
    long eventId -> a
    java.lang.String accountId -> b
    int randomVal -> j
    int adHitId -> k
    int timestampFirst -> l
    int timestampPrevious -> m
    int timestampCurrent -> n
    int visits -> o
    int userId -> p
    boolean anonymizeIp -> q
    boolean useServerTime -> r
    java.lang.String category -> c
    java.lang.String action -> d
    java.lang.String label -> e
    int value -> f
    int screenWidth -> g
    int screenHeight -> h
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> i
    com.google.android.apps.analytics.Transaction transaction -> s
    com.google.android.apps.analytics.Item item -> t
    void setRandomVal(int) -> a
    int getRandomVal() -> a
    void setAdHitId(int) -> b
    int getAdHitId() -> b
    void setTimestampFirst(int) -> c
    int getTimestampFirst() -> c
    void setTimestampPrevious(int) -> d
    int getTimestampPrevious() -> d
    void setTimestampCurrent(int) -> e
    int getTimestampCurrent() -> e
    void setVisits(int) -> f
    int getVisits() -> f
    void setUserId(int) -> g
    int getUserId() -> g
    void setAnonymizeIp(boolean) -> a
    boolean getAnonymizeIp() -> h
    void setUseServerTime(boolean) -> b
    boolean getUseServerTime() -> i
    java.lang.String toString() -> toString
    com.google.android.apps.analytics.Transaction getTransaction() -> j
    void setTransaction(com.google.android.apps.analytics.Transaction) -> a
    com.google.android.apps.analytics.Item getItem() -> k
    void setItem(com.google.android.apps.analytics.Item) -> a
    boolean isSessionInitialized() -> l
com.google.android.apps.analytics.GoogleAnalyticsTracker -> com.google.android.apps.analytics.i:
    com.google.android.apps.analytics.GoogleAnalyticsTracker instance -> a
    boolean debug -> b
    boolean dryRun -> c
    boolean anonymizeIp -> d
    boolean useServerTime -> e
    int sampleRate -> f
    java.lang.String accountId -> g
    android.content.Context parent -> h
    android.net.ConnectivityManager connectivityManager -> i
    java.lang.String userAgentProduct -> j
    java.lang.String userAgentVersion -> k
    int dispatchPeriod -> l
    com.google.android.apps.analytics.HitStore hitStore -> m
    com.google.android.apps.analytics.Dispatcher dispatcher -> n
    boolean powerSaveMode -> o
    boolean dispatcherIsBusy -> p
    com.google.android.apps.analytics.AdHitIdGenerator adHitIdGenerator -> q
    com.google.android.apps.analytics.CustomVariableBuffer customVariableBuffer -> r
    java.util.Map transactionMap -> s
    java.util.Map itemMap -> t
    android.os.Handler handler -> u
    java.lang.Runnable dispatchRunner -> v
    com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance() -> a
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void createEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void maybeScheduleNextDispatch() -> e
    void cancelPendingDispatches() -> f
    boolean dispatch() -> b
    void dispatchFinished() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    boolean getDebug() -> d
    void setDryRun(boolean) -> c
    android.os.Handler access$000(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> a
    com.google.android.apps.analytics.HitStore access$100(com.google.android.apps.analytics.GoogleAnalyticsTracker) -> b
com.google.android.apps.analytics.GoogleAnalyticsTracker$1 -> com.google.android.apps.analytics.j:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks -> com.google.android.apps.analytics.k:
    com.google.android.apps.analytics.GoogleAnalyticsTracker this$0 -> a
    void dispatchFinished() -> a
    void hitDispatched(long) -> a
com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1 -> com.google.android.apps.analytics.l:
    com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks this$1 -> a
    void run() -> run
com.google.android.apps.analytics.Hit -> com.google.android.apps.analytics.m:
    java.lang.String hitString -> a
    long hitId -> b
com.google.android.apps.analytics.HitBuilder -> com.google.android.apps.analytics.n:
    void appendStringValue(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendCurrencyValue(java.lang.StringBuilder,java.lang.String,double) -> a
    java.lang.String constructHitRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> a
    java.lang.String getCustomVariableParams(com.google.android.apps.analytics.Event) -> a
    void createX10Project(com.google.android.apps.analytics.CustomVariable[],java.lang.StringBuilder,int) -> a
    java.lang.String x10Escape(java.lang.String) -> a
    java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer) -> b
com.google.android.apps.analytics.HitStore -> com.google.android.apps.analytics.o:
    void putEvent(com.google.android.apps.analytics.Event) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    void deleteHit(long) -> a
    int getNumStoredHits() -> b
    boolean setReferrer(java.lang.String) -> a
    void startNewVisit() -> c
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
com.google.android.apps.analytics.Item -> com.google.android.apps.analytics.p:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    java.lang.String itemName -> c
    java.lang.String itemCategory -> d
    double itemPrice -> e
    long itemCount -> f
    java.lang.String getOrderId() -> a
    java.lang.String getItemSKU() -> b
    java.lang.String getItemName() -> c
    java.lang.String getItemCategory() -> d
    double getItemPrice() -> e
    long getItemCount() -> f
com.google.android.apps.analytics.Item$Builder -> com.google.android.apps.analytics.q:
    java.lang.String orderId -> a
    java.lang.String itemSKU -> b
    double itemPrice -> c
    long itemCount -> d
    java.lang.String itemName -> e
    java.lang.String itemCategory -> f
    com.google.android.apps.analytics.Item$Builder setItemName(java.lang.String) -> a
    com.google.android.apps.analytics.Item$Builder setItemCategory(java.lang.String) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Item$Builder) -> a
    java.lang.String access$100(com.google.android.apps.analytics.Item$Builder) -> b
    double access$200(com.google.android.apps.analytics.Item$Builder) -> c
    long access$300(com.google.android.apps.analytics.Item$Builder) -> d
    java.lang.String access$400(com.google.android.apps.analytics.Item$Builder) -> e
    java.lang.String access$500(com.google.android.apps.analytics.Item$Builder) -> f
com.google.android.apps.analytics.NetworkDispatcher -> com.google.android.apps.analytics.r:
    java.lang.String userAgent -> a
    org.apache.http.HttpHost googleAnalyticsHost -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread dispatcherThread -> c
    boolean dryRun -> d
    void init(com.google.android.apps.analytics.Dispatcher$Callbacks) -> a
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    void setDryRun(boolean) -> a
    boolean isDryRun() -> a
    org.apache.http.HttpHost access$200(com.google.android.apps.analytics.NetworkDispatcher) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread -> com.google.android.apps.analytics.s:
    android.os.Handler handlerExecuteOnDispatcherThread -> a
    com.google.android.apps.analytics.PipelinedRequester pipelinedRequester -> b
    java.lang.String userAgent -> c
    int lastStatusCode -> d
    int maxEventsPerRequest -> e
    long retryInterval -> f
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask currentTask -> g
    com.google.android.apps.analytics.Dispatcher$Callbacks callbacks -> h
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks requesterCallBacks -> i
    com.google.android.apps.analytics.NetworkDispatcher parent -> j
    void onLooperPrepared() -> onLooperPrepared
    void dispatchHits(com.google.android.apps.analytics.Hit[]) -> a
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask) -> a
    int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> a
    long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> b
    long access$630$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> c
    long access$602$78cf8d4e(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> d
    com.google.android.apps.analytics.NetworkDispatcher access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> e
    com.google.android.apps.analytics.PipelinedRequester access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> f
    com.google.android.apps.analytics.Dispatcher$Callbacks access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> g
    int access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> h
    java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> i
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks access$1200(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> j
    int access$1002$78cf9110(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> k
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread) -> l
    int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int) -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask -> com.google.android.apps.analytics.t:
    java.util.LinkedList hits -> b
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void run() -> run
    com.google.android.apps.analytics.Hit removeNextHit() -> a
com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks -> com.google.android.apps.analytics.u:
    com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread this$0 -> a
    void pipelineModeChanged$1385ff() -> a
    void requestSent() -> b
    void serverError(int) -> a
com.google.android.apps.analytics.PersistentHitStore -> com.google.android.apps.analytics.v:
    com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper databaseHelper -> a
    int storeId -> b
    long timestampFirst -> c
    long timestampPrevious -> d
    long timestampCurrent -> e
    int visits -> f
    int numStoredHits -> g
    boolean sessionStarted -> h
    boolean useStoredVisitorVars -> i
    boolean anonymizeIp -> j
    int sampleRate -> k
    java.util.Random random -> l
    com.google.android.apps.analytics.CustomVariableBuffer visitorCVCache -> m
    java.lang.String CREATE_EVENTS_TABLE -> n
    java.lang.String CREATE_SESSION_TABLE -> o
    java.lang.String CREATE_CUSTOM_VARIABLES_TABLE -> p
    java.lang.String CREATE_CUSTOM_VAR_CACHE_TABLE -> q
    java.lang.String CREATE_TRANSACTION_EVENTS_TABLE -> r
    java.lang.String CREATE_ITEM_EVENTS_TABLE -> s
    java.lang.String CREATE_HITS_TABLE -> t
    void deleteHit(long) -> a
    com.google.android.apps.analytics.Hit[] peekHits() -> a
    com.google.android.apps.analytics.Hit[] peekHits$7612f821() -> k
    com.google.android.apps.analytics.Event[] peekEvents$3798dea(android.database.sqlite.SQLiteDatabase,int) -> a
    com.google.android.apps.analytics.Transaction getTransaction(long,android.database.sqlite.SQLiteDatabase) -> a
    com.google.android.apps.analytics.Item getItem(long,android.database.sqlite.SQLiteDatabase) -> b
    com.google.android.apps.analytics.CustomVariableBuffer getCustomVariables(long,android.database.sqlite.SQLiteDatabase) -> c
    void putEvent(com.google.android.apps.analytics.Event) -> a
    boolean endTransaction(android.database.sqlite.SQLiteDatabase) -> d
    void putEvent(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase,boolean) -> a
    void writeEventToDatabase(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer,android.database.sqlite.SQLiteDatabase,boolean) -> a
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer() -> l
    com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer(android.database.sqlite.SQLiteDatabase) -> a
    int getNumStoredHits() -> b
    int getNumStoredHitsFromDb() -> m
    void loadExistingSession(android.database.sqlite.SQLiteDatabase) -> b
    void startNewVisit() -> c
    java.lang.String formatReferrer(java.lang.String) -> b
    com.google.android.apps.analytics.Referrer readCurrentReferrer(android.database.sqlite.SQLiteDatabase) -> e
    boolean setReferrerDatabase(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> a
    boolean setReferrer(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    java.lang.String access$000() -> d
    java.lang.String access$100() -> e
    java.lang.String access$200() -> f
    java.lang.String access$300() -> g
    java.lang.String access$400() -> h
    java.lang.String access$500() -> i
    java.lang.String access$600() -> j
    com.google.android.apps.analytics.CustomVariableBuffer access$702(com.google.android.apps.analytics.PersistentHitStore,com.google.android.apps.analytics.CustomVariableBuffer) -> a
    void access$800$6548677(com.google.android.apps.analytics.PersistentHitStore,com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase) -> a
    boolean access$900(android.database.sqlite.SQLiteDatabase) -> c
com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper -> com.google.android.apps.analytics.w:
    int databaseVersion -> a
    com.google.android.apps.analytics.PersistentHitStore store -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void createCustomVariableTables(android.database.sqlite.SQLiteDatabase) -> a
    void createECommerceTables(android.database.sqlite.SQLiteDatabase) -> b
    void createHitTable(android.database.sqlite.SQLiteDatabase) -> c
    void createReferrerTable(android.database.sqlite.SQLiteDatabase) -> d
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.google.android.apps.analytics.PipelinedRequester -> com.google.android.apps.analytics.x:
    org.apache.http.impl.DefaultHttpClientConnection connection -> a
    com.google.android.apps.analytics.PipelinedRequester$Callbacks callbacks -> b
    int lastStatusCode -> c
    boolean canPipeline -> d
    org.apache.http.HttpHost host -> e
    org.apache.http.conn.scheme.SocketFactory socketFactory -> f
    void sendRequests() -> a
    void finishedCurrentRequests() -> b
    void closeConnection() -> c
com.google.android.apps.analytics.PipelinedRequester$Callbacks -> com.google.android.apps.analytics.y:
    void pipelineModeChanged$1385ff() -> a
    void serverError(int) -> a
    void requestSent() -> b
com.google.android.apps.analytics.Referrer -> com.google.android.apps.analytics.z:
    java.lang.String referrer -> a
    long timeStamp -> b
    int visit -> c
    int index -> d
    java.lang.String getReferrerString() -> a
    long getTimeStamp() -> b
    int getVisit() -> c
    int getIndex() -> d
com.google.android.apps.analytics.Transaction -> com.google.android.apps.analytics.aa:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    java.lang.String getOrderId() -> a
    java.lang.String getStoreName() -> b
    double getTotalCost() -> c
    double getTotalTax() -> d
    double getShippingCost() -> e
com.google.android.apps.analytics.Transaction$Builder -> com.google.android.apps.analytics.ab:
    java.lang.String orderId -> a
    java.lang.String storeName -> b
    double totalCost -> c
    double totalTax -> d
    double shippingCost -> e
    com.google.android.apps.analytics.Transaction$Builder setStoreName(java.lang.String) -> a
    com.google.android.apps.analytics.Transaction$Builder setTotalTax(double) -> a
    com.google.android.apps.analytics.Transaction$Builder setShippingCost(double) -> b
    java.lang.String access$000(com.google.android.apps.analytics.Transaction$Builder) -> a
    double access$100(com.google.android.apps.analytics.Transaction$Builder) -> b
    java.lang.String access$200(com.google.android.apps.analytics.Transaction$Builder) -> c
    double access$300(com.google.android.apps.analytics.Transaction$Builder) -> d
    double access$400(com.google.android.apps.analytics.Transaction$Builder) -> e
com.google.android.apps.analytics.Utils -> com.google.android.apps.analytics.ac:
    java.lang.String addQueueTimeParameter(java.lang.String,long) -> a
com.google.android.apps.analytics.easytracking.EasyTracker -> com.google.android.apps.analytics.easytracking.a:
    com.google.android.apps.analytics.easytracking.EasyTracker instance -> a
    boolean gaEnabled -> b
    java.lang.String gaAccountId -> c
    int gaDispatchPeriod -> d
    boolean gaDebug -> e
    boolean gaDryRun -> f
    int gaSampleRate -> g
    boolean gaAnonymizeIp -> h
    boolean autoActivityTracking -> i
    int activitiesActive -> j
    boolean sessionNeeded -> k
    android.content.Context gaContext -> l
    java.util.Map activityNameMap -> m
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate tracker -> n
    com.google.android.apps.analytics.easytracking.ParameterLoader parameterFetcher -> o
    java.util.concurrent.LinkedBlockingQueue trackerQueue -> p
    com.google.android.apps.analytics.easytracking.EasyTracker$TrackerThread trackerThread -> q
    java.lang.Object lock -> r
    com.google.android.apps.analytics.easytracking.EasyTracker getTracker() -> a
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate getGoogleAnalyticsTracker() -> d
    void setContext(android.content.Context) -> a
    void trackActivityStart(android.app.Activity) -> a
    void trackActivityRetainNonConfigurationInstance() -> b
    void trackActivityStop$63a22f9() -> c
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void queueToTrackerThreadIfEnabled(java.lang.Runnable) -> a
    boolean access$000(com.google.android.apps.analytics.easytracking.EasyTracker) -> a
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate access$100(com.google.android.apps.analytics.easytracking.EasyTracker) -> b
    boolean access$200(com.google.android.apps.analytics.easytracking.EasyTracker) -> c
    int access$300(com.google.android.apps.analytics.easytracking.EasyTracker) -> d
    boolean access$400(com.google.android.apps.analytics.easytracking.EasyTracker) -> e
    java.lang.String access$500(com.google.android.apps.analytics.easytracking.EasyTracker) -> f
    int access$600(com.google.android.apps.analytics.easytracking.EasyTracker) -> g
    android.content.Context access$700(com.google.android.apps.analytics.easytracking.EasyTracker) -> h
    com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate access$800(com.google.android.apps.analytics.easytracking.EasyTracker) -> i
    boolean access$900(com.google.android.apps.analytics.easytracking.EasyTracker) -> j
    java.lang.String access$1000(com.google.android.apps.analytics.easytracking.EasyTracker,android.app.Activity) -> a
    java.util.concurrent.LinkedBlockingQueue access$1100(com.google.android.apps.analytics.easytracking.EasyTracker) -> k
com.google.android.apps.analytics.easytracking.EasyTracker$1 -> com.google.android.apps.analytics.easytracking.b:
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$11 -> com.google.android.apps.analytics.easytracking.c:
    java.lang.String val$category -> a
    java.lang.String val$action -> b
    java.lang.String val$label -> c
    int val$value -> d
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> e
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$2 -> com.google.android.apps.analytics.easytracking.d:
    boolean val$startASession -> a
    android.app.Activity val$activity -> b
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> c
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$3 -> com.google.android.apps.analytics.easytracking.e:
    boolean val$sendEvent -> a
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> b
    void run() -> run
com.google.android.apps.analytics.easytracking.EasyTracker$TrackerThread -> com.google.android.apps.analytics.easytracking.f:
    com.google.android.apps.analytics.easytracking.EasyTracker this$0 -> a
    void run() -> run
com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegate -> com.google.android.apps.analytics.easytracking.g:
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    void setDryRun(boolean) -> c
com.google.android.apps.analytics.easytracking.GoogleAnalyticsTrackerDelegateImpl -> com.google.android.apps.analytics.easytracking.h:
    com.google.android.apps.analytics.GoogleAnalyticsTracker tracker -> a
    void startNewSession(java.lang.String,int,android.content.Context) -> a
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackPageView(java.lang.String) -> a
    void setAnonymizeIp(boolean) -> a
    void setSampleRate(int) -> a
    void setDebug(boolean) -> b
    void setDryRun(boolean) -> c
com.google.android.apps.analytics.easytracking.ParameterLoader -> com.google.android.apps.analytics.easytracking.i:
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    int getInt(java.lang.String,int) -> a
com.google.android.apps.analytics.easytracking.ParameterLoaderImpl -> com.google.android.apps.analytics.easytracking.j:
    android.content.Context ctx -> a
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    int getInt(java.lang.String,int) -> a
com.google.android.apps.analytics.easytracking.TrackedActivity -> com.google.android.apps.analytics.easytracking.TrackedActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onStop() -> onStop
com.google.android.apps.analytics.easytracking.TrackedListActivity -> com.google.android.apps.analytics.easytracking.TrackedListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onStop() -> onStop
com.google.android.vending.licensing.AESObfuscator -> com.google.android.a.a.a:
    byte[] IV -> a
    javax.crypto.Cipher mEncryptor -> b
    javax.crypto.Cipher mDecryptor -> c
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.DeviceLimiter -> com.google.android.a.a.b:
com.google.android.vending.licensing.ILicenseResultListener -> com.google.android.a.a.c:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener$Stub -> com.google.android.a.a.d:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicenseResultListener$Stub$Proxy -> com.google.android.a.a.e:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicensingService -> com.google.android.a.a.f:
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.ILicensingService$Stub -> com.google.android.a.a.g:
    com.google.android.vending.licensing.ILicensingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicensingService$Stub$Proxy -> com.google.android.a.a.h:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.LicenseChecker -> com.google.android.a.a.i:
    java.security.SecureRandom RANDOM -> a
    com.google.android.vending.licensing.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.google.android.vending.licensing.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.lang.String mPackageName -> g
    java.lang.String mVersionCode -> h
    java.util.Set mChecksInProgress -> i
    java.util.Queue mPendingChecks -> j
    java.security.PublicKey generatePublicKey(java.lang.String) -> a
    void checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback) -> a
    void runChecks() -> b
    void finishCheck(com.google.android.vending.licensing.LicenseValidator) -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator) -> b
    void cleanupService() -> c
    void onDestroy() -> a
    java.lang.String getVersionCode(android.content.Context,java.lang.String) -> a
    void access$0(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> a
    void access$1(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> b
    android.os.Handler access$2(com.google.android.vending.licensing.LicenseChecker) -> a
    java.util.Set access$3(com.google.android.vending.licensing.LicenseChecker) -> b
    java.security.PublicKey access$4(com.google.android.vending.licensing.LicenseChecker) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener -> com.google.android.a.a.j:
    com.google.android.vending.licensing.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.google.android.vending.licensing.LicenseChecker this$0 -> a
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
    com.google.android.vending.licensing.LicenseValidator access$0(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> a
    void access$1(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> b
    com.google.android.vending.licensing.LicenseChecker access$2(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener$1 -> com.google.android.a.a.k:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    void run() -> run
com.google.android.vending.licensing.LicenseChecker$ResultListener$2 -> com.google.android.a.a.l:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    int val$responseCode -> b
    java.lang.String val$signedData -> c
    java.lang.String val$signature -> d
    void run() -> run
com.google.android.vending.licensing.LicenseCheckerCallback -> com.google.android.a.a.m:
    void allow(int) -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
com.google.android.vending.licensing.LicenseValidator -> com.google.android.a.a.n:
    com.google.android.vending.licensing.Policy mPolicy -> a
    com.google.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.google.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    com.google.android.vending.licensing.LicenseCheckerCallback getCallback() -> a
    int getNonce() -> b
    java.lang.String getPackageName() -> c
    void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    void handleResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    void handleApplicationError(int) -> a
    void handleInvalidResponse() -> d
com.google.android.vending.licensing.NullDeviceLimiter -> com.google.android.a.a.o:
com.google.android.vending.licensing.Obfuscator -> com.google.android.a.a.p:
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.Policy -> com.google.android.a.a.q:
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    boolean allowAccess() -> a
com.google.android.vending.licensing.PreferenceObfuscator -> com.google.android.a.a.r:
    android.content.SharedPreferences mPreferences -> a
    com.google.android.vending.licensing.Obfuscator mObfuscator -> b
    android.content.SharedPreferences$Editor mEditor -> c
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> b
    void commit() -> a
com.google.android.vending.licensing.ResponseData -> com.google.android.a.a.s:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    java.lang.String toString() -> toString
com.google.android.vending.licensing.ServerManagedPolicy -> com.google.android.a.a.t:
    long mValidityTimestamp -> a
    long mRetryUntil -> b
    long mMaxRetries -> c
    long mRetryCount -> d
    long mLastResponseTime -> e
    int mLastResponse -> f
    com.google.android.vending.licensing.PreferenceObfuscator mPreferences -> g
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    void setRetryCount(long) -> a
    void setValidityTimestamp(java.lang.String) -> a
    void setRetryUntil(java.lang.String) -> b
    void setMaxRetries(java.lang.String) -> c
    boolean allowAccess() -> a
    java.util.Map decodeExtras(java.lang.String) -> d
com.google.android.vending.licensing.ValidationException -> com.google.android.a.a.u:
com.google.android.vending.licensing.util.Base64 -> com.google.android.a.a.a.a:
    byte[] ALPHABET -> b
    byte[] WEBSAFE_ALPHABET -> c
    byte[] DECODABET -> d
    byte[] WEBSAFE_DECODABET -> e
    boolean $assertionsDisabled -> a
    java.lang.String encode(byte[]) -> a
    int decode4to3$355785af(byte[],byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.google.android.vending.licensing.util.Base64DecoderException -> com.google.android.a.a.a.b:
com.larvalabs.svgandroid.ParserHelper -> com.a.a.a:
    char current -> b
    java.lang.CharSequence s -> c
    int pos -> a
    int n -> d
    double[] pow10 -> e
    char read() -> d
    void skipWhitespace() -> a
    void advance() -> b
    void reportUnexpectedCharacterError(char) -> a
    float nextFloat() -> c
com.larvalabs.svgandroid.SVG -> com.a.a.b:
    android.graphics.Picture picture -> a
    android.graphics.RectF bounds -> b
    android.graphics.RectF limits -> c
    void setLimits(android.graphics.RectF) -> a
    android.graphics.Picture getPicture() -> a
com.larvalabs.svgandroid.SVGParseException -> com.a.a.c:
com.larvalabs.svgandroid.SVGParser -> com.a.a.d:
    com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources,int) -> a
    com.larvalabs.svgandroid.SVG parse$2929840(java.io.InputStream,java.lang.Integer,java.lang.Integer) -> a
    com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String) -> c
    java.lang.String getStringAttr(java.lang.String,org.xml.sax.Attributes) -> d
    java.lang.Float getFloatAttr(java.lang.String,org.xml.sax.Attributes,java.lang.Float) -> b
    java.lang.String access$200(java.lang.String,org.xml.sax.Attributes) -> a
    java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float) -> a
    android.graphics.Matrix access$600(java.lang.String) -> a
    java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes) -> b
    com.larvalabs.svgandroid.SVGParser$NumberParse access$900(java.lang.String,org.xml.sax.Attributes) -> c
    android.graphics.Path access$1000(java.lang.String) -> b
com.larvalabs.svgandroid.SVGParser$Gradient -> com.a.a.e:
    java.lang.String id -> a
    java.lang.String xlink -> b
    boolean isLinear -> c
    float x1 -> d
    float y1 -> e
    float x2 -> f
    float y2 -> g
    float x -> h
    float y -> i
    float radius -> j
    java.util.ArrayList positions -> k
    java.util.ArrayList colors -> l
    android.graphics.Matrix matrix -> m
    com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient) -> a
com.larvalabs.svgandroid.SVGParser$NumberParse -> com.a.a.f:
    java.util.ArrayList numbers -> a
    int nextCmd -> b
    java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse) -> a
com.larvalabs.svgandroid.SVGParser$Properties -> com.a.a.g:
    com.larvalabs.svgandroid.SVGParser$StyleSet styles -> a
    org.xml.sax.Attributes atts -> b
    java.lang.String getAttr(java.lang.String) -> a
    java.lang.Integer getHex(java.lang.String) -> b
    java.lang.Float getFloat(java.lang.String) -> c
com.larvalabs.svgandroid.SVGParser$SVGHandler -> com.a.a.h:
    android.graphics.Picture picture -> a
    android.graphics.Canvas canvas -> b
    android.graphics.Paint paint -> c
    android.graphics.RectF rect -> d
    android.graphics.RectF bounds -> e
    android.graphics.RectF limits -> f
    java.lang.Integer searchColor -> g
    java.lang.Integer replaceColor -> h
    boolean whiteMode -> i
    boolean pushed -> j
    java.util.HashMap gradientMap -> k
    java.util.HashMap gradientRefMap -> l
    com.larvalabs.svgandroid.SVGParser$Gradient gradient -> m
    boolean hidden -> n
    int hiddenLevel -> o
    boolean boundsMode -> p
    void setColorSwap(java.lang.Integer,java.lang.Integer) -> a
    void setWhiteMode$1385ff() -> a
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap) -> a
    boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties) -> a
    com.larvalabs.svgandroid.SVGParser$Gradient doGradient(boolean,org.xml.sax.Attributes) -> a
    void doColor(com.larvalabs.svgandroid.SVGParser$Properties,java.lang.Integer,boolean) -> a
    void doLimits(float,float) -> a
    void doLimits(android.graphics.Path) -> a
    void pushTransform(org.xml.sax.Attributes) -> a
    void popTransform() -> b
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.larvalabs.svgandroid.SVGParser$StyleSet -> com.a.a.i:
    java.util.HashMap styleMap -> a
    java.lang.String getStyle(java.lang.String) -> a
pl.mg6.common.FileUtils -> pl.mg6.common.a:
    java.lang.String tryReadFile(java.lang.String) -> a
pl.mg6.common.HtmlEntityEncoder -> pl.mg6.common.b:
    java.util.regex.Pattern WRONG_CHAR -> a
    java.util.regex.Pattern ENTITY -> b
    java.lang.String encode(java.lang.String) -> a
    java.lang.String decode(java.lang.String) -> b
pl.mg6.common.Settings -> pl.mg6.common.c:
    java.lang.String BOARD_INPUT_METHOD_DEFAULT_VALUE -> a
    android.content.SharedPreferences$Editor getSharedPrefsEditor(android.content.Context) -> J
    boolean isConfirmDisconnect(android.content.Context) -> a
    void setConfirmDisconnect$1a552341(android.content.Context) -> b
    boolean isShowGameEndDialog(android.content.Context) -> c
    void setShowGameEndDialog$1a552341(android.content.Context) -> d
    java.lang.String getUsername(android.content.Context) -> e
    java.lang.String getPassword(android.content.Context) -> f
    void setUsernameAndPassword(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean isRememberPassword(android.content.Context) -> g
    int getBoardInputMethod(android.content.Context) -> h
    java.lang.String getBoardColors(android.content.Context) -> i
    boolean isBoardPremove(android.content.Context) -> j
    java.lang.String getSeekTime(android.content.Context) -> k
    java.lang.String getSeekIncrement(android.content.Context) -> l
    java.lang.String getSeekType(android.content.Context) -> m
    boolean isSeekRated(android.content.Context) -> n
    boolean isSeekWithFormula(android.content.Context) -> o
    java.lang.String getSeekMinRating(android.content.Context) -> p
    java.lang.String getSeekMaxRating(android.content.Context) -> q
    void setSeekData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String) -> a
    java.lang.String getMatchTime(android.content.Context) -> r
    java.lang.String getMatchIncrement(android.content.Context) -> s
    java.lang.String getMatchType(android.content.Context) -> t
    boolean isMatchRated(android.content.Context) -> u
    void setMatchData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    int getSoughtGameType(android.content.Context) -> v
    int getSoughtOpponent(android.content.Context) -> w
    int getSoughtTime(android.content.Context) -> x
    void setSoughtData(android.content.Context,int,int,int) -> a
    boolean isHelpImprove(android.content.Context) -> y
    void addCommand(android.content.Context,java.lang.String) -> a
    java.util.List getFrequentlyUsedCommands(android.content.Context) -> z
    void removeFromFrequentlyUsedCommands(android.content.Context,java.lang.String) -> b
    boolean isVibrate(android.content.Context) -> A
    boolean isSound(android.content.Context) -> B
    void saveCurrentGame(android.content.Context,java.util.UUID) -> a
    java.util.UUID loadCurrentGame(android.content.Context) -> C
    void saveCurrentChat(android.content.Context,java.lang.String) -> c
    java.lang.String loadCurrentChat(android.content.Context) -> D
    boolean canShowRate(android.content.Context) -> E
    void setRateClicked(android.content.Context) -> F
    boolean isRegisteredUser(android.content.Context) -> G
    void setRegisteredUser(android.content.Context) -> H
    boolean isPaidApp(android.content.Context) -> I
pl.mg6.common.StringUtils -> pl.mg6.common.d:
    java.util.regex.Pattern FIRST_OR_AFTER_UNDERLINE -> a
    java.lang.String join(java.lang.String,java.lang.String[]) -> a
    java.lang.String underlinedToPascalCase(java.lang.String) -> a
pl.mg6.common.TimeUtils -> pl.mg6.common.e:
    java.lang.String formatTime(int,boolean) -> a
pl.mg6.common.android.AndroidUtils -> pl.mg6.common.android.a:
    java.lang.String getVersionName(android.content.Context) -> a
    int getVersionCode(android.content.Context) -> b
    void linkify(android.widget.TextView[]) -> a
pl.mg6.common.android.BaseActivity -> pl.mg6.common.android.BaseActivity:
    java.lang.String TAG -> a
    java.util.List aliveActivities -> b
    void finalize() -> finalize
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
pl.mg6.common.android.ButtonEx -> pl.mg6.common.android.ButtonEx:
    void setPressed(boolean) -> setPressed
pl.mg6.common.android.ImageListPreference -> pl.mg6.common.android.ImageListPreference:
    int layoutResId -> a
    int entryId -> b
    int imageId -> c
    int checkableId -> d
    int imagesResId -> e
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    int access$0(pl.mg6.common.android.ImageListPreference) -> a
    int access$1(pl.mg6.common.android.ImageListPreference) -> b
    int access$2(pl.mg6.common.android.ImageListPreference) -> c
    int access$3(pl.mg6.common.android.ImageListPreference) -> d
    int access$4(pl.mg6.common.android.ImageListPreference) -> e
pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter -> pl.mg6.common.android.b:
    android.view.LayoutInflater layoutInflater -> b
    java.lang.CharSequence[] values -> c
    java.lang.String selectedValue -> d
    java.lang.CharSequence[] texts -> e
    android.graphics.drawable.Drawable[] images -> f
    android.view.View$OnClickListener listener -> g
    pl.mg6.common.android.ImageListPreference this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    pl.mg6.common.android.ImageListPreference access$0(pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter) -> a
pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter$1 -> pl.mg6.common.android.c:
    pl.mg6.common.android.ImageListPreference$ImageListPreferenceAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
pl.mg6.common.android.ListPreferenceEx -> pl.mg6.common.android.ListPreferenceEx:
    void setValue(java.lang.String) -> setValue
    java.lang.CharSequence getSummary() -> getSummary
pl.mg6.common.android.OnSizeChangedListener -> pl.mg6.common.android.d:
    void onSizeChanged$5b6f797d(int) -> a
pl.mg6.common.android.ScrollViewEx -> pl.mg6.common.android.ScrollViewEx:
    pl.mg6.common.android.OnSizeChangedListener onSizeChangedListener -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setOnSizeChangedListener(pl.mg6.common.android.OnSizeChangedListener) -> a
pl.mg6.common.android.ViewUtils -> pl.mg6.common.android.e:
    void setTextAndScroll(android.widget.ScrollView,android.widget.TextView,java.lang.String) -> a
    void centerViewInScroll(android.view.View,android.widget.HorizontalScrollView) -> a
    void centerViewInScroll(android.view.View,android.widget.ScrollView) -> a
pl.mg6.common.android.ViewUtils$1 -> pl.mg6.common.android.f:
    android.widget.TextView val$textView -> a
    android.widget.ScrollView val$scrollView -> b
    void run() -> run
pl.mg6.common.android.ads.BaseAdListener -> pl.mg6.common.android.a.a:
    java.lang.String TAG -> a
    void onDismissScreen(com.google.ads.Ad) -> b
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onLeaveApplication(com.google.ads.Ad) -> c
    void onPresentScreen(com.google.ads.Ad) -> a
pl.mg6.common.android.tracker.TrackedActivity -> pl.mg6.common.android.tracker.TrackedActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackEvent$78a511a1(java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.common.android.tracker.TrackedPreferenceActivity -> pl.mg6.common.android.tracker.TrackedPreferenceActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void trackEvent$78a511a1(java.lang.String,java.lang.String,boolean) -> a
pl.mg6.common.android.tracker.Tracking -> pl.mg6.common.android.tracker.a:
    java.lang.String[] LABEL_ARRAY_SOURCES -> a
pl.mg6.yafi.BaseFreechessActivity -> pl.mg6.yafi.BaseFreechessActivity:
    java.lang.String TAG -> e
    android.app.AlertDialog disconnectedDialog -> f
    android.os.Handler handler -> a
    pl.mg6.yafi.model.FreechessService$FreechessServiceInterface service -> b
    boolean bindFreechessService -> c
    boolean stopped -> g
    boolean checkLoggedOn -> d
    boolean firstTime -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onContentChanged() -> onContentChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onDisconnected() -> b
    void onGameCreate() -> c
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(pl.mg6.yafi.BaseFreechessActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.BaseFreechessActivity$1 -> pl.mg6.yafi.a:
    long startTime -> b
    pl.mg6.yafi.BaseFreechessActivity this$0 -> a
    void onPresentScreen(com.google.ads.Ad) -> a
    void onLeaveApplication(com.google.ads.Ad) -> c
    void onDismissScreen(com.google.ads.Ad) -> b
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
pl.mg6.yafi.BaseFreechessActivity$2 -> pl.mg6.yafi.b:
    pl.mg6.yafi.BaseFreechessActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
pl.mg6.yafi.BoardActivity -> pl.mg6.yafi.BoardActivity:
    android.app.AlertDialog gameEndDialog -> e
    android.widget.CheckBox showGameEndDialogCheckbox -> f
    pl.mg6.yafi.BoardView boardView -> g
    android.widget.LinearLayout tabs -> h
    android.widget.HorizontalScrollView tabsScrollPortrait -> i
    android.widget.ScrollView tabsScrollLandscape -> j
    android.widget.TextView whiteNameField -> k
    android.widget.TextView whiteRatingField -> l
    android.widget.TextView whiteTimeField -> m
    android.widget.TextView blackNameField -> n
    android.widget.TextView blackRatingField -> o
    android.widget.TextView blackTimeField -> p
    android.widget.TextView resultField -> q
    android.widget.TextView descriptionField -> r
    android.view.View reviewOverlay -> s
    java.lang.Runnable updateTimesCallback -> t
    java.util.List allGamesIds -> u
    java.util.UUID currentGameId -> v
    int currentPosition -> w
    boolean showLag -> x
    boolean premove -> y
    java.util.Queue premoveQueue -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    void onFirstClick(android.view.View) -> onFirstClick
    void onPreviousClick(android.view.View) -> onPreviousClick
    void onNextClick(android.view.View) -> onNextClick
    void onLastClick(android.view.View) -> onLastClick
    void updateViews() -> e
    void updateTimes() -> f
    void positionInCenter(android.view.View) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onGameUpdate(java.util.UUID) -> a
    void addTab(java.util.UUID) -> b
    void onBoardTabClick(android.view.View) -> onBoardTabClick
    void onBoardCloseClick(android.view.View) -> onBoardCloseClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onMove(int,int,int,int) -> a
    void onUnsupportedDrawPicture() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(pl.mg6.yafi.BoardActivity) -> a
    void access$1(pl.mg6.yafi.BoardActivity,android.view.View) -> a
    android.widget.CheckBox access$2(pl.mg6.yafi.BoardActivity) -> b
    void access$3$423d2a3f(pl.mg6.yafi.BoardActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.BoardActivity$1 -> pl.mg6.yafi.c:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void run() -> run
pl.mg6.yafi.BoardActivity$2 -> pl.mg6.yafi.d:
    pl.mg6.yafi.BoardActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.BoardActivity$3 -> pl.mg6.yafi.e:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.BoardActivity$4 -> pl.mg6.yafi.f:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.BoardActivity$5 -> pl.mg6.yafi.g:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
pl.mg6.yafi.BoardActivity$6 -> pl.mg6.yafi.h:
    pl.mg6.yafi.BoardActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.BoardActivity$7 -> pl.mg6.yafi.i:
    pl.mg6.yafi.BoardActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.BoardView -> pl.mg6.yafi.BoardView:
    java.lang.String TAG -> a
    pl.mg6.yafi.BoardView$OnMoveListener listener -> b
    pl.mg6.yafi.model.data.Position position -> c
    boolean flip -> d
    android.graphics.Paint paint -> e
    android.graphics.RectF rect -> f
    java.util.Map pictures -> g
    java.util.Map bitmaps -> h
    int initFile -> i
    int initRank -> j
    int destFile -> k
    int destRank -> l
    float draggingX -> m
    float draggingY -> n
    int inputMethod -> o
    int lightSquareColor -> p
    int darkSquareColor -> q
    boolean premove -> r
    int state -> s
    void init() -> c
    void setStateNone() -> a
    void setMoveSent() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnMoveListener(pl.mg6.yafi.BoardView$OnMoveListener) -> a
    void setPosition(pl.mg6.yafi.model.data.Position) -> a
    void setFlip(boolean) -> a
    int flip(int) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
pl.mg6.yafi.BoardView$OnMoveListener -> pl.mg6.yafi.j:
    void onMove(int,int,int,int) -> a
    void onUnsupportedDrawPicture() -> d
pl.mg6.yafi.ChallengesActivity -> pl.mg6.yafi.ChallengesActivity:
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter adapterSent -> e
    android.widget.ListView listSent -> f
    android.widget.TextView sentEmptyView -> g
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter adapterReceived -> h
    android.widget.ListView listReceived -> i
    android.widget.TextView recevicedEmptyView -> j
    java.lang.String menuName -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    void onRefreshClick(android.view.View) -> onRefreshClick
    boolean handleMessage(android.os.Message) -> handleMessage
    void onChallengeClick(android.view.View) -> onChallengeClick
    void onCommandClick(android.view.View) -> onCommandClick
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter access$0(pl.mg6.yafi.ChallengesActivity) -> a
    void access$1(pl.mg6.yafi.ChallengesActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ChallengesActivity) -> b
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter access$3(pl.mg6.yafi.ChallengesActivity) -> c
pl.mg6.yafi.ChallengesActivity$1 -> pl.mg6.yafi.k:
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChallengesActivity$2 -> pl.mg6.yafi.l:
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChallengesActivity$ChallengesAdapter -> pl.mg6.yafi.m:
    android.view.LayoutInflater layoutInflater -> b
    int layoutId -> c
    pl.mg6.yafi.ChallengesActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void removeWithName(java.lang.String) -> a
    pl.mg6.yafi.ChallengesActivity access$0(pl.mg6.yafi.ChallengesActivity$ChallengesAdapter) -> a
pl.mg6.yafi.ChallengesActivity$ChallengesAdapter$1 -> pl.mg6.yafi.n:
    pl.mg6.yafi.ChallengesActivity$ChallengesAdapter this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
pl.mg6.yafi.ChatActivity -> pl.mg6.yafi.ChatActivity:
    android.widget.ListView outputList -> e
    android.widget.EditText inputField -> f
    android.widget.LinearLayout tabs -> g
    android.widget.HorizontalScrollView tabsScrollPortrait -> h
    android.widget.ScrollView tabsScrollLandscape -> i
    pl.mg6.yafi.ChatActivity$ChatAdapter outputAdapter -> j
    java.util.List allChatIds -> k
    java.lang.String currentChatId -> l
    boolean forceCreate -> m
    java.lang.String menuName -> n
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onPause() -> onPause
    void onSendClick(android.view.View) -> onSendClick
    void onChatItemClick(android.view.View) -> onChatItemClick
    boolean sendMessage() -> d
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onNotLoggedIn(java.lang.String) -> a
    void addTab(java.lang.String) -> b
    void updateViews() -> e
    pl.mg6.yafi.ChatActivity$ChatAdapter access$0(pl.mg6.yafi.ChatActivity) -> a
    void access$1(pl.mg6.yafi.ChatActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ChatActivity) -> b
    java.lang.String access$3(pl.mg6.yafi.ChatActivity) -> c
    boolean access$4(pl.mg6.yafi.ChatActivity) -> d
    void access$5(pl.mg6.yafi.ChatActivity,android.view.View) -> a
    void access$6(pl.mg6.yafi.ChatActivity,java.lang.String) -> b
    void access$7(pl.mg6.yafi.ChatActivity) -> e
pl.mg6.yafi.ChatActivity$1 -> pl.mg6.yafi.o:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChatActivity$2 -> pl.mg6.yafi.p:
    pl.mg6.yafi.ChatActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.ChatActivity$3 -> pl.mg6.yafi.q:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.widget.Button val$tab -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$4 -> pl.mg6.yafi.r:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$5 -> pl.mg6.yafi.s:
    pl.mg6.yafi.ChatActivity this$0 -> a
    android.view.View val$selected -> b
    void run() -> run
pl.mg6.yafi.ChatActivity$6 -> pl.mg6.yafi.t:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
pl.mg6.yafi.ChatActivity$7 -> pl.mg6.yafi.u:
    pl.mg6.yafi.ChatActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.ChatActivity$ChatAdapter -> pl.mg6.yafi.v:
    android.view.LayoutInflater layoutInflater -> a
    java.util.List items -> b
    int getCount() -> getCount
    pl.mg6.yafi.model.data.Communication getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setItems(java.util.List) -> a
    void addItem(pl.mg6.yafi.model.data.Communication) -> a
    java.lang.Object getItem(int) -> getItem
pl.mg6.yafi.ConsoleActivity -> pl.mg6.yafi.ConsoleActivity:
    android.widget.TextView outputField -> e
    android.widget.EditText inputField -> f
    pl.mg6.common.android.ScrollViewEx outputScroll -> g
    android.widget.LinearLayout tabs -> h
    void onCreate(android.os.Bundle) -> onCreate
    boolean sendCommand() -> d
    void onSendClick(android.view.View) -> onSendClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean access$0(pl.mg6.yafi.ConsoleActivity) -> a
    android.widget.TextView access$1(pl.mg6.yafi.ConsoleActivity) -> b
    pl.mg6.common.android.ScrollViewEx access$2(pl.mg6.yafi.ConsoleActivity) -> c
    void access$3(pl.mg6.yafi.ConsoleActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.ConsoleActivity$1 -> pl.mg6.yafi.w:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.ConsoleActivity$2 -> pl.mg6.yafi.x:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    void onSizeChanged$5b6f797d(int) -> a
pl.mg6.yafi.ConsoleActivity$2$1 -> pl.mg6.yafi.y:
    pl.mg6.yafi.ConsoleActivity$2 this$1 -> a
    void run() -> run
pl.mg6.yafi.ConsoleActivity$3 -> pl.mg6.yafi.z:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    java.lang.String val$command -> b
    void onClick(android.view.View) -> onClick
pl.mg6.yafi.ConsoleActivity$4 -> pl.mg6.yafi.aa:
    pl.mg6.yafi.ConsoleActivity this$0 -> a
    java.lang.String val$command -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.InformationsActivity -> pl.mg6.yafi.InformationsActivity:
    java.lang.String username -> e
    int state -> f
    int[] notesIds -> g
    int[] currentRatingIds -> h
    int[] gamesIds -> i
    int[] ratingNames -> j
    java.lang.String historicalGameId -> k
    java.lang.String trackingLabel -> l
    android.view.View$OnCreateContextMenuListener contextMenuListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onEntryClick(android.view.View) -> onEntryClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void access$0(pl.mg6.yafi.InformationsActivity,java.lang.String) -> a
    java.lang.String access$1(pl.mg6.yafi.InformationsActivity) -> a
    java.lang.String access$2(pl.mg6.yafi.InformationsActivity) -> b
    void access$3(pl.mg6.yafi.InformationsActivity,java.lang.String) -> b
pl.mg6.yafi.InformationsActivity$1 -> pl.mg6.yafi.ab:
    pl.mg6.yafi.InformationsActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LicenseCheckActivity -> pl.mg6.yafi.LicenseCheckActivity:
    java.lang.String TAG -> a
    com.google.android.vending.licensing.LicenseChecker checker -> b
    android.view.View progressView -> c
    android.view.View errorView -> d
    android.widget.TextView descriptionField -> e
    android.widget.Button goToMarketButton -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onRetryClick(android.view.View) -> onRetryClick
    void onGoToMarketClick(android.view.View) -> onGoToMarketClick
    void checkLicense() -> b
    java.lang.String access$0() -> a
    void access$1(pl.mg6.yafi.LicenseCheckActivity,int) -> a
    void access$2(pl.mg6.yafi.LicenseCheckActivity,java.lang.String,java.lang.String,java.lang.String,int) -> a
pl.mg6.yafi.LicenseCheckActivity$1 -> pl.mg6.yafi.ac:
    pl.mg6.yafi.LicenseCheckActivity this$0 -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
    void allow(int) -> a
pl.mg6.yafi.LicenseCheckActivity$1$1 -> pl.mg6.yafi.ad:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    int val$reason -> b
    void run() -> run
pl.mg6.yafi.LicenseCheckActivity$1$2 -> pl.mg6.yafi.ae:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    int val$errorCode -> b
    void run() -> run
pl.mg6.yafi.LicenseCheckActivity$1$3 -> pl.mg6.yafi.af:
    pl.mg6.yafi.LicenseCheckActivity$1 this$1 -> a
    void run() -> run
pl.mg6.yafi.ListUsersActivity -> pl.mg6.yafi.ListUsersActivity:
    android.widget.ListView listView -> e
    android.widget.TextView emptyView -> f
    android.widget.ArrayAdapter listAdapter -> g
    boolean received -> h
    java.lang.String menuName -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    android.widget.ArrayAdapter access$0(pl.mg6.yafi.ListUsersActivity) -> a
    void access$1(pl.mg6.yafi.ListUsersActivity,java.lang.String) -> a
    java.lang.String access$2(pl.mg6.yafi.ListUsersActivity) -> b
pl.mg6.yafi.ListUsersActivity$1 -> pl.mg6.yafi.ag:
    pl.mg6.yafi.ListUsersActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pl.mg6.yafi.ListUsersActivity$2 -> pl.mg6.yafi.ah:
    pl.mg6.yafi.ListUsersActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LoginActivity -> pl.mg6.yafi.LoginActivity:
    android.widget.EditText usernameField -> e
    android.widget.EditText passwordField -> f
    android.widget.Button loginButton -> g
    android.widget.Button ficsBanner -> h
    android.app.ProgressDialog connectingDialog -> i
    android.app.AlertDialog unableToLogOnDialog -> j
    java.lang.String unableToLogOnInfo -> k
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onLoginClick(android.view.View) -> onLoginClick
    void initLogin() -> d
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onSendingUsername() -> e
    void onSendingPassword() -> f
    void onLoggedOn() -> g
    void onDisconnected() -> b
    void dismissConnectingDialog() -> h
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onFicsBannerClick(android.view.View) -> onFicsBannerClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.widget.EditText access$0(pl.mg6.yafi.LoginActivity) -> a
    android.widget.Button access$1(pl.mg6.yafi.LoginActivity) -> b
    void access$2(pl.mg6.yafi.LoginActivity) -> c
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState() -> i
    void access$4(pl.mg6.yafi.LoginActivity) -> d
pl.mg6.yafi.LoginActivity$1 -> pl.mg6.yafi.ai:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pl.mg6.yafi.LoginActivity$2 -> pl.mg6.yafi.aj:
    pl.mg6.yafi.LoginActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
pl.mg6.yafi.LoginActivity$3 -> pl.mg6.yafi.ak:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.LoginActivity$4 -> pl.mg6.yafi.al:
    pl.mg6.yafi.LoginActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
pl.mg6.yafi.MatchActivity -> pl.mg6.yafi.MatchActivity:
    android.widget.EditText userField -> e
    android.widget.EditText timeField -> f
    android.widget.EditText incrementField -> g
    android.widget.Spinner typeField -> h
    android.widget.CheckBox ratedField -> i
    java.lang.String[] typeIds -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onMatchClick(android.view.View) -> onMatchClick
    boolean handleMessage(android.os.Message) -> handleMessage
pl.mg6.yafi.MenuActivity -> pl.mg6.yafi.MenuActivity:
    android.app.AlertDialog confirmDisconnectDialog -> e
    android.widget.CheckBox confirmDisconnectCheckbox -> f
    android.widget.Button boardButton -> g
    android.view.ViewGroup updateRatePanel -> h
    boolean triedShowRate -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onBoardClick(android.view.View) -> onBoardClick
    void onChatClick(android.view.View) -> onChatClick
    void onSeekClick(android.view.View) -> onSeekClick
    void onSoughtClick(android.view.View) -> onSoughtClick
    void onMatchClick(android.view.View) -> onMatchClick
    void onChallengesClick(android.view.View) -> onChallengesClick
    void onSearchForGameClick(android.view.View) -> onSearchForGameClick
    void onConsoleClick(android.view.View) -> onConsoleClick
    void onUserPrefsClick(android.view.View) -> onUserPrefsClick
    void onNewsMessagesClick(android.view.View) -> onNewsMessagesClick
    void onBackPressed() -> onBackPressed
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void showUpdateInfo() -> d
    void onUpdateRateClick(android.view.View) -> onUpdateRateClick
    void onDisconnected() -> b
    void onGameCreate() -> c
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.widget.CheckBox access$0(pl.mg6.yafi.MenuActivity) -> a
    void access$1$51589fc2(pl.mg6.yafi.MenuActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.MenuActivity$1 -> pl.mg6.yafi.am:
    pl.mg6.yafi.MenuActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.mg6.yafi.NewsAndMessagesActivity -> pl.mg6.yafi.NewsAndMessagesActivity:
    android.widget.ListView content -> e
    pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter adapter -> f
    int smallestNews -> g
    java.lang.String menuName -> h
    int itemId -> i
    void onCreate(android.os.Bundle) -> onCreate
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onShowAllMessagesClick(android.view.View) -> onShowAllMessagesClick
    void onShowOlderNewsClick(android.view.View) -> onShowOlderNewsClick
    void onShowAllNewsClick(android.view.View) -> onShowAllNewsClick
    void onMessageClick(android.view.View) -> onMessageClick
    void onNewsClick(android.view.View) -> onNewsClick
    void access$0(pl.mg6.yafi.NewsAndMessagesActivity,java.lang.String) -> a
    void access$1(pl.mg6.yafi.NewsAndMessagesActivity,int) -> a
    java.lang.String access$2(pl.mg6.yafi.NewsAndMessagesActivity) -> a
pl.mg6.yafi.NewsAndMessagesActivity$1 -> pl.mg6.yafi.an:
    pl.mg6.yafi.NewsAndMessagesActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter -> pl.mg6.yafi.ao:
    android.view.LayoutInflater layoutInflater -> a
    boolean canHaveMessages -> b
    pl.mg6.yafi.model.data.WelcomeData data -> c
    java.util.List messages -> d
    java.util.SortedSet news -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setCanHaveMessages(boolean) -> a
    void setData(pl.mg6.yafi.model.data.WelcomeData) -> a
    void setMessages(java.util.List) -> a
    void removeMessage(int) -> a
    void addNews(java.util.List) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.util.SortedSet access$0(pl.mg6.yafi.NewsAndMessagesActivity$NewsMessagesAdapter) -> a
pl.mg6.yafi.NewsDetailsActivity -> pl.mg6.yafi.NewsDetailsActivity:
    pl.mg6.yafi.model.data.NewsItem news -> e
    android.view.View loading -> f
    android.widget.TextView date -> g
    android.widget.TextView title -> h
    android.widget.TextView message -> i
    android.widget.TextView author -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onStartHandlingMessages(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onNewsItem(pl.mg6.yafi.model.data.NewsItem) -> a
pl.mg6.yafi.SearchForGameActivity -> pl.mg6.yafi.SearchForGameActivity:
pl.mg6.yafi.SeekActivity -> pl.mg6.yafi.SeekActivity:
    android.widget.EditText timeField -> e
    android.widget.EditText incrementField -> f
    android.widget.Spinner typeField -> g
    android.widget.CheckBox ratedField -> h
    android.widget.CheckBox formulaField -> i
    android.widget.EditText minRatingField -> j
    android.widget.EditText maxRatingField -> k
    java.lang.String[] typeIds -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSeekClick(android.view.View) -> onSeekClick
    boolean handleMessage(android.os.Message) -> handleMessage
pl.mg6.yafi.SelfFinishingActivity -> pl.mg6.yafi.SelfFinishingActivity:
    void onCreate(android.os.Bundle) -> onCreate
pl.mg6.yafi.SendMessageActivity -> pl.mg6.yafi.SendMessageActivity:
    android.widget.EditText usernameField -> e
    android.widget.EditText messageField -> f
    android.widget.Button sendButton -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onSendClick(android.view.View) -> onSendClick
    android.widget.EditText access$0(pl.mg6.yafi.SendMessageActivity) -> a
    android.widget.EditText access$1(pl.mg6.yafi.SendMessageActivity) -> b
    android.widget.Button access$2(pl.mg6.yafi.SendMessageActivity) -> c
pl.mg6.yafi.SendMessageActivity$1 -> pl.mg6.yafi.ap:
    pl.mg6.yafi.SendMessageActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
pl.mg6.yafi.SoughtActivity -> pl.mg6.yafi.SoughtActivity:
    boolean recevingSeeks -> e
    pl.mg6.yafi.SoughtActivity$SoughtAdapter soughtAdapter -> f
    android.widget.GridView soughtList -> g
    android.widget.TextView emptyView -> h
    android.widget.Spinner gameTypeFilter -> i
    java.lang.String[] gameTypeFilterPatterns -> j
    android.widget.Spinner opponentFilter -> k
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] opponentFilterPatterns -> l
    android.widget.Spinner timeFilter -> m
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] timeFilterPatterns -> n
    java.lang.String menuName -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStartHandlingMessages(boolean) -> a
    void onStopHandlingMessages() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    pl.mg6.yafi.SoughtActivity$SoughtAdapter access$0(pl.mg6.yafi.SoughtActivity) -> a
    java.lang.String[] access$1(pl.mg6.yafi.SoughtActivity) -> b
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] access$2(pl.mg6.yafi.SoughtActivity) -> c
    pl.mg6.yafi.model.data.seek.filters.SeekFilter[] access$3(pl.mg6.yafi.SoughtActivity) -> d
    void access$4(pl.mg6.yafi.SoughtActivity,pl.mg6.yafi.model.data.SeekInfo) -> a
    void access$5(pl.mg6.yafi.SoughtActivity,java.lang.String) -> a
    java.lang.String access$6(pl.mg6.yafi.SoughtActivity) -> e
pl.mg6.yafi.SoughtActivity$1 -> pl.mg6.yafi.aq:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$2 -> pl.mg6.yafi.ar:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$3 -> pl.mg6.yafi.as:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
pl.mg6.yafi.SoughtActivity$4 -> pl.mg6.yafi.at:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
pl.mg6.yafi.SoughtActivity$5 -> pl.mg6.yafi.au:
    pl.mg6.yafi.SoughtActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
pl.mg6.yafi.SoughtActivity$SoughtAdapter -> pl.mg6.yafi.av:
    android.view.LayoutInflater layoutInflater -> a
    java.util.List allItems -> b
    java.util.List items -> c
    pl.mg6.yafi.model.data.seek.filters.SeekFilter gameTypeFilter -> d
    pl.mg6.yafi.model.data.seek.filters.SeekFilter oppFilter -> e
    pl.mg6.yafi.model.data.seek.filters.SeekFilter etimeFilter -> f
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    pl.mg6.yafi.model.data.SeekInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    boolean isExpired(int) -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> b
    void add(pl.mg6.yafi.model.data.SeekInfo) -> a
    void addAll(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void removeAll(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void removeAll() -> a
    void setGameTypeFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> a
    void setOpponentFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> b
    void setTimeFilter(pl.mg6.yafi.model.data.seek.filters.SeekFilter) -> c
    void refilter() -> b
    java.lang.Object getItem(int) -> getItem
    void access$1(pl.mg6.yafi.SoughtActivity$SoughtAdapter) -> a
pl.mg6.yafi.SoughtActivity$SoughtAdapter$EmptyItemStrategy -> pl.mg6.yafi.aw:
    android.view.LayoutInflater layoutInflater -> a
    java.lang.Long expiryTime -> b
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$ItemStrategy -> pl.mg6.yafi.ax:
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$SeekItemStrategy -> pl.mg6.yafi.ay:
    android.view.LayoutInflater layoutInflater -> a
    pl.mg6.yafi.model.data.SeekInfo seekInfo -> b
    boolean isEnabled() -> a
    int getItemViewType() -> b
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    pl.mg6.yafi.model.data.SeekInfo getItem() -> c
    long getItemId() -> d
    boolean isExpired() -> e
pl.mg6.yafi.SoughtActivity$SoughtAdapter$SeekItemStrategy$ViewHolder -> pl.mg6.yafi.az:
    android.widget.TextView name -> a
    android.widget.TextView rating -> b
    android.widget.TextView type -> c
    android.widget.TextView other -> d
pl.mg6.yafi.UserPreferencesActivity -> pl.mg6.yafi.UserPreferencesActivity:
    android.content.SharedPreferences$OnSharedPreferenceChangeListener listener -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0$5fefb1c8(pl.mg6.yafi.UserPreferencesActivity,java.lang.String,java.lang.String,boolean) -> a
    void access$1$5fef71f7(pl.mg6.yafi.UserPreferencesActivity,java.lang.String,java.lang.String,java.lang.String) -> a
pl.mg6.yafi.UserPreferencesActivity$1 -> pl.mg6.yafi.ba:
    pl.mg6.yafi.UserPreferencesActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
pl.mg6.yafi.YafiActivity -> pl.mg6.yafi.YafiActivity:
    void onCreate(android.os.Bundle) -> onCreate
pl.mg6.yafi.lib.R -> pl.mg6.yafi.a.a:
pl.mg6.yafi.lib.R$array -> pl.mg6.yafi.a.b:
    int sought_game_types_pattern -> a
    int types_ids -> b
pl.mg6.yafi.lib.R$dimen -> pl.mg6.yafi.a.c:
    int chat_tab_item_min_width -> a
    int console_tab_item_max_width -> b
    int console_tab_item_min_width -> c
pl.mg6.yafi.lib.R$drawable -> pl.mg6.yafi.a.d:
    int ic_launcher -> a
pl.mg6.yafi.lib.R$id -> pl.mg6.yafi.a.e:
    int ad_view -> a
    int board_black_name -> b
    int board_black_rating -> c
    int board_black_time -> d
    int board_description -> e
    int board_result -> f
    int board_review_overlay -> g
    int board_tab_close -> h
    int board_tab_desc -> i
    int board_tab_update -> j
    int board_tabs -> k
    int board_tabs_scroll_landscape -> l
    int board_tabs_scroll_portrait -> m
    int board_view -> n
    int board_white_name -> o
    int board_white_rating -> p
    int board_white_time -> q
    int challenge_item_increment -> r
    int challenge_item_rated -> s
    int challenge_item_time -> t
    int challenge_item_type -> u
    int challenge_item_who -> v
    int challenges_list_received -> w
    int challenges_list_received_empty -> x
    int challenges_list_sent -> y
    int challenges_list_sent_empty -> z
    int chat_input -> A
    int chat_item_message -> B
    int chat_item_name -> C
    int chat_item_time -> D
    int chat_output -> E
    int chat_tabs -> F
    int chat_tabs_scroll_landscape -> G
    int chat_tabs_scroll_portrait -> H
    int console_input -> I
    int console_output -> J
    int console_output_scroll -> K
    int console_tabs -> L
    int dont_ask_again_checkbox -> M
    int empty -> N
    int info_adjourned_entry_black_name -> O
    int info_adjourned_entry_black_strength -> P
    int info_adjourned_entry_increment -> Q
    int info_adjourned_entry_time -> R
    int info_adjourned_entry_white_name -> S
    int info_adjourned_entry_white_strength -> T
    int info_adjourned_loading -> U
    int info_adjourned_stub -> V
    int info_finger_note_1 -> W
    int info_finger_note_10 -> X
    int info_finger_note_2 -> Y
    int info_finger_note_3 -> Z
    int info_finger_note_4 -> aa
    int info_finger_note_5 -> ab
    int info_finger_note_6 -> ac
    int info_finger_note_7 -> ad
    int info_finger_note_8 -> ae
    int info_finger_note_9 -> af
    int info_finger_rating_atomic_current -> ag
    int info_finger_rating_atomic_games -> ah
    int info_finger_rating_blitz_current -> ai
    int info_finger_rating_blitz_games -> aj
    int info_finger_rating_bughouse_current -> ak
    int info_finger_rating_bughouse_games -> al
    int info_finger_rating_crazyhouse_current -> am
    int info_finger_rating_crazyhouse_games -> an
    int info_finger_rating_lightning_current -> ao
    int info_finger_rating_lightning_games -> ap
    int info_finger_rating_losers_current -> aq
    int info_finger_rating_losers_games -> ar
    int info_finger_rating_standard_current -> as
    int info_finger_rating_standard_games -> at
    int info_finger_rating_suicide_current -> au
    int info_finger_rating_suicide_games -> av
    int info_finger_rating_wild_current -> aw
    int info_finger_rating_wild_games -> ax
    int info_finger_stub -> ay
    int info_finger_titles -> az
    int info_finger_vars_loading -> aA
    int info_history_entry_black_name -> aB
    int info_history_entry_black_rating -> aC
    int info_history_entry_increment -> aD
    int info_history_entry_result -> aE
    int info_history_entry_time -> aF
    int info_history_entry_white_name -> aG
    int info_history_entry_white_rating -> aH
    int info_history_loading -> aI
    int info_history_stub -> aJ
    int info_journal_entry_black_name -> aK
    int info_journal_entry_black_rating -> aL
    int info_journal_entry_increment -> aM
    int info_journal_entry_result -> aN
    int info_journal_entry_time -> aO
    int info_journal_entry_white_name -> aP
    int info_journal_entry_white_rating -> aQ
    int info_journal_loading -> aR
    int info_journal_stub -> aS
    int info_no_adjourned -> aT
    int info_no_history -> aU
    int info_no_journal -> aV
    int info_private_journal -> aW
    int info_unreg_journal -> aX
    int info_username -> aY
    int info_vars_interface -> aZ
    int info_vars_stub -> ba
    int license_check_description -> bb
    int license_check_error -> bc
    int license_check_go_to_market -> bd
    int license_check_progress -> be
    int list -> bf
    int login_fics_banner -> bg
    int login_password -> bh
    int login_submit -> bi
    int login_username -> bj
    int main_board -> bk
    int main_update_rate_button -> bl
    int main_update_rate_panel -> bm
    int main_update_rate_text -> bn
    int match_increment -> bo
    int match_rated -> bp
    int match_time -> bq
    int match_type -> br
    int match_user -> bs
    int message_item_content -> bt
    int message_item_date -> bu
    int message_item_from -> bv
    int messages_show_all -> bw
    int messages_show_older -> bx
    int mg_examine -> by
    int mg_observe -> bz
    int mg_play -> bA
    int mi_abort -> bB
    int mi_chat -> bC
    int mi_contact -> bD
    int mi_delete -> bE
    int mi_draw -> bF
    int mi_examine -> bG
    int mi_flip -> bH
    int mi_homepage -> bI
    int mi_inchannel -> bJ
    int mi_info -> bK
    int mi_issue_tracker -> bL
    int mi_match -> bM
    int mi_observe_blitz -> bN
    int mi_observe_standard -> bO
    int mi_preferences -> bP
    int mi_register -> bQ
    int mi_reply -> bR
    int mi_reset_password -> bS
    int mi_resign -> bT
    int mi_review -> bU
    int mi_unexamine -> bV
    int mi_unobserve -> bW
    int news_details_author -> bX
    int news_details_date -> bY
    int news_details_loading -> bZ
    int news_details_message -> ca
    int news_details_title -> cb
    int news_item_date -> cc
    int news_item_title -> cd
    int news_messages_list -> ce
    int seek_formula -> cf
    int seek_increment -> cg
    int seek_max_rating -> ch
    int seek_min_rating -> ci
    int seek_rated -> cj
    int seek_time -> ck
    int seek_type -> cl
    int send_message_message -> cm
    int send_message_send -> cn
    int send_message_username -> co
    int sought_empty_view -> cp
    int sought_game_type -> cq
    int sought_item_name -> cr
    int sought_item_other -> cs
    int sought_item_rating -> ct
    int sought_item_type -> cu
    int sought_list -> cv
    int sought_opponent -> cw
    int sought_time -> cx
pl.mg6.yafi.lib.R$layout -> pl.mg6.yafi.a.f:
    int board_tab -> a
    int board_view -> b
    int challenge_received_item -> c
    int challenge_sent_item -> d
    int challenges_view -> e
    int chat_item -> f
    int chat_view -> g
    int common_item_loading -> h
    int console_view -> i
    int dont_ask_again -> j
    int info_adjourned_entry -> k
    int info_history_entry -> l
    int info_journal_entry -> m
    int info_view -> n
    int license_check_view -> o
    int listusers_view -> p
    int login_view -> q
    int main_view -> r
    int match_view -> s
    int message_item -> t
    int messages_no_item -> u
    int messages_no_new_item -> v
    int messages_only_registered_can_have_messages_item -> w
    int messages_show_all_item -> x
    int messages_title_item -> y
    int news_details_view -> z
    int news_item -> A
    int news_messages_view -> B
    int news_no_new_item -> C
    int news_show_all_item -> D
    int news_title_item -> E
    int seek_view -> F
    int send_message_view -> G
    int sought_item -> H
    int sought_item_empty -> I
    int sought_view -> J
pl.mg6.yafi.lib.R$menu -> pl.mg6.yafi.a.g:
    int board -> a
    int chat_item -> b
    int chat_item_without_chat -> c
    int chat_tab_channel -> d
    int fics_banner -> e
    int informations -> f
    int login -> g
    int main -> h
    int message_item -> i
pl.mg6.yafi.lib.R$raw -> pl.mg6.yafi.a.h:
    int default_black_bishop -> a
    int default_black_king -> b
    int default_black_knight -> c
    int default_black_pawn -> d
    int default_black_queen -> e
    int default_black_rook -> f
    int default_white_bishop -> g
    int default_white_king -> h
    int default_white_knight -> i
    int default_white_pawn -> j
    int default_white_queen -> k
    int default_white_rook -> l
    int move -> m
    int tell -> n
pl.mg6.yafi.lib.R$string -> pl.mg6.yafi.a.i:
    int abort_requested -> a
    int board_no_game_description -> b
    int cancel -> c
    int challenges_getting -> d
    int challenges_received_empty -> e
    int challenges_sent_empty -> f
    int chat -> g
    int connecting -> h
    int disconnected -> i
    int draw_offered -> j
    int enter_username -> k
    int error_check_in_progress -> l
    int error_invalid_package_name -> m
    int error_invalid_public_key -> n
    int error_missing_permission -> o
    int error_non_matching_uid -> p
    int error_not_licensed -> q
    int error_not_market_managed -> r
    int error_retry -> s
    int error_unknown_code -> t
    int examine -> u
    int fics -> v
    int getting_sought_items -> w
    int hide_controls -> x
    int if_enjoy_please_rate -> y
    int illegal_move -> z
    int informations -> A
    int invalid_password -> B
    int invalid_username -> C
    int login -> D
    int login_as_guest -> E
    int match -> F
    int new_version_available -> G
    int no_sought_items -> H
    int ok -> I
    int rate_yafi -> J
    int rematch -> K
    int sending_password -> L
    int sending_username -> M
    int show_controls -> N
    int title_admin -> O
    int title_advisor -> P
    int title_blind -> Q
    int title_comp -> R
    int title_demo -> S
    int title_fm -> T
    int title_gm -> U
    int title_im -> V
    int title_sr -> W
    int title_td -> X
    int title_team -> Y
    int title_tm -> Z
    int title_unreg -> aa
    int title_wfm -> ab
    int title_wgm -> ac
    int title_wim -> ad
    int type_atomic -> ae
    int type_blitz -> af
    int type_bughouse -> ag
    int type_crazyhouse -> ah
    int type_lightning -> ai
    int type_losers -> aj
    int type_standard -> ak
    int type_suicide -> al
    int type_wild -> am
    int unable_to_connect -> an
    int unable_to_connect_message -> ao
    int unable_to_log_on -> ap
    int update -> aq
    int var_interface -> ar
    int want_to_disconnect_question -> as
    int yes -> at
    int you_are_playing_or_examining -> au
    int you_may_not_announce -> av
pl.mg6.yafi.lib.R$styleable -> pl.mg6.yafi.a.j:
    int[] ImageListPreference -> a
pl.mg6.yafi.lib.R$xml -> pl.mg6.yafi.a.k:
    int user_prefs -> a
pl.mg6.yafi.model.ConnectionProtocol -> pl.mg6.yafi.model.a:
    int read(byte[]) -> a
    void write(byte[]) -> b
pl.mg6.yafi.model.FreechessConnection -> pl.mg6.yafi.model.b:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessConnection$Listener listener -> b
    java.lang.String username -> c
    java.lang.String password -> d
    java.lang.String interfaceName -> e
    java.lang.String realUsername -> f
    boolean registered -> g
    pl.mg6.yafi.model.FreechessConnection$ConnectionState state -> h
    java.lang.Thread readerThread -> i
    android.os.HandlerThread writerThread -> j
    android.os.Handler writerHandler -> k
    pl.mg6.yafi.model.ConnectionProtocol protocol -> l
    java.lang.StringBuilder readerBuffer -> m
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState -> n
    void connect() -> a
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> b
    boolean isLoggedOn() -> c
    void forceEnd() -> d
    java.lang.String getRealUsername() -> e
    boolean isRegistered() -> f
    void run() -> run
    void loop() -> g
    void parse(byte[],int) -> a
    void send(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void notifyUnableToLogOn(java.lang.String) -> b
    void notifyDisconnected() -> h
    void notifyReceivedOutput(java.lang.String) -> c
    void setListener(pl.mg6.yafi.model.FreechessConnection$Listener) -> a
    int[] $SWITCH_TABLE$pl$mg6$yafi$model$FreechessConnection$ConnectionState() -> i
pl.mg6.yafi.model.FreechessConnection$1 -> pl.mg6.yafi.model.c:
    pl.mg6.yafi.model.FreechessConnection this$0 -> a
    java.lang.Object[] val$socketAndErrors -> b
    void run() -> run
pl.mg6.yafi.model.FreechessConnection$2 -> pl.mg6.yafi.model.d:
    pl.mg6.yafi.model.FreechessConnection this$0 -> a
    java.lang.Object[] val$socketAndErrors -> b
    void run() -> run
pl.mg6.yafi.model.FreechessConnection$ConnectionState -> pl.mg6.yafi.model.e:
    pl.mg6.yafi.model.FreechessConnection$ConnectionState NotConnected -> a
    pl.mg6.yafi.model.FreechessConnection$ConnectionState Connecting -> b
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterUsernameRequest -> c
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterPasswordRequest -> d
    pl.mg6.yafi.model.FreechessConnection$ConnectionState AfterNoPasswordRequired -> e
    pl.mg6.yafi.model.FreechessConnection$ConnectionState UnableToLogOn -> f
    pl.mg6.yafi.model.FreechessConnection$ConnectionState LoggedOn -> g
    pl.mg6.yafi.model.FreechessConnection$ConnectionState Disconnected -> h
    pl.mg6.yafi.model.FreechessConnection$ConnectionState[] ENUM$VALUES -> i
    pl.mg6.yafi.model.FreechessConnection$ConnectionState[] values() -> values
    pl.mg6.yafi.model.FreechessConnection$ConnectionState valueOf(java.lang.String) -> valueOf
pl.mg6.yafi.model.FreechessConnection$Listener -> pl.mg6.yafi.model.f:
    void onConnecting() -> a
    void onInvalidUsername() -> b
    void onSendingUsername() -> c
    void onSendingPassword() -> d
    void onInvalidPassword() -> e
    void onUnableToLogOn(java.lang.String) -> a
    void onLoggedOn() -> f
    void onDisconnected() -> g
    void onReceivedOutput(java.lang.String) -> b
pl.mg6.yafi.model.FreechessModel -> pl.mg6.yafi.model.g:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessModel$Listener listener -> b
    java.lang.String output -> c
    java.util.Map activeGames -> d
    java.util.Map allGames -> e
    java.util.Map allCommunication -> f
    int currentVersion -> g
    boolean currentVersionOld -> h
    pl.mg6.yafi.model.data.WelcomeData welcomeData -> i
    boolean yafiFingered -> j
    void setCurrentVersion(int) -> a
    boolean isCurrentVersionOld() -> a
    java.lang.String getOutput() -> b
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> c
    void removeGame(java.util.UUID) -> b
    java.util.List getCommunicationById(java.lang.String) -> a
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllCommunicationIds() -> d
    pl.mg6.yafi.model.data.WelcomeData getWelcomeData() -> e
    boolean parse(java.lang.String) -> b
    void parseGameInfoMove(java.util.regex.Matcher) -> a
    void parseMove(java.util.regex.Matcher) -> b
    void parseGameInfoCreating(java.util.regex.Matcher) -> c
    void parseGameInfoFollowing(java.util.regex.Matcher) -> d
    void parseGameInfoRemovingObserved(java.util.regex.Matcher) -> e
    void parseGameInfoAcceptRemovingObserved(java.util.regex.Matcher) -> f
    void parseSeekInfoSet(java.util.regex.Matcher) -> g
    void parseSeekInfoRemove(java.util.regex.Matcher) -> h
    void parseListInfoShow(java.util.regex.Matcher) -> i
    boolean parseFinger(java.util.regex.Matcher) -> j
    void parseInchannelNumber(java.util.regex.Matcher) -> k
    void parseHandlePrefix(java.util.regex.Matcher) -> l
    void parseWhoIbslwbslx(java.lang.String) -> c
    void parseMotdExtended(java.util.regex.Matcher) -> m
    void parseNews(java.lang.String) -> d
    void parseMessages(java.lang.String) -> e
    void handleCommunication(pl.mg6.yafi.model.data.Communication) -> b
    void notifyGameCreate(java.util.UUID) -> c
    void notifyGameUpdate(java.util.UUID) -> d
    void notifySeekInfoRemove(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void notifyRemoveMatchOfferFrom(java.lang.String) -> f
    void notifyRemoveMatchOfferTo(java.lang.String) -> g
    void setListener(pl.mg6.yafi.model.FreechessModel$Listener) -> a
pl.mg6.yafi.model.FreechessModel$1 -> pl.mg6.yafi.model.h:
    pl.mg6.yafi.model.FreechessModel this$0 -> a
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
pl.mg6.yafi.model.FreechessModel$Listener -> pl.mg6.yafi.model.i:
    void onGameCreate(java.util.UUID) -> a
    void onGameUpdate(java.util.UUID) -> b
    void onIllegalMove() -> h
    void onPendingInfo(pl.mg6.yafi.model.data.PendingInfo) -> a
    void onDrawOffer() -> i
    void onAbortRequest() -> j
    void onSeekInfoSet(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void onSeekInfoSetError() -> k
    void onReceivedSeek(pl.mg6.yafi.model.data.SeekInfo) -> a
    void onRemovedSeeks(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void onCommunication(pl.mg6.yafi.model.data.Communication) -> a
    void onFinger(pl.mg6.yafi.model.data.FingerInfo) -> a
    void onVariables(pl.mg6.yafi.model.data.VariablesInfo) -> a
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onNoHistory(java.lang.String) -> c
    void onNoJournal(java.lang.String) -> d
    void onPrivateJournal() -> l
    void onUnregJournal() -> m
    void onNoAdjourned(java.lang.String) -> e
    void onInchannelInfo(pl.mg6.yafi.model.data.InchannelInfo) -> a
    void onRemoveMatchOfferFrom(java.lang.String) -> f
    void onRemoveMatchOfferTo(java.lang.String) -> g
    void onCantPlayVariantsUntimed() -> n
    void onTimeControlsTooLarge() -> o
    void onAlreadyHaveSameSeek() -> p
    void onCannotChallengeWhileExamining() -> q
    void onCannotChallengeWhilePlaying() -> r
    void onCanHave3Seeks() -> s
    void onSeekNotAvailable() -> t
    void onNotLoggedIn(java.lang.String) -> h
    void onMotdExtended(pl.mg6.yafi.model.data.WelcomeData) -> a
    void onNews(java.util.List) -> a
    void onNewsDetails(pl.mg6.yafi.model.data.NewsItem) -> a
    void onMessages(java.util.List) -> b
pl.mg6.yafi.model.FreechessService -> pl.mg6.yafi.model.FreechessService:
    java.lang.String TAG -> a
    pl.mg6.yafi.model.FreechessService$LocalBinder binder -> b
    pl.mg6.yafi.model.FreechessConnection connection -> c
    pl.mg6.yafi.model.FreechessModel model -> d
    android.media.MediaPlayer movePlayer -> e
    android.media.MediaPlayer tellPlayer -> f
    android.os.PowerManager$WakeLock wakeLock -> g
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
    void onDestroy() -> onDestroy
    void cleanup() -> u
    android.app.Notification createNotification(boolean) -> a
    void onConnecting() -> a
    void onInvalidUsername() -> b
    void onSendingUsername() -> c
    void onSendingPassword() -> d
    void onInvalidPassword() -> e
    void onUnableToLogOn(java.lang.String) -> a
    void onLoggedOn() -> f
    void onDisconnected() -> g
    void onReceivedOutput(java.lang.String) -> b
    void onGameCreate(java.util.UUID) -> a
    void onGameUpdate(java.util.UUID) -> b
    void onIllegalMove() -> h
    void onPendingInfo(pl.mg6.yafi.model.data.PendingInfo) -> a
    void onDrawOffer() -> i
    void onAbortRequest() -> j
    void onSeekInfoSet(pl.mg6.yafi.model.data.SeekInfoList) -> a
    void onSeekInfoSetError() -> k
    void onReceivedSeek(pl.mg6.yafi.model.data.SeekInfo) -> a
    void onRemovedSeeks(pl.mg6.yafi.model.data.SeekInfoList) -> b
    void onCommunication(pl.mg6.yafi.model.data.Communication) -> a
    void onFinger(pl.mg6.yafi.model.data.FingerInfo) -> a
    void onVariables(pl.mg6.yafi.model.data.VariablesInfo) -> a
    void onHistory(pl.mg6.yafi.model.data.HistoryInfo) -> a
    void onJournal(pl.mg6.yafi.model.data.JournalInfo) -> a
    void onAdjourned(pl.mg6.yafi.model.data.AdjournedInfo) -> a
    void onNoHistory(java.lang.String) -> c
    void onNoJournal(java.lang.String) -> d
    void onPrivateJournal() -> l
    void onUnregJournal() -> m
    void onNoAdjourned(java.lang.String) -> e
    void onInchannelInfo(pl.mg6.yafi.model.data.InchannelInfo) -> a
    void onRemoveMatchOfferFrom(java.lang.String) -> f
    void onRemoveMatchOfferTo(java.lang.String) -> g
    void onCantPlayVariantsUntimed() -> n
    void onTimeControlsTooLarge() -> o
    void onAlreadyHaveSameSeek() -> p
    void onCannotChallengeWhileExamining() -> q
    void onCannotChallengeWhilePlaying() -> r
    void onCanHave3Seeks() -> s
    void onSeekNotAvailable() -> t
    void onNotLoggedIn(java.lang.String) -> h
    void onMotdExtended(pl.mg6.yafi.model.data.WelcomeData) -> a
    void onNews(java.util.List) -> a
    void onNewsDetails(pl.mg6.yafi.model.data.NewsItem) -> a
    void onMessages(java.util.List) -> b
    pl.mg6.yafi.model.FreechessConnection access$0(pl.mg6.yafi.model.FreechessService) -> a
    pl.mg6.yafi.model.FreechessModel access$1(pl.mg6.yafi.model.FreechessService) -> b
    void access$2(pl.mg6.yafi.model.FreechessService) -> c
pl.mg6.yafi.model.FreechessService$FreechessServiceInterface -> pl.mg6.yafi.model.j:
    void addCallbackHandler(android.os.Handler) -> a
    void removeCallbackHandler(android.os.Handler) -> b
    void sendInput(java.lang.String) -> a
    java.lang.String getOutput() -> a
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> b
    void removeGame(java.util.UUID) -> b
    java.util.List getChat(java.lang.String) -> b
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllChatIds() -> c
    pl.mg6.yafi.model.data.WelcomeData getWelcomData() -> d
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> e
    boolean isLoggedOn() -> f
    java.lang.String getRealUsername() -> g
    boolean isRegistered() -> h
    void quit() -> i
    boolean isCurrentVersionOld() -> j
pl.mg6.yafi.model.FreechessService$LocalBinder -> pl.mg6.yafi.model.k:
    java.util.List listeners -> b
    pl.mg6.yafi.model.FreechessService this$0 -> a
    void addCallbackHandler(android.os.Handler) -> a
    void removeCallbackHandler(android.os.Handler) -> b
    pl.mg6.yafi.model.FreechessConnection$ConnectionState getState() -> e
    boolean isLoggedOn() -> f
    java.lang.String getRealUsername() -> g
    boolean isRegistered() -> h
    void sendInput(java.lang.String) -> a
    java.lang.String getOutput() -> a
    pl.mg6.yafi.model.data.Game getGame(java.util.UUID) -> a
    java.util.List getAllGamesIds() -> b
    void removeGame(java.util.UUID) -> b
    java.util.List getChat(java.lang.String) -> b
    void addMessage(pl.mg6.yafi.model.data.Communication) -> a
    java.util.List getAllChatIds() -> c
    pl.mg6.yafi.model.data.WelcomeData getWelcomData() -> d
    void sendMessage(int) -> a
    void sendMessage(int,java.lang.Object) -> a
    void quit() -> i
    boolean isCurrentVersionOld() -> j
    void access$1(pl.mg6.yafi.model.FreechessService$LocalBinder,int) -> a
    void access$2(pl.mg6.yafi.model.FreechessService$LocalBinder,int,java.lang.Object) -> a
pl.mg6.yafi.model.FreechessUtils -> pl.mg6.yafi.model.l:
    java.lang.StringBuilder builder -> aM
    java.util.regex.Pattern HACK_MULTIPLE_ACCEPTS -> a
    java.util.regex.Pattern HACK_POSTED_MANUAL_SEEK -> b
    java.util.regex.Pattern PRIVATE_TELL -> c
    java.util.regex.Pattern SAY -> d
    java.util.regex.Pattern PARTNER_TELL -> e
    java.util.regex.Pattern CHANNEL_TELL -> f
    java.util.regex.Pattern SHOUT -> g
    java.util.regex.Pattern SHOUT_IT -> h
    java.util.regex.Pattern CHESS_SHOUT -> i
    java.util.regex.Pattern ANNOUNCEMENT -> j
    java.util.regex.Pattern KIBITZ_WHISPER -> k
    java.util.regex.Pattern SEEKINFO_SET -> l
    java.util.regex.Pattern SEEKINFO_SET_SEEK -> m
    java.util.regex.Pattern SEEKINFO_SET_ERROR -> n
    java.util.regex.Pattern SEEKINFO_SEEK -> o
    java.util.regex.Pattern SEEKINFO_REMOVE -> p
    java.util.regex.Pattern SEEKINFO_UNSET -> q
    java.util.regex.Pattern PENDING -> r
    java.util.regex.Pattern DECLINE_MATCH -> s
    java.util.regex.Pattern DECLINED_MATCH -> t
    java.util.regex.Pattern WITHDRAW_MATCH -> u
    java.util.regex.Pattern WITHDRAWN_MATCH -> v
    java.util.regex.Pattern REMOVED_MATCH -> w
    java.util.regex.Pattern PENDING_OFFER_TO -> x
    java.util.regex.Pattern PENDING_OFFER_FROM -> y
    java.util.regex.Pattern GAMEINFO_MOVE -> z
    java.util.regex.Pattern GAMEINFO_MOVE_ADDITIONAL -> A
    java.util.regex.Pattern GAMEINFO_ACCEPT_DECLINE_MOVE -> B
    java.util.regex.Pattern GAMEINFO_ILLEGAL_MOVE -> C
    java.util.regex.Pattern GAMEINFO_END -> D
    java.util.regex.Pattern GAMEINFO_NOTE_END -> E
    java.util.regex.Pattern GAMEINFO_ABORTED_END -> F
    java.util.regex.Pattern GAMEINFO_CREATING -> G
    java.util.regex.Pattern GAMEINFO_OBSERVING -> H
    java.util.regex.Pattern GAMEINFO_FOLLOWING -> I
    java.util.regex.Pattern GAMEINFO_EXAMINING -> J
    java.util.regex.Pattern GAMEINFO_REMOVING_OBSERVED -> K
    java.util.regex.Pattern GAMEINFO_ACCEPT_REMOVING_OBSERVED -> L
    java.util.regex.Pattern GAMEINFO_REMOVING_EXAMINED -> M
    java.util.regex.Pattern GAMEINFO_MEXAMINED -> N
    java.util.regex.Pattern GAMEINFO_NOTE -> O
    java.util.regex.Pattern GAMEINFO_NOTE_MOVE -> P
    java.util.regex.Pattern GAMEINFO_NOTE_MOVE_NOTE -> Q
    java.util.regex.Pattern GAMEINFO_NOTE_VALUE_RESULT -> R
    java.util.regex.Pattern GAMEINFO_MOVE_NOTE -> S
    java.util.regex.Pattern GAMEINFO_MORETIME_MOVE -> T
    java.util.regex.Pattern GAMEINFO_MOVE_END -> U
    java.util.regex.Pattern GAMEINFO_AUTOFLAGGING_MOVE -> V
    java.util.regex.Pattern GAMEINFO_DRAW_OFFER -> W
    java.util.regex.Pattern GAMEINFO_ABORT_REQUEST -> X
    java.util.regex.Pattern GAME_ID -> Y
    java.util.regex.Pattern LISTINFO_SHOW -> Z
    java.util.regex.Pattern LISTINFO_ADD -> aa
    java.util.regex.Pattern LISTINFO_SUB -> ab
    java.util.regex.Pattern LISTINFO_SHOW_ENTRY -> ac
    java.util.regex.Pattern FINGER -> ad
    java.util.regex.Pattern VARIABLES -> ae
    java.util.regex.Pattern HISTORY -> af
    java.util.regex.Pattern HISTORY_ENTRY -> ag
    java.util.regex.Pattern JOURNAL -> ah
    java.util.regex.Pattern JOURNAL_ENTRY -> ai
    java.util.regex.Pattern ADJOURNED -> aj
    java.util.regex.Pattern ADJOURNED_ENTRY -> ak
    java.util.regex.Pattern NO_HISTORY -> al
    java.util.regex.Pattern NO_JOURNAL -> am
    java.util.regex.Pattern PRIVATE_JOURNAL -> an
    java.util.regex.Pattern UNREG_JOURNAL -> ao
    java.util.regex.Pattern NO_ADJOURNED -> ap
    java.util.regex.Pattern INCHANNEL_NUMBER -> aq
    java.util.regex.Pattern INCHANNEL_USER -> ar
    java.util.regex.Pattern HANDLE_PREFIX -> as
    java.util.regex.Pattern WHO_IBSLWBSLX -> at
    java.util.regex.Pattern WHO_IBSLWBSLX_LINE -> au
    java.util.regex.Pattern COMMAND_NOT_FOUND -> av
    java.util.regex.Pattern CANT_PLAY_VARIANTS_UNTIMED -> aw
    java.util.regex.Pattern TIME_CONTROLS_TOO_LARGE -> ax
    java.util.regex.Pattern ALREADY_HAVE_SAME_SEEK -> ay
    java.util.regex.Pattern CANNOT_CHALLENGE_WHILE_EXAMINING -> az
    java.util.regex.Pattern CANNOT_CHALLENGE_WHILE_PLAYING -> aA
    java.util.regex.Pattern CAN_HAVE_3_SEEKS -> aB
    java.util.regex.Pattern SEEK_NOT_AVAILABLE -> aC
    java.util.regex.Pattern NOT_LOGGED_IN -> aD
    java.util.regex.Pattern MOVES -> aE
    java.util.regex.Pattern MOTD_EXTENDED -> aF
    java.util.regex.Pattern NEWS -> aG
    java.util.regex.Pattern NEWS_ITEM -> aH
    java.util.regex.Pattern NEWS_DETAILS -> aI
    java.util.regex.Pattern NEWS_DETAILS_SEPARATOR -> aJ
    java.util.regex.Pattern MESSAGES -> aK
    java.util.regex.Pattern MESSAGE_ITEM -> aL
    boolean validateUsername(java.lang.String) -> a
    java.lang.String moveToString(int,int,int,int) -> a
    boolean isGuest(int) -> a
pl.mg6.yafi.model.TelnetProtocolImpl -> pl.mg6.yafi.model.m:
    java.io.InputStream istream -> a
    java.io.OutputStream ostream -> b
    int read(byte[]) -> a
    int read(byte[],int,int) -> a
    void write(int) -> a
    void write(byte[]) -> b
    void write$1cf967a4(byte[],int) -> a
    void flush() -> a
pl.mg6.yafi.model.TimesealProtocolImpl -> pl.mg6.yafi.model.n:
    pl.mg6.yafi.model.TelnetProtocolImpl telnet -> a
    byte[] stamp -> b
    byte[] stampReply -> c
    byte[] about -> d
    byte[] readBuffer -> e
    byte[] writeBuffer -> f
    int readBufferCount -> g
    int writeBufferCount -> h
    byte[] encodeBuffer -> i
    long startTime -> j
    int read(byte[]) -> a
    void write(int) -> a
    void write(byte[]) -> b
    void write$1cf967a4(byte[],int) -> a
pl.mg6.yafi.model.data.AbortPendingOffer -> pl.mg6.yafi.model.data.a:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.AdjournPendingOffer -> pl.mg6.yafi.model.data.b:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.AdjournedInfo -> pl.mg6.yafi.model.data.c:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.AdjournedInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.AdjournedInfo$Entry -> pl.mg6.yafi.model.data.d:
    pl.mg6.yafi.model.data.Color color -> b
    java.lang.String opponentName -> c
    boolean opponentOnline -> d
    char type -> e
    boolean rated -> f
    int time -> g
    int increment -> h
    int whiteStrength -> i
    int blackStrength -> j
    pl.mg6.yafi.model.data.Color getColor() -> a
    java.lang.String getOpponentName() -> b
    int getTime() -> c
    int getIncrement() -> d
    int getWhiteStrength() -> e
    int getBlackStrength() -> f
    pl.mg6.yafi.model.data.AdjournedInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.ChallengePendingOffer -> pl.mg6.yafi.model.data.e:
    boolean rated -> a
    java.lang.String type -> b
    int time -> c
    int increment -> d
    boolean isRated() -> a
    java.lang.String getType() -> b
    int getTime() -> c
    int getIncrement() -> d
pl.mg6.yafi.model.data.Color -> pl.mg6.yafi.model.data.f:
    pl.mg6.yafi.model.data.Color WHITE -> a
    pl.mg6.yafi.model.data.Color BLACK -> b
pl.mg6.yafi.model.data.Communication -> pl.mg6.yafi.model.data.g:
    java.lang.String id -> a
    pl.mg6.yafi.model.data.Communication$Type type -> b
    java.lang.String name -> c
    java.lang.String message -> d
    java.util.Date time -> e
    java.lang.String getId() -> a
    java.lang.String getName() -> b
    java.lang.String getMessage() -> c
    java.util.Date getTime() -> d
    boolean isPrivate() -> e
    pl.mg6.yafi.model.data.Communication createPrivateTell(java.lang.String,java.lang.String) -> a
    pl.mg6.yafi.model.data.Communication createSay(java.lang.String,java.lang.String) -> b
    pl.mg6.yafi.model.data.Communication createPartnerTell(java.lang.String,java.lang.String) -> c
    pl.mg6.yafi.model.data.Communication createChannelTell(java.lang.String,java.lang.String,java.lang.String) -> a
    pl.mg6.yafi.model.data.Communication createAnnouncement(java.lang.String,java.lang.String) -> d
    pl.mg6.yafi.model.data.Communication createShout(java.lang.String,java.lang.String) -> e
    pl.mg6.yafi.model.data.Communication createShoutIt(java.lang.String,java.lang.String) -> f
    pl.mg6.yafi.model.data.Communication createChessShout(java.lang.String,java.lang.String) -> g
    pl.mg6.yafi.model.data.Communication createKibitz(java.lang.String,java.lang.String,java.lang.String) -> b
    pl.mg6.yafi.model.data.Communication createWhisper(java.lang.String,java.lang.String,java.lang.String) -> c
    pl.mg6.yafi.model.data.Communication create(java.lang.String,java.lang.String,java.lang.String) -> d
pl.mg6.yafi.model.data.Communication$Type -> pl.mg6.yafi.model.data.h:
    pl.mg6.yafi.model.data.Communication$Type PrivateTell -> a
    pl.mg6.yafi.model.data.Communication$Type Say -> b
    pl.mg6.yafi.model.data.Communication$Type PartnerTell -> c
    pl.mg6.yafi.model.data.Communication$Type ChannelTell -> d
    pl.mg6.yafi.model.data.Communication$Type Announcement -> e
    pl.mg6.yafi.model.data.Communication$Type Shout -> f
    pl.mg6.yafi.model.data.Communication$Type ShoutIt -> g
    pl.mg6.yafi.model.data.Communication$Type ChessShout -> h
    pl.mg6.yafi.model.data.Communication$Type Kibitz -> i
    pl.mg6.yafi.model.data.Communication$Type Whisper -> j
    pl.mg6.yafi.model.data.Communication$Type[] ENUM$VALUES -> k
    pl.mg6.yafi.model.data.Communication$Type[] values() -> values
    pl.mg6.yafi.model.data.Communication$Type valueOf(java.lang.String) -> valueOf
pl.mg6.yafi.model.data.DrawPendingOffer -> pl.mg6.yafi.model.data.i:
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.FingerInfo -> pl.mg6.yafi.model.data.j:
    java.lang.String user -> a
    java.lang.String[] titles -> b
    java.lang.String[] NO_TITLES -> c
    pl.mg6.yafi.model.data.RatingInfo blitz -> d
    pl.mg6.yafi.model.data.RatingInfo standard -> e
    pl.mg6.yafi.model.data.RatingInfo lightning -> f
    pl.mg6.yafi.model.data.RatingInfo wild -> g
    pl.mg6.yafi.model.data.RatingInfo buhouse -> h
    pl.mg6.yafi.model.data.RatingInfo crazyhouse -> i
    pl.mg6.yafi.model.data.RatingInfo suicide -> j
    pl.mg6.yafi.model.data.RatingInfo losers -> k
    pl.mg6.yafi.model.data.RatingInfo atomic -> l
    java.util.List lines -> m
    java.lang.String getUser() -> a
    java.lang.String[] getTitles() -> b
    pl.mg6.yafi.model.data.RatingInfo getBlitz() -> c
    pl.mg6.yafi.model.data.RatingInfo getStandard() -> d
    pl.mg6.yafi.model.data.RatingInfo getLightning() -> e
    pl.mg6.yafi.model.data.RatingInfo getWild() -> f
    pl.mg6.yafi.model.data.RatingInfo getBuhouse() -> g
    pl.mg6.yafi.model.data.RatingInfo getCrazyhouse() -> h
    pl.mg6.yafi.model.data.RatingInfo getSuicide() -> i
    pl.mg6.yafi.model.data.RatingInfo getLosers() -> j
    pl.mg6.yafi.model.data.RatingInfo getAtomic() -> k
    int getLineCount() -> l
    java.lang.String getLine(int) -> a
    pl.mg6.yafi.model.data.FingerInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.Game -> pl.mg6.yafi.model.data.k:
    java.util.List positions -> a
    java.util.UUID uuid -> b
    long gameTimestamp -> c
    int id -> d
    java.lang.String whiteName -> e
    java.lang.String blackName -> f
    java.lang.String whiteRating -> g
    java.lang.String blackRating -> h
    pl.mg6.yafi.model.data.Color toMove -> i
    int whiteTime -> j
    int blackTime -> k
    long timestamp -> l
    boolean timeRunning -> m
    java.lang.String result -> n
    java.lang.String description -> o
    boolean flip -> p
    boolean userFlip -> q
    int relation -> r
    void addPosition(pl.mg6.yafi.model.data.Position) -> a
    int getPositionCount() -> a
    pl.mg6.yafi.model.data.Position getPosition(int) -> a
    java.util.UUID getUUID() -> b
    long getGameTimestamp() -> c
    int getId() -> d
    java.lang.String getWhiteName() -> e
    java.lang.String getBlackName() -> f
    java.lang.String getWhiteRating() -> g
    void setWhiteRating(java.lang.String) -> a
    java.lang.String getBlackRating() -> h
    void setBlackRating(java.lang.String) -> b
    boolean isTimeRunning() -> i
    java.lang.String getResult() -> j
    java.lang.String getDescription() -> k
    boolean isFlip() -> l
    void toggleUserFlip() -> m
    int getRelation() -> n
    void setRelation$13462e() -> o
    int getCurrentWhiteTime() -> r
    int getCurrentBlackTime() -> s
    java.lang.String getCurrentWhiteTimeString() -> p
    java.lang.String getCurrentBlackTimeString() -> q
    void setResult(java.lang.String,java.lang.String) -> a
pl.mg6.yafi.model.data.HistoricalGameEntry -> pl.mg6.yafi.model.data.l:
    java.lang.String id -> a
    java.lang.String getId() -> g
pl.mg6.yafi.model.data.HistoryInfo -> pl.mg6.yafi.model.data.m:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.HistoryInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.HistoryInfo$Entry -> pl.mg6.yafi.model.data.n:
    int result -> b
    int rating -> c
    pl.mg6.yafi.model.data.Color color -> d
    int opponentRating -> e
    java.lang.String opponentName -> f
    char type -> g
    boolean rated -> h
    int time -> i
    int increment -> j
    java.lang.String eco -> k
    java.lang.String resultDescription -> l
    java.lang.String date -> m
    int getResult() -> a
    int getRating() -> b
    pl.mg6.yafi.model.data.Color getColor() -> c
    int getOpponentRating() -> d
    java.lang.String getOpponentName() -> e
    int getTime() -> f
    int getIncrement() -> h
    pl.mg6.yafi.model.data.HistoryInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.InchannelInfo -> pl.mg6.yafi.model.data.o:
    java.lang.String channelNumber -> a
    java.lang.String channelName -> b
    java.util.List users -> c
    void add(java.lang.String) -> a
    java.lang.String getChannelNumber() -> a
    int getUsersCount() -> b
    java.lang.String getUser(int) -> a
pl.mg6.yafi.model.data.JournalInfo -> pl.mg6.yafi.model.data.p:
    java.lang.String TAG -> a
    java.lang.String user -> b
    java.util.List entries -> c
    java.lang.String getUser() -> a
    java.util.Iterator iterator() -> iterator
    pl.mg6.yafi.model.data.JournalInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.JournalInfo$Entry -> pl.mg6.yafi.model.data.q:
    java.lang.String whiteName -> b
    int whiteRating -> c
    java.lang.String blackName -> d
    int blackRating -> e
    char type -> f
    boolean rated -> g
    int time -> h
    int increment -> i
    java.lang.String eco -> j
    java.lang.String resultDescription -> k
    java.lang.String result -> l
    java.lang.String getWhiteName() -> a
    int getWhiteRating() -> b
    java.lang.String getBlackName() -> c
    int getBlackRating() -> d
    int getTime() -> e
    int getIncrement() -> f
    java.lang.String getResult() -> h
    pl.mg6.yafi.model.data.JournalInfo$Entry access$0(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.NewsItem -> pl.mg6.yafi.model.data.NewsItem:
    int id -> a
    java.lang.String date -> b
    java.lang.String title -> c
    java.lang.String message -> d
    java.lang.String author -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    java.lang.String getDate() -> b
    java.lang.String getTitle() -> c
    java.lang.String getMessage() -> d
    java.lang.String getAuthor() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    pl.mg6.yafi.model.data.NewsItem fromListMatcher(java.util.regex.Matcher) -> a
    pl.mg6.yafi.model.data.NewsItem fromDetailsMatcher(java.util.regex.Matcher) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
    void access$1(pl.mg6.yafi.model.data.NewsItem,int) -> a
    void access$2(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> a
    void access$3(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> b
    void access$4(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> c
    void access$5(pl.mg6.yafi.model.data.NewsItem,java.lang.String) -> d
pl.mg6.yafi.model.data.NewsItem$1 -> pl.mg6.yafi.model.data.r:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
pl.mg6.yafi.model.data.PendingInfo -> pl.mg6.yafi.model.data.s:
    java.util.List sentOffers -> a
    java.util.List receivedOffers -> b
    int getSentOfferCount() -> a
    pl.mg6.yafi.model.data.PendingOffer getSentOffer(int) -> a
    int getReceivedOffersCount() -> b
    pl.mg6.yafi.model.data.PendingOffer getReceivedOffer(int) -> b
    pl.mg6.yafi.model.data.PendingInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.PendingOffer -> pl.mg6.yafi.model.data.t:
    int id -> a
    java.lang.String name -> b
    int getId() -> e
    java.lang.String getName() -> f
    pl.mg6.yafi.model.data.PendingOffer fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.Position -> pl.mg6.yafi.model.data.u:
    long timestamp -> a
    java.lang.String[] placement -> b
    pl.mg6.yafi.model.data.Color toMove -> c
    int enPassantFile -> d
    boolean[] casting -> e
    int movesSinceIrreversible -> f
    int gameId -> g
    java.lang.String whiteName -> h
    java.lang.String blackName -> i
    int relation -> j
    int initialTime -> k
    int timeIncrement -> l
    int whiteStrength -> m
    int blackStrength -> n
    int whiteTime -> o
    int blackTime -> p
    int nextMoveNumber -> q
    java.lang.String verboseMove -> r
    java.lang.String timeTaken -> s
    java.lang.String prettyMove -> t
    boolean flip -> u
    boolean timeRunning -> v
    int lag -> w
    long getTimestamp() -> a
    pl.mg6.yafi.model.data.Color getToMove() -> b
    int getGameId() -> c
    java.lang.String getWhiteName() -> d
    java.lang.String getBlackName() -> e
    int getRelation() -> f
    int getWhiteTime() -> g
    int getBlackTime() -> h
    int getCurrentMoveNumber() -> i
    java.lang.String getVerboseMove() -> j
    java.lang.String getPrettyMove() -> k
    boolean isFlip() -> l
    boolean isTimeRunning() -> m
    int getLag() -> n
    int getMoveIndex() -> o
    char getPieceAt(int,int) -> a
    pl.mg6.yafi.model.data.Position fromStyle12(java.lang.String) -> a
pl.mg6.yafi.model.data.RatingInfo -> pl.mg6.yafi.model.data.v:
    java.lang.String rating -> a
    java.lang.String rd -> b
    int wins -> c
    int losses -> d
    int draws -> e
    int total -> f
    java.lang.String best -> g
    java.lang.String getRating() -> a
    int getWins() -> b
    int getDraws() -> c
    int getTotal() -> d
    java.lang.String getBest() -> e
    pl.mg6.yafi.model.data.RatingInfo fromFingerMatch(java.util.regex.Matcher,int) -> a
pl.mg6.yafi.model.data.ReceivedMessage -> pl.mg6.yafi.model.data.w:
    int id -> a
    java.lang.String from -> b
    java.lang.String date -> c
    java.lang.String content -> d
    int getId() -> a
    void decrementId() -> b
    java.lang.String getFrom() -> c
    java.lang.String getDate() -> d
    java.lang.String getContent() -> e
    pl.mg6.yafi.model.data.ReceivedMessage fromMatcher(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.SeekInfo -> pl.mg6.yafi.model.data.x:
    int id -> a
    java.lang.String name -> b
    int titles -> c
    int rating -> d
    java.lang.String type -> e
    int time -> f
    int increment -> g
    boolean rated -> h
    boolean manual -> i
    int getId() -> a
    java.lang.String getName() -> b
    int getTitles() -> c
    int getRating() -> d
    java.lang.String getType() -> e
    int getTime() -> f
    int getIncrement() -> g
    boolean isRated() -> h
    boolean isManual() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    pl.mg6.yafi.model.data.SeekInfo fromMatch(java.util.regex.Matcher) -> a
    pl.mg6.yafi.model.data.SeekInfo withId(java.lang.String) -> a
pl.mg6.yafi.model.data.SeekInfoList -> pl.mg6.yafi.model.data.y:
    java.util.List list -> a
    void add(pl.mg6.yafi.model.data.SeekInfo) -> a
    java.util.Iterator iterator() -> iterator
pl.mg6.yafi.model.data.TakebackPendingOffer -> pl.mg6.yafi.model.data.z:
    int moves -> a
    java.lang.String toString() -> toString
pl.mg6.yafi.model.data.UserTitle -> pl.mg6.yafi.model.data.aa:
    java.util.Map abbrTextMap -> a
    int abbrToText(java.lang.String) -> a
pl.mg6.yafi.model.data.VariablesInfo -> pl.mg6.yafi.model.data.ab:
    java.lang.String user -> a
    java.lang.String clientName -> b
    java.lang.String getUser() -> a
    java.lang.String getClientName() -> b
    pl.mg6.yafi.model.data.VariablesInfo fromMatch(java.util.regex.Matcher) -> a
pl.mg6.yafi.model.data.WelcomeData -> pl.mg6.yafi.model.data.ac:
    java.util.List newsItems -> a
    int unreadMessages -> b
    int allMessages -> c
    java.lang.String[] friends -> d
    java.util.List getNewsItems() -> a
    int getUnreadMessages() -> b
    void resetUnreadMessages() -> c
    int getAllMessages() -> d
    void decrementAllMessages() -> e
pl.mg6.yafi.model.data.seek.filters.AllSeekFilter -> pl.mg6.yafi.model.data.a.a.a:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.ComputerSeekFilter -> pl.mg6.yafi.model.data.a.a.b:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.GameTypeSeekFilter -> pl.mg6.yafi.model.data.a.a.c:
    java.util.regex.Pattern gameTypePattern -> a
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.GuestSeekFilter -> pl.mg6.yafi.model.data.a.a.d:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.RatingSeekFilter -> pl.mg6.yafi.model.data.a.a.e:
    int minRating -> a
    int maxRating -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.RegisteredUserSeekFilter -> pl.mg6.yafi.model.data.a.a.f:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.SeekFilter -> pl.mg6.yafi.model.data.a.a.g:
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
pl.mg6.yafi.model.data.seek.filters.TimeSeekFilter -> pl.mg6.yafi.model.data.a.a.h:
    int minTime -> a
    int maxTime -> b
    boolean matches(pl.mg6.yafi.model.data.SeekInfo) -> a
